

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Feb 28 14:57:07 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F1709
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	text38,local,class=CODE,merge=1,delta=2
    56                           	psect	text39,local,class=CODE,merge=1,delta=2
    57                           	psect	text40,local,class=CODE,merge=1,delta=2
    58                           	psect	text41,local,class=CODE,merge=1,delta=2
    59                           	psect	text42,local,class=CODE,merge=1,delta=2
    60                           	psect	text43,local,class=CODE,merge=1,delta=2
    61                           	psect	text44,local,class=CODE,merge=1,delta=2
    62                           	psect	text45,local,class=CODE,merge=1,delta=2
    63                           	psect	text46,local,class=CODE,merge=1,delta=2
    64                           	psect	text47,local,class=CODE,merge=1,delta=2
    65                           	psect	text48,local,class=CODE,merge=1,delta=2
    66                           	psect	text49,local,class=CODE,merge=1,delta=2
    67                           	psect	text50,local,class=CODE,merge=1,delta=2
    68                           	psect	text51,local,class=CODE,merge=1,delta=2
    69                           	psect	text52,local,class=CODE,merge=1,delta=2
    70                           	psect	text53,local,class=CODE,merge=1,delta=2
    71                           	psect	text54,local,class=CODE,merge=1,delta=2
    72                           	psect	text55,local,class=CODE,merge=1,delta=2
    73                           	psect	text56,local,class=CODE,merge=1,delta=2
    74                           	psect	text57,local,class=CODE,merge=1,delta=2
    75                           	psect	text58,local,class=CODE,merge=1,delta=2
    76                           	psect	text59,local,class=CODE,merge=1,delta=2
    77                           	psect	text60,local,class=CODE,merge=1,delta=2
    78                           	psect	text61,local,class=CODE,merge=1,delta=2
    79                           	psect	text62,local,class=CODE,merge=1,delta=2
    80                           	psect	text63,local,class=CODE,merge=1,delta=2
    81                           	psect	text64,local,class=CODE,merge=1,delta=2
    82                           	psect	text65,local,class=CODE,merge=1,delta=2
    83                           	psect	text66,local,class=CODE,merge=1,delta=2
    84                           	psect	text67,local,class=CODE,merge=1,delta=2
    85                           	psect	text68,local,class=CODE,merge=1,delta=2
    86                           	psect	text69,local,class=CODE,merge=1,delta=2
    87                           	psect	text70,local,class=CODE,merge=1,delta=2
    88                           	psect	text71,local,class=CODE,merge=1,delta=2
    89                           	psect	text72,local,class=CODE,merge=1,delta=2
    90                           	psect	text73,local,class=CODE,merge=1,delta=2
    91                           	psect	text74,local,class=CODE,merge=1,delta=2
    92                           	psect	text75,local,class=CODE,merge=1,delta=2
    93                           	psect	text76,local,class=CODE,merge=1,delta=2
    94                           	psect	text77,local,class=CODE,merge=1,delta=2
    95                           	psect	text78,local,class=CODE,merge=1,delta=2
    96                           	psect	text79,local,class=CODE,merge=1,delta=2
    97                           	psect	text80,local,class=CODE,merge=1,delta=2
    98                           	psect	text81,local,class=CODE,merge=1,delta=2
    99                           	dabs	1,0x7E,2
   100  0000                     	;# 
   101  0001                     	;# 
   102  0002                     	;# 
   103  0003                     	;# 
   104  0004                     	;# 
   105  0005                     	;# 
   106  0006                     	;# 
   107  0007                     	;# 
   108  0008                     	;# 
   109  0009                     	;# 
   110  000A                     	;# 
   111  000B                     	;# 
   112  000C                     	;# 
   113  000D                     	;# 
   114  000E                     	;# 
   115  0011                     	;# 
   116  0012                     	;# 
   117  0013                     	;# 
   118  0015                     	;# 
   119  0016                     	;# 
   120  0016                     	;# 
   121  0017                     	;# 
   122  0018                     	;# 
   123  0019                     	;# 
   124  001A                     	;# 
   125  001B                     	;# 
   126  001C                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  0091                     	;# 
   131  0092                     	;# 
   132  0093                     	;# 
   133  0095                     	;# 
   134  0096                     	;# 
   135  0097                     	;# 
   136  0098                     	;# 
   137  0099                     	;# 
   138  009A                     	;# 
   139  009B                     	;# 
   140  009B                     	;# 
   141  009C                     	;# 
   142  009D                     	;# 
   143  009E                     	;# 
   144  009F                     	;# 
   145  010C                     	;# 
   146  010D                     	;# 
   147  010E                     	;# 
   148  0111                     	;# 
   149  0112                     	;# 
   150  0113                     	;# 
   151  0114                     	;# 
   152  0115                     	;# 
   153  0116                     	;# 
   154  0117                     	;# 
   155  0118                     	;# 
   156  0119                     	;# 
   157  011C                     	;# 
   158  018C                     	;# 
   159  018D                     	;# 
   160  018E                     	;# 
   161  0191                     	;# 
   162  0191                     	;# 
   163  0192                     	;# 
   164  0193                     	;# 
   165  0193                     	;# 
   166  0194                     	;# 
   167  0195                     	;# 
   168  0196                     	;# 
   169  0197                     	;# 
   170  0199                     	;# 
   171  0199                     	;# 
   172  0199                     	;# 
   173  019A                     	;# 
   174  019A                     	;# 
   175  019A                     	;# 
   176  019B                     	;# 
   177  019B                     	;# 
   178  019B                     	;# 
   179  019B                     	;# 
   180  019B                     	;# 
   181  019C                     	;# 
   182  019C                     	;# 
   183  019C                     	;# 
   184  019D                     	;# 
   185  019D                     	;# 
   186  019D                     	;# 
   187  019E                     	;# 
   188  019E                     	;# 
   189  019E                     	;# 
   190  019F                     	;# 
   191  019F                     	;# 
   192  019F                     	;# 
   193  019F                     	;# 
   194  019F                     	;# 
   195  020C                     	;# 
   196  020D                     	;# 
   197  020E                     	;# 
   198  0211                     	;# 
   199  0211                     	;# 
   200  0212                     	;# 
   201  0212                     	;# 
   202  0213                     	;# 
   203  0213                     	;# 
   204  0214                     	;# 
   205  0214                     	;# 
   206  0215                     	;# 
   207  0215                     	;# 
   208  0215                     	;# 
   209  0215                     	;# 
   210  0216                     	;# 
   211  0216                     	;# 
   212  0217                     	;# 
   213  0217                     	;# 
   214  028C                     	;# 
   215  028D                     	;# 
   216  028E                     	;# 
   217  0291                     	;# 
   218  0291                     	;# 
   219  0292                     	;# 
   220  0293                     	;# 
   221  0293                     	;# 
   222  0298                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  029A                     	;# 
   226  029A                     	;# 
   227  029E                     	;# 
   228  030C                     	;# 
   229  030D                     	;# 
   230  030E                     	;# 
   231  038C                     	;# 
   232  038D                     	;# 
   233  038E                     	;# 
   234  0391                     	;# 
   235  0392                     	;# 
   236  0393                     	;# 
   237  0394                     	;# 
   238  0395                     	;# 
   239  0396                     	;# 
   240  0397                     	;# 
   241  0398                     	;# 
   242  0399                     	;# 
   243  0415                     	;# 
   244  0416                     	;# 
   245  0417                     	;# 
   246  041C                     	;# 
   247  041D                     	;# 
   248  041E                     	;# 
   249  0511                     	;# 
   250  0515                     	;# 
   251  0617                     	;# 
   252  0618                     	;# 
   253  0619                     	;# 
   254  0619                     	;# 
   255  061A                     	;# 
   256  061B                     	;# 
   257  061C                     	;# 
   258  061C                     	;# 
   259  0691                     	;# 
   260  0692                     	;# 
   261  0693                     	;# 
   262  0694                     	;# 
   263  0695                     	;# 
   264  0696                     	;# 
   265  0697                     	;# 
   266  0698                     	;# 
   267  0699                     	;# 
   268  069A                     	;# 
   269  069B                     	;# 
   270  069C                     	;# 
   271  069D                     	;# 
   272  069E                     	;# 
   273  069F                     	;# 
   274  0E0F                     	;# 
   275  0E10                     	;# 
   276  0E11                     	;# 
   277  0E12                     	;# 
   278  0E13                     	;# 
   279  0E14                     	;# 
   280  0E15                     	;# 
   281  0E17                     	;# 
   282  0E20                     	;# 
   283  0E21                     	;# 
   284  0E22                     	;# 
   285  0E24                     	;# 
   286  0E25                     	;# 
   287  0E28                     	;# 
   288  0E29                     	;# 
   289  0E2A                     	;# 
   290  0E2B                     	;# 
   291  0E90                     	;# 
   292  0E91                     	;# 
   293  0E92                     	;# 
   294  0E94                     	;# 
   295  0E95                     	;# 
   296  0E9C                     	;# 
   297  0E9D                     	;# 
   298  0E9E                     	;# 
   299  0E9F                     	;# 
   300  0EA0                     	;# 
   301  0EA1                     	;# 
   302  0EA2                     	;# 
   303  0EA3                     	;# 
   304  0EA4                     	;# 
   305  0EA5                     	;# 
   306  0EA6                     	;# 
   307  0EA7                     	;# 
   308  0F0F                     	;# 
   309  0F10                     	;# 
   310  0F11                     	;# 
   311  0F12                     	;# 
   312  0F13                     	;# 
   313  0F14                     	;# 
   314  0F15                     	;# 
   315  0F16                     	;# 
   316  0F17                     	;# 
   317  0F18                     	;# 
   318  0F19                     	;# 
   319  0F1A                     	;# 
   320  0F1B                     	;# 
   321  0F1C                     	;# 
   322  0F1D                     	;# 
   323  0F1E                     	;# 
   324  0F1F                     	;# 
   325  0F20                     	;# 
   326  0F21                     	;# 
   327  0F22                     	;# 
   328  0F23                     	;# 
   329  0F24                     	;# 
   330  0F25                     	;# 
   331  0F26                     	;# 
   332  0F27                     	;# 
   333  0F28                     	;# 
   334  0F29                     	;# 
   335  0F2A                     	;# 
   336  0F2B                     	;# 
   337  0F2C                     	;# 
   338  0F2D                     	;# 
   339  0F9E                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351                           
   352                           	psect	idataBANK1
   353  1CC3                     __pidataBANK1:	
   354                           
   355                           ;initializer for _RFID_CARD_NUMBER
   356  1CC3  346A               	retlw	low (STR_1| (0+32768))
   357  1CC4  348E               	retlw	high (STR_1| (0+32768))
   358                           
   359                           	psect	stringtext
   360  0800                     __pstringtext:	
   361  0800                     _dpowers:	
   362  0800  3401               	retlw	1
   363  0801  3400               	retlw	0
   364  0802  340A               	retlw	10
   365  0803  3400               	retlw	0
   366  0804  3464               	retlw	100
   367  0805  3400               	retlw	0
   368  0806  34E8               	retlw	232
   369  0807  3403               	retlw	3
   370  0808  3410               	retlw	16
   371  0809  3427               	retlw	39
   372  080A                     __end_of_dpowers:	
   373  080A                     _hexpowers:	
   374  080A  3401               	retlw	1
   375  080B  3400               	retlw	0
   376  080C  3410               	retlw	16
   377  080D  3400               	retlw	0
   378  080E  3400               	retlw	0
   379  080F  3401               	retlw	1
   380  0810  3400               	retlw	0
   381  0811  3410               	retlw	16
   382  0812                     __end_of_hexpowers:	
   383  0812                     _Terminal12x16:	
   384  0812  3400               	retlw	0
   385  0813  3400               	retlw	0
   386  0814  3438               	retlw	56
   387  0815  3400               	retlw	0
   388  0816  343C               	retlw	60
   389  0817  3400               	retlw	0
   390  0818  340E               	retlw	14
   391  0819  3400               	retlw	0
   392  081A  3406               	retlw	6
   393  081B  3400               	retlw	0
   394  081C  3406               	retlw	6
   395  081D  346F               	retlw	111
   396  081E  3486               	retlw	134
   397  081F  346F               	retlw	111
   398  0820  34C6               	retlw	198
   399  0821  3401               	retlw	1
   400  0822  34EE               	retlw	238
   401  0823  3400               	retlw	0
   402  0824  347C               	retlw	124
   403  0825  3400               	retlw	0
   404  0826  3438               	retlw	56
   405  0827  3400               	retlw	0
   406  0828  3400               	retlw	0
   407  0829  3400               	retlw	0
   408  082A  3400               	retlw	0
   409  082B  3400               	retlw	0
   410  082C  3400               	retlw	0
   411  082D  3400               	retlw	0
   412  082E  3400               	retlw	0
   413  082F  3400               	retlw	0
   414  0830  3400               	retlw	0
   415  0831  3400               	retlw	0
   416  0832  3400               	retlw	0
   417  0833  3400               	retlw	0
   418  0834  3400               	retlw	0
   419  0835  3400               	retlw	0
   420  0836  3400               	retlw	0
   421  0837  3400               	retlw	0
   422  0838  3400               	retlw	0
   423  0839  3400               	retlw	0
   424  083A  3400               	retlw	0
   425  083B  3400               	retlw	0
   426  083C  3400               	retlw	0
   427  083D  3400               	retlw	0
   428  083E  3400               	retlw	0
   429  083F  3400               	retlw	0
   430  0840  3400               	retlw	0
   431  0841  3400               	retlw	0
   432  0842  3400               	retlw	0
   433  0843  3400               	retlw	0
   434  0844  3400               	retlw	0
   435  0845  3470               	retlw	112
   436  0846  3400               	retlw	0
   437  0847  347E               	retlw	126
   438  0848  34C0               	retlw	192
   439  0849  340F               	retlw	15
   440  084A  34F8               	retlw	248
   441  084B  340D               	retlw	13
   442  084C  343E               	retlw	62
   443  084D  340C               	retlw	12
   444  084E  343E               	retlw	62
   445  084F  340C               	retlw	12
   446  0850  34F8               	retlw	248
   447  0851  340D               	retlw	13
   448  0852  34C0               	retlw	192
   449  0853  340F               	retlw	15
   450  0854  3400               	retlw	0
   451  0855  347E               	retlw	126
   452  0856  3400               	retlw	0
   453  0857  3470               	retlw	112
   454  0858  3400               	retlw	0
   455  0859  3400               	retlw	0
   456  085A  3400               	retlw	0
   457  085B  3400               	retlw	0
   458  085C  34FE               	retlw	254
   459  085D  347F               	retlw	127
   460  085E  34FE               	retlw	254
   461  085F  347F               	retlw	127
   462  0860  3486               	retlw	134
   463  0861  3461               	retlw	97
   464  0862  3486               	retlw	134
   465  0863  3461               	retlw	97
   466  0864  3486               	retlw	134
   467  0865  3461               	retlw	97
   468  0866  3486               	retlw	134
   469  0867  3461               	retlw	97
   470  0868  34CE               	retlw	206
   471  0869  3461               	retlw	97
   472  086A  34FC               	retlw	252
   473  086B  3473               	retlw	115
   474  086C  3478               	retlw	120
   475  086D  343F               	retlw	63
   476  086E  3400               	retlw	0
   477  086F  341E               	retlw	30
   478  0870  3400               	retlw	0
   479  0871  3400               	retlw	0
   480  0872  3400               	retlw	0
   481  0873  3400               	retlw	0
   482  0874  34E0               	retlw	224
   483  0875  3407               	retlw	7
   484  0876  34F8               	retlw	248
   485  0877  341F               	retlw	31
   486  0878  341C               	retlw	28
   487  0879  3438               	retlw	56
   488  087A  340E               	retlw	14
   489  087B  3470               	retlw	112
   490  087C  3406               	retlw	6
   491  087D  3460               	retlw	96
   492  087E  3406               	retlw	6
   493  087F  3460               	retlw	96
   494  0880  3406               	retlw	6
   495  0881  3460               	retlw	96
   496  0882  340E               	retlw	14
   497  0883  3470               	retlw	112
   498  0884  341C               	retlw	28
   499  0885  3438               	retlw	56
   500  0886  3418               	retlw	24
   501  0887  3418               	retlw	24
   502  0888  3400               	retlw	0
   503  0889  3400               	retlw	0
   504  088A  3400               	retlw	0
   505  088B  3400               	retlw	0
   506  088C  34FE               	retlw	254
   507  088D  347F               	retlw	127
   508  088E  34FE               	retlw	254
   509  088F  347F               	retlw	127
   510  0890  3406               	retlw	6
   511  0891  3460               	retlw	96
   512  0892  3406               	retlw	6
   513  0893  3460               	retlw	96
   514  0894  3406               	retlw	6
   515  0895  3460               	retlw	96
   516  0896  3406               	retlw	6
   517  0897  3460               	retlw	96
   518  0898  340E               	retlw	14
   519  0899  3470               	retlw	112
   520  089A  341C               	retlw	28
   521  089B  3438               	retlw	56
   522  089C  34F8               	retlw	248
   523  089D  341F               	retlw	31
   524  089E  34E0               	retlw	224
   525  089F  3407               	retlw	7
   526  08A0  3400               	retlw	0
   527  08A1  3400               	retlw	0
   528  08A2  3400               	retlw	0
   529  08A3  3400               	retlw	0
   530  08A4  34FE               	retlw	254
   531  08A5  347F               	retlw	127
   532  08A6  34FE               	retlw	254
   533  08A7  347F               	retlw	127
   534  08A8  3486               	retlw	134
   535  08A9  3461               	retlw	97
   536  08AA  3486               	retlw	134
   537  08AB  3461               	retlw	97
   538  08AC  3486               	retlw	134
   539  08AD  3461               	retlw	97
   540  08AE  3486               	retlw	134
   541  08AF  3461               	retlw	97
   542  08B0  3486               	retlw	134
   543  08B1  3461               	retlw	97
   544  08B2  3486               	retlw	134
   545  08B3  3461               	retlw	97
   546  08B4  3406               	retlw	6
   547  08B5  3460               	retlw	96
   548  08B6  3406               	retlw	6
   549  08B7  3460               	retlw	96
   550  08B8  3400               	retlw	0
   551  08B9  3400               	retlw	0
   552  08BA  3400               	retlw	0
   553  08BB  3400               	retlw	0
   554  08BC  34FE               	retlw	254
   555  08BD  347F               	retlw	127
   556  08BE  34FE               	retlw	254
   557  08BF  347F               	retlw	127
   558  08C0  3486               	retlw	134
   559  08C1  3401               	retlw	1
   560  08C2  3486               	retlw	134
   561  08C3  3401               	retlw	1
   562  08C4  3486               	retlw	134
   563  08C5  3401               	retlw	1
   564  08C6  3486               	retlw	134
   565  08C7  3401               	retlw	1
   566  08C8  3486               	retlw	134
   567  08C9  3401               	retlw	1
   568  08CA  3486               	retlw	134
   569  08CB  3401               	retlw	1
   570  08CC  3406               	retlw	6
   571  08CD  3400               	retlw	0
   572  08CE  3406               	retlw	6
   573  08CF  3400               	retlw	0
   574  08D0  3400               	retlw	0
   575  08D1  3400               	retlw	0
   576  08D2  3400               	retlw	0
   577  08D3  3400               	retlw	0
   578  08D4  34E0               	retlw	224
   579  08D5  3407               	retlw	7
   580  08D6  34F8               	retlw	248
   581  08D7  341F               	retlw	31
   582  08D8  341C               	retlw	28
   583  08D9  3438               	retlw	56
   584  08DA  340E               	retlw	14
   585  08DB  3470               	retlw	112
   586  08DC  3406               	retlw	6
   587  08DD  3460               	retlw	96
   588  08DE  3486               	retlw	134
   589  08DF  3461               	retlw	97
   590  08E0  3486               	retlw	134
   591  08E1  3461               	retlw	97
   592  08E2  3486               	retlw	134
   593  08E3  3461               	retlw	97
   594  08E4  348E               	retlw	142
   595  08E5  347F               	retlw	127
   596  08E6  348C               	retlw	140
   597  08E7  347F               	retlw	127
   598  08E8  3400               	retlw	0
   599  08E9  3400               	retlw	0
   600  08EA  3400               	retlw	0
   601  08EB  3400               	retlw	0
   602  08EC  34FE               	retlw	254
   603  08ED  347F               	retlw	127
   604  08EE  34FE               	retlw	254
   605  08EF  347F               	retlw	127
   606  08F0  3480               	retlw	128
   607  08F1  3401               	retlw	1
   608  08F2  3480               	retlw	128
   609  08F3  3401               	retlw	1
   610  08F4  3480               	retlw	128
   611  08F5  3401               	retlw	1
   612  08F6  3480               	retlw	128
   613  08F7  3401               	retlw	1
   614  08F8  3480               	retlw	128
   615  08F9  3401               	retlw	1
   616  08FA  3480               	retlw	128
   617  08FB  3401               	retlw	1
   618  08FC  34FE               	retlw	254
   619  08FD  347F               	retlw	127
   620  08FE  34FE               	retlw	254
   621  08FF  347F               	retlw	127
   622  0900  3400               	retlw	0
   623  0901  3400               	retlw	0
   624  0902  3400               	retlw	0
   625  0903  3400               	retlw	0
   626  0904  3400               	retlw	0
   627  0905  3400               	retlw	0
   628  0906  3400               	retlw	0
   629  0907  3400               	retlw	0
   630  0908  3406               	retlw	6
   631  0909  3460               	retlw	96
   632  090A  3406               	retlw	6
   633  090B  3460               	retlw	96
   634  090C  34FE               	retlw	254
   635  090D  347F               	retlw	127
   636  090E  34FE               	retlw	254
   637  090F  347F               	retlw	127
   638  0910  3406               	retlw	6
   639  0911  3460               	retlw	96
   640  0912  3406               	retlw	6
   641  0913  3460               	retlw	96
   642  0914  3400               	retlw	0
   643  0915  3400               	retlw	0
   644  0916  3400               	retlw	0
   645  0917  3400               	retlw	0
   646  0918  3400               	retlw	0
   647  0919  3400               	retlw	0
   648  091A  3400               	retlw	0
   649  091B  3400               	retlw	0
   650  091C  3400               	retlw	0
   651  091D  341C               	retlw	28
   652  091E  3400               	retlw	0
   653  091F  343C               	retlw	60
   654  0920  3400               	retlw	0
   655  0921  3470               	retlw	112
   656  0922  3400               	retlw	0
   657  0923  3460               	retlw	96
   658  0924  3400               	retlw	0
   659  0925  3460               	retlw	96
   660  0926  3400               	retlw	0
   661  0927  3460               	retlw	96
   662  0928  3400               	retlw	0
   663  0929  3460               	retlw	96
   664  092A  3400               	retlw	0
   665  092B  3470               	retlw	112
   666  092C  34FE               	retlw	254
   667  092D  343F               	retlw	63
   668  092E  34FE               	retlw	254
   669  092F  340F               	retlw	15
   670  0930  3400               	retlw	0
   671  0931  3400               	retlw	0
   672  0932  3400               	retlw	0
   673  0933  3400               	retlw	0
   674  0934  34FE               	retlw	254
   675  0935  347F               	retlw	127
   676  0936  34FE               	retlw	254
   677  0937  347F               	retlw	127
   678  0938  3480               	retlw	128
   679  0939  3401               	retlw	1
   680  093A  34C0               	retlw	192
   681  093B  3403               	retlw	3
   682  093C  34E0               	retlw	224
   683  093D  3407               	retlw	7
   684  093E  3470               	retlw	112
   685  093F  340E               	retlw	14
   686  0940  3438               	retlw	56
   687  0941  341C               	retlw	28
   688  0942  341C               	retlw	28
   689  0943  3438               	retlw	56
   690  0944  340E               	retlw	14
   691  0945  3470               	retlw	112
   692  0946  3406               	retlw	6
   693  0947  3460               	retlw	96
   694  0948  3400               	retlw	0
   695  0949  3400               	retlw	0
   696  094A  3400               	retlw	0
   697  094B  3400               	retlw	0
   698  094C  34FE               	retlw	254
   699  094D  347F               	retlw	127
   700  094E  34FE               	retlw	254
   701  094F  347F               	retlw	127
   702  0950  3400               	retlw	0
   703  0951  3460               	retlw	96
   704  0952  3400               	retlw	0
   705  0953  3460               	retlw	96
   706  0954  3400               	retlw	0
   707  0955  3460               	retlw	96
   708  0956  3400               	retlw	0
   709  0957  3460               	retlw	96
   710  0958  3400               	retlw	0
   711  0959  3460               	retlw	96
   712  095A  3400               	retlw	0
   713  095B  3460               	retlw	96
   714  095C  3400               	retlw	0
   715  095D  3460               	retlw	96
   716  095E  3400               	retlw	0
   717  095F  3460               	retlw	96
   718  0960  3400               	retlw	0
   719  0961  3400               	retlw	0
   720  0962  3400               	retlw	0
   721  0963  3400               	retlw	0
   722  0964  34FE               	retlw	254
   723  0965  347F               	retlw	127
   724  0966  34FE               	retlw	254
   725  0967  347F               	retlw	127
   726  0968  343C               	retlw	60
   727  0969  3400               	retlw	0
   728  096A  34F0               	retlw	240
   729  096B  3400               	retlw	0
   730  096C  34C0               	retlw	192
   731  096D  3403               	retlw	3
   732  096E  34C0               	retlw	192
   733  096F  3403               	retlw	3
   734  0970  34F0               	retlw	240
   735  0971  3400               	retlw	0
   736  0972  343C               	retlw	60
   737  0973  3400               	retlw	0
   738  0974  34FE               	retlw	254
   739  0975  347F               	retlw	127
   740  0976  34FE               	retlw	254
   741  0977  347F               	retlw	127
   742  0978  3400               	retlw	0
   743  0979  3400               	retlw	0
   744  097A  3400               	retlw	0
   745  097B  3400               	retlw	0
   746  097C  34FE               	retlw	254
   747  097D  347F               	retlw	127
   748  097E  34FE               	retlw	254
   749  097F  347F               	retlw	127
   750  0980  341C               	retlw	28
   751  0981  3400               	retlw	0
   752  0982  3470               	retlw	112
   753  0983  3400               	retlw	0
   754  0984  34E0               	retlw	224
   755  0985  3401               	retlw	1
   756  0986  3480               	retlw	128
   757  0987  3407               	retlw	7
   758  0988  3400               	retlw	0
   759  0989  340E               	retlw	14
   760  098A  3400               	retlw	0
   761  098B  3438               	retlw	56
   762  098C  34FE               	retlw	254
   763  098D  347F               	retlw	127
   764  098E  34FE               	retlw	254
   765  098F  347F               	retlw	127
   766  0990  3400               	retlw	0
   767  0991  3400               	retlw	0
   768  0992  3400               	retlw	0
   769  0993  3400               	retlw	0
   770  0994  34E0               	retlw	224
   771  0995  3407               	retlw	7
   772  0996  34F8               	retlw	248
   773  0997  341F               	retlw	31
   774  0998  341C               	retlw	28
   775  0999  3438               	retlw	56
   776  099A  340E               	retlw	14
   777  099B  3470               	retlw	112
   778  099C  3406               	retlw	6
   779  099D  3460               	retlw	96
   780  099E  3406               	retlw	6
   781  099F  3460               	retlw	96
   782  09A0  340E               	retlw	14
   783  09A1  3470               	retlw	112
   784  09A2  341C               	retlw	28
   785  09A3  3438               	retlw	56
   786  09A4  34F8               	retlw	248
   787  09A5  341F               	retlw	31
   788  09A6  34E0               	retlw	224
   789  09A7  3407               	retlw	7
   790  09A8  3400               	retlw	0
   791  09A9  3400               	retlw	0
   792  09AA  3400               	retlw	0
   793  09AB  3400               	retlw	0
   794  09AC  34FE               	retlw	254
   795  09AD  347F               	retlw	127
   796  09AE  34FE               	retlw	254
   797  09AF  347F               	retlw	127
   798  09B0  3406               	retlw	6
   799  09B1  3403               	retlw	3
   800  09B2  3406               	retlw	6
   801  09B3  3403               	retlw	3
   802  09B4  3406               	retlw	6
   803  09B5  3403               	retlw	3
   804  09B6  3406               	retlw	6
   805  09B7  3403               	retlw	3
   806  09B8  3406               	retlw	6
   807  09B9  3403               	retlw	3
   808  09BA  348E               	retlw	142
   809  09BB  3403               	retlw	3
   810  09BC  34FC               	retlw	252
   811  09BD  3401               	retlw	1
   812  09BE  34F8               	retlw	248
   813  09BF  3400               	retlw	0
   814  09C0  3400               	retlw	0
   815  09C1  3400               	retlw	0
   816  09C2  3400               	retlw	0
   817  09C3  3400               	retlw	0
   818  09C4  34E0               	retlw	224
   819  09C5  3407               	retlw	7
   820  09C6  34F8               	retlw	248
   821  09C7  341F               	retlw	31
   822  09C8  341C               	retlw	28
   823  09C9  3438               	retlw	56
   824  09CA  340E               	retlw	14
   825  09CB  3470               	retlw	112
   826  09CC  3406               	retlw	6
   827  09CD  3460               	retlw	96
   828  09CE  3406               	retlw	6
   829  09CF  346C               	retlw	108
   830  09D0  340E               	retlw	14
   831  09D1  347C               	retlw	124
   832  09D2  341C               	retlw	28
   833  09D3  3438               	retlw	56
   834  09D4  34F8               	retlw	248
   835  09D5  347F               	retlw	127
   836  09D6  34E0               	retlw	224
   837  09D7  3467               	retlw	103
   838  09D8  3400               	retlw	0
   839  09D9  3400               	retlw	0
   840  09DA  3400               	retlw	0
   841  09DB  3400               	retlw	0
   842  09DC  34FE               	retlw	254
   843  09DD  347F               	retlw	127
   844  09DE  34FE               	retlw	254
   845  09DF  347F               	retlw	127
   846  09E0  3406               	retlw	6
   847  09E1  3403               	retlw	3
   848  09E2  3406               	retlw	6
   849  09E3  3403               	retlw	3
   850  09E4  3406               	retlw	6
   851  09E5  3407               	retlw	7
   852  09E6  3406               	retlw	6
   853  09E7  340F               	retlw	15
   854  09E8  3406               	retlw	6
   855  09E9  341F               	retlw	31
   856  09EA  348E               	retlw	142
   857  09EB  343B               	retlw	59
   858  09EC  34FC               	retlw	252
   859  09ED  3471               	retlw	113
   860  09EE  34F8               	retlw	248
   861  09EF  3460               	retlw	96
   862  09F0  3400               	retlw	0
   863  09F1  3400               	retlw	0
   864  09F2  3400               	retlw	0
   865  09F3  3400               	retlw	0
   866  09F4  3478               	retlw	120
   867  09F5  3418               	retlw	24
   868  09F6  34FC               	retlw	252
   869  09F7  3438               	retlw	56
   870  09F8  34CE               	retlw	206
   871  09F9  3471               	retlw	113
   872  09FA  3486               	retlw	134
   873  09FB  3461               	retlw	97
   874  09FC  3486               	retlw	134
   875  09FD  3461               	retlw	97
   876  09FE  3486               	retlw	134
   877  09FF  3461               	retlw	97
   878  0A00  3486               	retlw	134
   879  0A01  3461               	retlw	97
   880  0A02  348E               	retlw	142
   881  0A03  3473               	retlw	115
   882  0A04  341C               	retlw	28
   883  0A05  343F               	retlw	63
   884  0A06  3418               	retlw	24
   885  0A07  341E               	retlw	30
   886  0A08  3400               	retlw	0
   887  0A09  3400               	retlw	0
   888  0A0A  3400               	retlw	0
   889  0A0B  3400               	retlw	0
   890  0A0C  3400               	retlw	0
   891  0A0D  3400               	retlw	0
   892  0A0E  3406               	retlw	6
   893  0A0F  3400               	retlw	0
   894  0A10  3406               	retlw	6
   895  0A11  3400               	retlw	0
   896  0A12  3406               	retlw	6
   897  0A13  3400               	retlw	0
   898  0A14  34FE               	retlw	254
   899  0A15  347F               	retlw	127
   900  0A16  34FE               	retlw	254
   901  0A17  347F               	retlw	127
   902  0A18  3406               	retlw	6
   903  0A19  3400               	retlw	0
   904  0A1A  3406               	retlw	6
   905  0A1B  3400               	retlw	0
   906  0A1C  3406               	retlw	6
   907  0A1D  3400               	retlw	0
   908  0A1E  3400               	retlw	0
   909  0A1F  3400               	retlw	0
   910  0A20  3400               	retlw	0
   911  0A21  3400               	retlw	0
   912  0A22  3400               	retlw	0
   913  0A23  3400               	retlw	0
   914  0A24  34FE               	retlw	254
   915  0A25  340F               	retlw	15
   916  0A26  34FE               	retlw	254
   917  0A27  343F               	retlw	63
   918  0A28  3400               	retlw	0
   919  0A29  3470               	retlw	112
   920  0A2A  3400               	retlw	0
   921  0A2B  3460               	retlw	96
   922  0A2C  3400               	retlw	0
   923  0A2D  3460               	retlw	96
   924  0A2E  3400               	retlw	0
   925  0A2F  3460               	retlw	96
   926  0A30  3400               	retlw	0
   927  0A31  3460               	retlw	96
   928  0A32  3400               	retlw	0
   929  0A33  3470               	retlw	112
   930  0A34  34FE               	retlw	254
   931  0A35  343F               	retlw	63
   932  0A36  34FE               	retlw	254
   933  0A37  340F               	retlw	15
   934  0A38  3400               	retlw	0
   935  0A39  3400               	retlw	0
   936  0A3A  3400               	retlw	0
   937  0A3B  3400               	retlw	0
   938  0A3C  340E               	retlw	14
   939  0A3D  3400               	retlw	0
   940  0A3E  347E               	retlw	126
   941  0A3F  3400               	retlw	0
   942  0A40  34F0               	retlw	240
   943  0A41  3403               	retlw	3
   944  0A42  3480               	retlw	128
   945  0A43  341F               	retlw	31
   946  0A44  3400               	retlw	0
   947  0A45  347C               	retlw	124
   948  0A46  3400               	retlw	0
   949  0A47  347C               	retlw	124
   950  0A48  3480               	retlw	128
   951  0A49  341F               	retlw	31
   952  0A4A  34F0               	retlw	240
   953  0A4B  3403               	retlw	3
   954  0A4C  347E               	retlw	126
   955  0A4D  3400               	retlw	0
   956  0A4E  340E               	retlw	14
   957  0A4F  3400               	retlw	0
   958  0A50  3400               	retlw	0
   959  0A51  3400               	retlw	0
   960  0A52  3400               	retlw	0
   961  0A53  3400               	retlw	0
   962  0A54  34FE               	retlw	254
   963  0A55  347F               	retlw	127
   964  0A56  34FE               	retlw	254
   965  0A57  347F               	retlw	127
   966  0A58  3400               	retlw	0
   967  0A59  3438               	retlw	56
   968  0A5A  3400               	retlw	0
   969  0A5B  340C               	retlw	12
   970  0A5C  3400               	retlw	0
   971  0A5D  3407               	retlw	7
   972  0A5E  3400               	retlw	0
   973  0A5F  3407               	retlw	7
   974  0A60  3400               	retlw	0
   975  0A61  340C               	retlw	12
   976  0A62  3400               	retlw	0
   977  0A63  3438               	retlw	56
   978  0A64  34FE               	retlw	254
   979  0A65  347F               	retlw	127
   980  0A66  34FE               	retlw	254
   981  0A67  347F               	retlw	127
   982  0A68  3400               	retlw	0
   983  0A69  3400               	retlw	0
   984  0A6A  3400               	retlw	0
   985  0A6B  3400               	retlw	0
   986  0A6C  3406               	retlw	6
   987  0A6D  3460               	retlw	96
   988  0A6E  341E               	retlw	30
   989  0A6F  3478               	retlw	120
   990  0A70  3438               	retlw	56
   991  0A71  341C               	retlw	28
   992  0A72  3460               	retlw	96
   993  0A73  3406               	retlw	6
   994  0A74  34C0               	retlw	192
   995  0A75  3403               	retlw	3
   996  0A76  34C0               	retlw	192
   997  0A77  3403               	retlw	3
   998  0A78  3460               	retlw	96
   999  0A79  3406               	retlw	6
  1000  0A7A  3438               	retlw	56
  1001  0A7B  341C               	retlw	28
  1002  0A7C  341E               	retlw	30
  1003  0A7D  3478               	retlw	120
  1004  0A7E  3406               	retlw	6
  1005  0A7F  3460               	retlw	96
  1006  0A80  3400               	retlw	0
  1007  0A81  3400               	retlw	0
  1008  0A82  3400               	retlw	0
  1009  0A83  3400               	retlw	0
  1010  0A84  3406               	retlw	6
  1011  0A85  3400               	retlw	0
  1012  0A86  341E               	retlw	30
  1013  0A87  3400               	retlw	0
  1014  0A88  3478               	retlw	120
  1015  0A89  3400               	retlw	0
  1016  0A8A  34E0               	retlw	224
  1017  0A8B  3401               	retlw	1
  1018  0A8C  3480               	retlw	128
  1019  0A8D  347F               	retlw	127
  1020  0A8E  3480               	retlw	128
  1021  0A8F  347F               	retlw	127
  1022  0A90  34E0               	retlw	224
  1023  0A91  3401               	retlw	1
  1024  0A92  3478               	retlw	120
  1025  0A93  3400               	retlw	0
  1026  0A94  341E               	retlw	30
  1027  0A95  3400               	retlw	0
  1028  0A96  3406               	retlw	6
  1029  0A97  3400               	retlw	0
  1030  0A98  3400               	retlw	0
  1031  0A99  3400               	retlw	0
  1032  0A9A  3400               	retlw	0
  1033  0A9B  3400               	retlw	0
  1034  0A9C  3406               	retlw	6
  1035  0A9D  3460               	retlw	96
  1036  0A9E  3406               	retlw	6
  1037  0A9F  3478               	retlw	120
  1038  0AA0  3406               	retlw	6
  1039  0AA1  347C               	retlw	124
  1040  0AA2  3406               	retlw	6
  1041  0AA3  3466               	retlw	102
  1042  0AA4  3486               	retlw	134
  1043  0AA5  3463               	retlw	99
  1044  0AA6  34C6               	retlw	198
  1045  0AA7  3461               	retlw	97
  1046  0AA8  3466               	retlw	102
  1047  0AA9  3460               	retlw	96
  1048  0AAA  343E               	retlw	62
  1049  0AAB  3460               	retlw	96
  1050  0AAC  341E               	retlw	30
  1051  0AAD  3460               	retlw	96
  1052  0AAE  3406               	retlw	6
  1053  0AAF  3460               	retlw	96
  1054  0AB0  3400               	retlw	0
  1055  0AB1  3400               	retlw	0
  1056  0AB2                     __end_of_Terminal12x16:	
  1057  0AB2                     _Numeric12x16:	
  1058  0AB2  3400               	retlw	0
  1059  0AB3  3400               	retlw	0
  1060  0AB4  3400               	retlw	0
  1061  0AB5  3400               	retlw	0
  1062  0AB6  3480               	retlw	128
  1063  0AB7  3401               	retlw	1
  1064  0AB8  3480               	retlw	128
  1065  0AB9  3401               	retlw	1
  1066  0ABA  3480               	retlw	128
  1067  0ABB  3401               	retlw	1
  1068  0ABC  34F0               	retlw	240
  1069  0ABD  340F               	retlw	15
  1070  0ABE  34F0               	retlw	240
  1071  0ABF  340F               	retlw	15
  1072  0AC0  3480               	retlw	128
  1073  0AC1  3401               	retlw	1
  1074  0AC2  3480               	retlw	128
  1075  0AC3  3401               	retlw	1
  1076  0AC4  3480               	retlw	128
  1077  0AC5  3401               	retlw	1
  1078  0AC6  3400               	retlw	0
  1079  0AC7  3400               	retlw	0
  1080  0AC8  3400               	retlw	0
  1081  0AC9  3400               	retlw	0
  1082  0ACA  3400               	retlw	0
  1083  0ACB  3400               	retlw	0
  1084  0ACC  34F0               	retlw	240
  1085  0ACD  340F               	retlw	15
  1086  0ACE  34FC               	retlw	252
  1087  0ACF  343F               	retlw	63
  1088  0AD0  340C               	retlw	12
  1089  0AD1  343C               	retlw	60
  1090  0AD2  3406               	retlw	6
  1091  0AD3  3466               	retlw	102
  1092  0AD4  3406               	retlw	6
  1093  0AD5  3463               	retlw	99
  1094  0AD6  3486               	retlw	134
  1095  0AD7  3461               	retlw	97
  1096  0AD8  34C6               	retlw	198
  1097  0AD9  3460               	retlw	96
  1098  0ADA  3466               	retlw	102
  1099  0ADB  3460               	retlw	96
  1100  0ADC  343C               	retlw	60
  1101  0ADD  3430               	retlw	48
  1102  0ADE  34FC               	retlw	252
  1103  0ADF  343F               	retlw	63
  1104  0AE0  34F0               	retlw	240
  1105  0AE1  340F               	retlw	15
  1106  0AE2  3400               	retlw	0
  1107  0AE3  3400               	retlw	0
  1108  0AE4  3400               	retlw	0
  1109  0AE5  3400               	retlw	0
  1110  0AE6  3418               	retlw	24
  1111  0AE7  3460               	retlw	96
  1112  0AE8  3418               	retlw	24
  1113  0AE9  3460               	retlw	96
  1114  0AEA  341C               	retlw	28
  1115  0AEB  3460               	retlw	96
  1116  0AEC  34FE               	retlw	254
  1117  0AED  347F               	retlw	127
  1118  0AEE  34FE               	retlw	254
  1119  0AEF  347F               	retlw	127
  1120  0AF0  3400               	retlw	0
  1121  0AF1  3460               	retlw	96
  1122  0AF2  3400               	retlw	0
  1123  0AF3  3460               	retlw	96
  1124  0AF4  3400               	retlw	0
  1125  0AF5  3460               	retlw	96
  1126  0AF6  3400               	retlw	0
  1127  0AF7  3400               	retlw	0
  1128  0AF8  3400               	retlw	0
  1129  0AF9  3400               	retlw	0
  1130  0AFA  3400               	retlw	0
  1131  0AFB  3400               	retlw	0
  1132  0AFC  3438               	retlw	56
  1133  0AFD  3460               	retlw	96
  1134  0AFE  343C               	retlw	60
  1135  0AFF  3470               	retlw	112
  1136  0B00  340E               	retlw	14
  1137  0B01  3478               	retlw	120
  1138  0B02  3406               	retlw	6
  1139  0B03  347C               	retlw	124
  1140  0B04  3406               	retlw	6
  1141  0B05  346E               	retlw	110
  1142  0B06  3406               	retlw	6
  1143  0B07  3467               	retlw	103
  1144  0B08  3486               	retlw	134
  1145  0B09  3463               	retlw	99
  1146  0B0A  34C6               	retlw	198
  1147  0B0B  3461               	retlw	97
  1148  0B0C  34EE               	retlw	238
  1149  0B0D  3460               	retlw	96
  1150  0B0E  347C               	retlw	124
  1151  0B0F  3460               	retlw	96
  1152  0B10  3438               	retlw	56
  1153  0B11  3460               	retlw	96
  1154  0B12  3400               	retlw	0
  1155  0B13  3400               	retlw	0
  1156  0B14  3418               	retlw	24
  1157  0B15  3418               	retlw	24
  1158  0B16  341C               	retlw	28
  1159  0B17  3438               	retlw	56
  1160  0B18  340E               	retlw	14
  1161  0B19  3470               	retlw	112
  1162  0B1A  3486               	retlw	134
  1163  0B1B  3461               	retlw	97
  1164  0B1C  3486               	retlw	134
  1165  0B1D  3461               	retlw	97
  1166  0B1E  3486               	retlw	134
  1167  0B1F  3461               	retlw	97
  1168  0B20  3486               	retlw	134
  1169  0B21  3461               	retlw	97
  1170  0B22  3486               	retlw	134
  1171  0B23  3461               	retlw	97
  1172  0B24  34CE               	retlw	206
  1173  0B25  3473               	retlw	115
  1174  0B26  34FC               	retlw	252
  1175  0B27  343E               	retlw	62
  1176  0B28  3478               	retlw	120
  1177  0B29  341C               	retlw	28
  1178  0B2A  3400               	retlw	0
  1179  0B2B  3400               	retlw	0
  1180  0B2C  3480               	retlw	128
  1181  0B2D  3407               	retlw	7
  1182  0B2E  34C0               	retlw	192
  1183  0B2F  3407               	retlw	7
  1184  0B30  34E0               	retlw	224
  1185  0B31  3406               	retlw	6
  1186  0B32  3470               	retlw	112
  1187  0B33  3406               	retlw	6
  1188  0B34  3438               	retlw	56
  1189  0B35  3406               	retlw	6
  1190  0B36  341C               	retlw	28
  1191  0B37  3406               	retlw	6
  1192  0B38  340E               	retlw	14
  1193  0B39  3406               	retlw	6
  1194  0B3A  34FE               	retlw	254
  1195  0B3B  347F               	retlw	127
  1196  0B3C  34FE               	retlw	254
  1197  0B3D  347F               	retlw	127
  1198  0B3E  3400               	retlw	0
  1199  0B3F  3406               	retlw	6
  1200  0B40  3400               	retlw	0
  1201  0B41  3406               	retlw	6
  1202  0B42  3400               	retlw	0
  1203  0B43  3400               	retlw	0
  1204  0B44  347E               	retlw	126
  1205  0B45  3418               	retlw	24
  1206  0B46  34FE               	retlw	254
  1207  0B47  3438               	retlw	56
  1208  0B48  34C6               	retlw	198
  1209  0B49  3470               	retlw	112
  1210  0B4A  34C6               	retlw	198
  1211  0B4B  3460               	retlw	96
  1212  0B4C  34C6               	retlw	198
  1213  0B4D  3460               	retlw	96
  1214  0B4E  34C6               	retlw	198
  1215  0B4F  3460               	retlw	96
  1216  0B50  34C6               	retlw	198
  1217  0B51  3460               	retlw	96
  1218  0B52  34C6               	retlw	198
  1219  0B53  3460               	retlw	96
  1220  0B54  34C6               	retlw	198
  1221  0B55  3471               	retlw	113
  1222  0B56  3486               	retlw	134
  1223  0B57  343F               	retlw	63
  1224  0B58  3406               	retlw	6
  1225  0B59  341F               	retlw	31
  1226  0B5A  3400               	retlw	0
  1227  0B5B  3400               	retlw	0
  1228  0B5C  3480               	retlw	128
  1229  0B5D  341F               	retlw	31
  1230  0B5E  34E0               	retlw	224
  1231  0B5F  343F               	retlw	63
  1232  0B60  34F0               	retlw	240
  1233  0B61  3473               	retlw	115
  1234  0B62  34B8               	retlw	184
  1235  0B63  3461               	retlw	97
  1236  0B64  349C               	retlw	156
  1237  0B65  3461               	retlw	97
  1238  0B66  348E               	retlw	142
  1239  0B67  3461               	retlw	97
  1240  0B68  3486               	retlw	134
  1241  0B69  3461               	retlw	97
  1242  0B6A  3486               	retlw	134
  1243  0B6B  3461               	retlw	97
  1244  0B6C  3486               	retlw	134
  1245  0B6D  3473               	retlw	115
  1246  0B6E  3400               	retlw	0
  1247  0B6F  343F               	retlw	63
  1248  0B70  3400               	retlw	0
  1249  0B71  341E               	retlw	30
  1250  0B72  3400               	retlw	0
  1251  0B73  3400               	retlw	0
  1252  0B74  3406               	retlw	6
  1253  0B75  3400               	retlw	0
  1254  0B76  3406               	retlw	6
  1255  0B77  3400               	retlw	0
  1256  0B78  3406               	retlw	6
  1257  0B79  3400               	retlw	0
  1258  0B7A  3406               	retlw	6
  1259  0B7B  3460               	retlw	96
  1260  0B7C  3406               	retlw	6
  1261  0B7D  3478               	retlw	120
  1262  0B7E  3406               	retlw	6
  1263  0B7F  341E               	retlw	30
  1264  0B80  3486               	retlw	134
  1265  0B81  3407               	retlw	7
  1266  0B82  34E6               	retlw	230
  1267  0B83  3401               	retlw	1
  1268  0B84  347E               	retlw	126
  1269  0B85  3400               	retlw	0
  1270  0B86  341E               	retlw	30
  1271  0B87  3400               	retlw	0
  1272  0B88  3406               	retlw	6
  1273  0B89  3400               	retlw	0
  1274  0B8A  3400               	retlw	0
  1275  0B8B  3400               	retlw	0
  1276  0B8C  3400               	retlw	0
  1277  0B8D  341E               	retlw	30
  1278  0B8E  3478               	retlw	120
  1279  0B8F  343F               	retlw	63
  1280  0B90  34FC               	retlw	252
  1281  0B91  3473               	retlw	115
  1282  0B92  34CE               	retlw	206
  1283  0B93  3461               	retlw	97
  1284  0B94  3486               	retlw	134
  1285  0B95  3461               	retlw	97
  1286  0B96  3486               	retlw	134
  1287  0B97  3461               	retlw	97
  1288  0B98  3486               	retlw	134
  1289  0B99  3461               	retlw	97
  1290  0B9A  34CE               	retlw	206
  1291  0B9B  3461               	retlw	97
  1292  0B9C  34FC               	retlw	252
  1293  0B9D  3473               	retlw	115
  1294  0B9E  3478               	retlw	120
  1295  0B9F  343F               	retlw	63
  1296  0BA0  3400               	retlw	0
  1297  0BA1  341E               	retlw	30
  1298  0BA2  3400               	retlw	0
  1299  0BA3  3400               	retlw	0
  1300  0BA4  3478               	retlw	120
  1301  0BA5  3400               	retlw	0
  1302  0BA6  34FC               	retlw	252
  1303  0BA7  3400               	retlw	0
  1304  0BA8  34CE               	retlw	206
  1305  0BA9  3461               	retlw	97
  1306  0BAA  3486               	retlw	134
  1307  0BAB  3461               	retlw	97
  1308  0BAC  3486               	retlw	134
  1309  0BAD  3461               	retlw	97
  1310  0BAE  3486               	retlw	134
  1311  0BAF  3471               	retlw	113
  1312  0BB0  3486               	retlw	134
  1313  0BB1  3439               	retlw	57
  1314  0BB2  3486               	retlw	134
  1315  0BB3  341D               	retlw	29
  1316  0BB4  34CE               	retlw	206
  1317  0BB5  340F               	retlw	15
  1318  0BB6  34FC               	retlw	252
  1319  0BB7  3407               	retlw	7
  1320  0BB8  34F8               	retlw	248
  1321  0BB9  3401               	retlw	1
  1322  0BBA                     __end_of_Numeric12x16:	
  1323  0BBA                     _Icon16x16:	
  1324  0BBA  348F               	retlw	143
  1325  0BBB  34F1               	retlw	241
  1326  0BBC  34C1               	retlw	193
  1327  0BBD  3483               	retlw	131
  1328  0BBE  34FD               	retlw	253
  1329  0BBF  34BF               	retlw	191
  1330  0BC0  34FD               	retlw	253
  1331  0BC1  34BF               	retlw	191
  1332  0BC2  343C               	retlw	60
  1333  0BC3  343C               	retlw	60
  1334  0BC4  341C               	retlw	28
  1335  0BC5  3438               	retlw	56
  1336  0BC6  348E               	retlw	142
  1337  0BC7  3471               	retlw	113
  1338  0BC8  34CF               	retlw	207
  1339  0BC9  34F3               	retlw	243
  1340  0BCA  34CF               	retlw	207
  1341  0BCB  34F3               	retlw	243
  1342  0BCC  348E               	retlw	142
  1343  0BCD  3471               	retlw	113
  1344  0BCE  341C               	retlw	28
  1345  0BCF  3438               	retlw	56
  1346  0BD0  343C               	retlw	60
  1347  0BD1  343C               	retlw	60
  1348  0BD2  34FD               	retlw	253
  1349  0BD3  34BF               	retlw	191
  1350  0BD4  34FD               	retlw	253
  1351  0BD5  34BF               	retlw	191
  1352  0BD6  34C1               	retlw	193
  1353  0BD7  3483               	retlw	131
  1354  0BD8  348F               	retlw	143
  1355  0BD9  34F1               	retlw	241
  1356  0BDA  3480               	retlw	128
  1357  0BDB  3401               	retlw	1
  1358  0BDC  34C0               	retlw	192
  1359  0BDD  3403               	retlw	3
  1360  0BDE  34FC               	retlw	252
  1361  0BDF  343F               	retlw	63
  1362  0BE0  34FC               	retlw	252
  1363  0BE1  343F               	retlw	63
  1364  0BE2  343C               	retlw	60
  1365  0BE3  343C               	retlw	60
  1366  0BE4  341C               	retlw	28
  1367  0BE5  3438               	retlw	56
  1368  0BE6  340E               	retlw	14
  1369  0BE7  3470               	retlw	112
  1370  0BE8  340F               	retlw	15
  1371  0BE9  34F0               	retlw	240
  1372  0BEA  340F               	retlw	15
  1373  0BEB  34F0               	retlw	240
  1374  0BEC  340E               	retlw	14
  1375  0BED  3470               	retlw	112
  1376  0BEE  341C               	retlw	28
  1377  0BEF  3438               	retlw	56
  1378  0BF0  343C               	retlw	60
  1379  0BF1  343C               	retlw	60
  1380  0BF2  34FC               	retlw	252
  1381  0BF3  343F               	retlw	63
  1382  0BF4  34FC               	retlw	252
  1383  0BF5  343F               	retlw	63
  1384  0BF6  34C0               	retlw	192
  1385  0BF7  3403               	retlw	3
  1386  0BF8  3480               	retlw	128
  1387  0BF9  3401               	retlw	1
  1388  0BFA  3400               	retlw	0
  1389  0BFB  3400               	retlw	0
  1390  0BFC  3400               	retlw	0
  1391  0BFD  3400               	retlw	0
  1392  0BFE  34E0               	retlw	224
  1393  0BFF  3400               	retlw	0
  1394  0C00  34C0               	retlw	192
  1395  0C01  3401               	retlw	1
  1396  0C02  3480               	retlw	128
  1397  0C03  3403               	retlw	3
  1398  0C04  3400               	retlw	0
  1399  0C05  3407               	retlw	7
  1400  0C06  3400               	retlw	0
  1401  0C07  340E               	retlw	14
  1402  0C08  3400               	retlw	0
  1403  0C09  3407               	retlw	7
  1404  0C0A  3480               	retlw	128
  1405  0C0B  3403               	retlw	3
  1406  0C0C  34C0               	retlw	192
  1407  0C0D  3401               	retlw	1
  1408  0C0E  34E0               	retlw	224
  1409  0C0F  3400               	retlw	0
  1410  0C10  3470               	retlw	112
  1411  0C11  3400               	retlw	0
  1412  0C12  3438               	retlw	56
  1413  0C13  3400               	retlw	0
  1414  0C14  341C               	retlw	28
  1415  0C15  3400               	retlw	0
  1416  0C16  3400               	retlw	0
  1417  0C17  3400               	retlw	0
  1418  0C18  3400               	retlw	0
  1419  0C19  3400               	retlw	0
  1420  0C1A  341F               	retlw	31
  1421  0C1B  34F8               	retlw	248
  1422  0C1C  3401               	retlw	1
  1423  0C1D  3480               	retlw	128
  1424  0C1E  34E1               	retlw	225
  1425  0C1F  3480               	retlw	128
  1426  0C20  34C1               	retlw	193
  1427  0C21  3481               	retlw	129
  1428  0C22  3481               	retlw	129
  1429  0C23  3483               	retlw	131
  1430  0C24  3400               	retlw	0
  1431  0C25  3407               	retlw	7
  1432  0C26  3400               	retlw	0
  1433  0C27  340E               	retlw	14
  1434  0C28  3400               	retlw	0
  1435  0C29  3407               	retlw	7
  1436  0C2A  3480               	retlw	128
  1437  0C2B  3403               	retlw	3
  1438  0C2C  34C0               	retlw	192
  1439  0C2D  3401               	retlw	1
  1440  0C2E  34E0               	retlw	224
  1441  0C2F  3400               	retlw	0
  1442  0C30  3471               	retlw	113
  1443  0C31  3480               	retlw	128
  1444  0C32  3439               	retlw	57
  1445  0C33  3480               	retlw	128
  1446  0C34  341D               	retlw	29
  1447  0C35  3480               	retlw	128
  1448  0C36  3401               	retlw	1
  1449  0C37  3480               	retlw	128
  1450  0C38  341F               	retlw	31
  1451  0C39  34F8               	retlw	248
  1452  0C3A  3400               	retlw	0
  1453  0C3B  3400               	retlw	0
  1454  0C3C  3400               	retlw	0
  1455  0C3D  3400               	retlw	0
  1456  0C3E  340C               	retlw	12
  1457  0C3F  3430               	retlw	48
  1458  0C40  341C               	retlw	28
  1459  0C41  3438               	retlw	56
  1460  0C42  3438               	retlw	56
  1461  0C43  341C               	retlw	28
  1462  0C44  3470               	retlw	112
  1463  0C45  340E               	retlw	14
  1464  0C46  34E0               	retlw	224
  1465  0C47  3407               	retlw	7
  1466  0C48  34C0               	retlw	192
  1467  0C49  3403               	retlw	3
  1468  0C4A  34C0               	retlw	192
  1469  0C4B  3403               	retlw	3
  1470  0C4C  34E0               	retlw	224
  1471  0C4D  3407               	retlw	7
  1472  0C4E  3470               	retlw	112
  1473  0C4F  340E               	retlw	14
  1474  0C50  3438               	retlw	56
  1475  0C51  341C               	retlw	28
  1476  0C52  341C               	retlw	28
  1477  0C53  3438               	retlw	56
  1478  0C54  340C               	retlw	12
  1479  0C55  3430               	retlw	48
  1480  0C56  3400               	retlw	0
  1481  0C57  3400               	retlw	0
  1482  0C58  3400               	retlw	0
  1483  0C59  3400               	retlw	0
  1484  0C5A  341F               	retlw	31
  1485  0C5B  34F8               	retlw	248
  1486  0C5C  3401               	retlw	1
  1487  0C5D  3480               	retlw	128
  1488  0C5E  340D               	retlw	13
  1489  0C5F  34B0               	retlw	176
  1490  0C60  341D               	retlw	29
  1491  0C61  34B8               	retlw	184
  1492  0C62  3439               	retlw	57
  1493  0C63  349C               	retlw	156
  1494  0C64  3470               	retlw	112
  1495  0C65  340E               	retlw	14
  1496  0C66  34E0               	retlw	224
  1497  0C67  3407               	retlw	7
  1498  0C68  34C0               	retlw	192
  1499  0C69  3403               	retlw	3
  1500  0C6A  34C0               	retlw	192
  1501  0C6B  3403               	retlw	3
  1502  0C6C  34E0               	retlw	224
  1503  0C6D  3407               	retlw	7
  1504  0C6E  3470               	retlw	112
  1505  0C6F  340E               	retlw	14
  1506  0C70  3439               	retlw	57
  1507  0C71  349C               	retlw	156
  1508  0C72  341D               	retlw	29
  1509  0C73  34B8               	retlw	184
  1510  0C74  340D               	retlw	13
  1511  0C75  34B0               	retlw	176
  1512  0C76  3401               	retlw	1
  1513  0C77  3480               	retlw	128
  1514  0C78  341F               	retlw	31
  1515  0C79  34F8               	retlw	248
  1516  0C7A  3400               	retlw	0
  1517  0C7B  3400               	retlw	0
  1518  0C7C  34FF               	retlw	255
  1519  0C7D  3407               	retlw	7
  1520  0C7E  3407               	retlw	7
  1521  0C7F  3405               	retlw	5
  1522  0C80  348D               	retlw	141
  1523  0C81  3404               	retlw	4
  1524  0C82  3459               	retlw	89
  1525  0C83  3404               	retlw	4
  1526  0C84  3431               	retlw	49
  1527  0C85  3404               	retlw	4
  1528  0C86  3461               	retlw	97
  1529  0C87  3404               	retlw	4
  1530  0C88  34C1               	retlw	193
  1531  0C89  3404               	retlw	4
  1532  0C8A  3461               	retlw	97
  1533  0C8B  3404               	retlw	4
  1534  0C8C  3431               	retlw	49
  1535  0C8D  3404               	retlw	4
  1536  0C8E  3459               	retlw	89
  1537  0C8F  3404               	retlw	4
  1538  0C90  348D               	retlw	141
  1539  0C91  3404               	retlw	4
  1540  0C92  3407               	retlw	7
  1541  0C93  3405               	retlw	5
  1542  0C94  34FF               	retlw	255
  1543  0C95  3407               	retlw	7
  1544  0C96  3400               	retlw	0
  1545  0C97  3400               	retlw	0
  1546  0C98  3400               	retlw	0
  1547  0C99  3400               	retlw	0
  1548  0C9A                     __end_of_Icon16x16:	
  1549  0C9A                     _Battery8x21:	
  1550  0C9A  347C               	retlw	124
  1551  0C9B  347C               	retlw	124
  1552  0C9C  34FF               	retlw	255
  1553  0C9D  3401               	retlw	1
  1554  0C9E  3401               	retlw	1
  1555  0C9F  3401               	retlw	1
  1556  0CA0  3401               	retlw	1
  1557  0CA1  3401               	retlw	1
  1558  0CA2  3401               	retlw	1
  1559  0CA3  3401               	retlw	1
  1560  0CA4  3401               	retlw	1
  1561  0CA5  3401               	retlw	1
  1562  0CA6  3401               	retlw	1
  1563  0CA7  3401               	retlw	1
  1564  0CA8  3401               	retlw	1
  1565  0CA9  3401               	retlw	1
  1566  0CAA  3401               	retlw	1
  1567  0CAB  3401               	retlw	1
  1568  0CAC  3401               	retlw	1
  1569  0CAD  3401               	retlw	1
  1570  0CAE  34FF               	retlw	255
  1571  0CAF  347C               	retlw	124
  1572  0CB0  347C               	retlw	124
  1573  0CB1  34FF               	retlw	255
  1574  0CB2  3401               	retlw	1
  1575  0CB3  3401               	retlw	1
  1576  0CB4  3401               	retlw	1
  1577  0CB5  3401               	retlw	1
  1578  0CB6  3401               	retlw	1
  1579  0CB7  3401               	retlw	1
  1580  0CB8  3401               	retlw	1
  1581  0CB9  3401               	retlw	1
  1582  0CBA  3401               	retlw	1
  1583  0CBB  3401               	retlw	1
  1584  0CBC  3401               	retlw	1
  1585  0CBD  3401               	retlw	1
  1586  0CBE  3401               	retlw	1
  1587  0CBF  347D               	retlw	125
  1588  0CC0  347D               	retlw	125
  1589  0CC1  347D               	retlw	125
  1590  0CC2  3401               	retlw	1
  1591  0CC3  34FF               	retlw	255
  1592  0CC4  347C               	retlw	124
  1593  0CC5  347C               	retlw	124
  1594  0CC6  34FF               	retlw	255
  1595  0CC7  3401               	retlw	1
  1596  0CC8  3401               	retlw	1
  1597  0CC9  3401               	retlw	1
  1598  0CCA  3401               	retlw	1
  1599  0CCB  3401               	retlw	1
  1600  0CCC  3401               	retlw	1
  1601  0CCD  3401               	retlw	1
  1602  0CCE  3401               	retlw	1
  1603  0CCF  3401               	retlw	1
  1604  0CD0  347D               	retlw	125
  1605  0CD1  347D               	retlw	125
  1606  0CD2  347D               	retlw	125
  1607  0CD3  3401               	retlw	1
  1608  0CD4  347D               	retlw	125
  1609  0CD5  347D               	retlw	125
  1610  0CD6  347D               	retlw	125
  1611  0CD7  3401               	retlw	1
  1612  0CD8  34FF               	retlw	255
  1613  0CD9  347C               	retlw	124
  1614  0CDA  347C               	retlw	124
  1615  0CDB  34FF               	retlw	255
  1616  0CDC  3401               	retlw	1
  1617  0CDD  3401               	retlw	1
  1618  0CDE  3401               	retlw	1
  1619  0CDF  3401               	retlw	1
  1620  0CE0  3401               	retlw	1
  1621  0CE1  347D               	retlw	125
  1622  0CE2  347D               	retlw	125
  1623  0CE3  347D               	retlw	125
  1624  0CE4  3401               	retlw	1
  1625  0CE5  347D               	retlw	125
  1626  0CE6  347D               	retlw	125
  1627  0CE7  347D               	retlw	125
  1628  0CE8  3401               	retlw	1
  1629  0CE9  347D               	retlw	125
  1630  0CEA  347D               	retlw	125
  1631  0CEB  347D               	retlw	125
  1632  0CEC  3401               	retlw	1
  1633  0CED  34FF               	retlw	255
  1634  0CEE  347C               	retlw	124
  1635  0CEF  347C               	retlw	124
  1636  0CF0  34FF               	retlw	255
  1637  0CF1  3401               	retlw	1
  1638  0CF2  347D               	retlw	125
  1639  0CF3  347D               	retlw	125
  1640  0CF4  347D               	retlw	125
  1641  0CF5  3401               	retlw	1
  1642  0CF6  347D               	retlw	125
  1643  0CF7  347D               	retlw	125
  1644  0CF8  347D               	retlw	125
  1645  0CF9  3401               	retlw	1
  1646  0CFA  347D               	retlw	125
  1647  0CFB  347D               	retlw	125
  1648  0CFC  347D               	retlw	125
  1649  0CFD  3401               	retlw	1
  1650  0CFE  347D               	retlw	125
  1651  0CFF  347D               	retlw	125
  1652  0D00  347D               	retlw	125
  1653  0D01  3401               	retlw	1
  1654  0D02  34FF               	retlw	255
  1655  0D03  3400               	retlw	0
  1656  0D04  3400               	retlw	0
  1657  0D05  3401               	retlw	1
  1658  0D06  3401               	retlw	1
  1659  0D07  3401               	retlw	1
  1660  0D08  3401               	retlw	1
  1661  0D09  3401               	retlw	1
  1662  0D0A  3401               	retlw	1
  1663  0D0B  3401               	retlw	1
  1664  0D0C  3401               	retlw	1
  1665  0D0D  3401               	retlw	1
  1666  0D0E  3401               	retlw	1
  1667  0D0F  3401               	retlw	1
  1668  0D10  3401               	retlw	1
  1669  0D11  3401               	retlw	1
  1670  0D12  3401               	retlw	1
  1671  0D13  3401               	retlw	1
  1672  0D14  3401               	retlw	1
  1673  0D15  3401               	retlw	1
  1674  0D16  3401               	retlw	1
  1675  0D17  3401               	retlw	1
  1676  0D18                     __end_of_Battery8x21:	
  1677  0D18                     _Battery6x8:	
  1678  0D18  3423               	retlw	35
  1679  0D19  3413               	retlw	19
  1680  0D1A  3408               	retlw	8
  1681  0D1B  3464               	retlw	100
  1682  0D1C  3462               	retlw	98
  1683  0D1D  3400               	retlw	0
  1684  0D1E  343E               	retlw	62
  1685  0D1F  3451               	retlw	81
  1686  0D20  3449               	retlw	73
  1687  0D21  3445               	retlw	69
  1688  0D22  343E               	retlw	62
  1689  0D23  3400               	retlw	0
  1690  0D24  3400               	retlw	0
  1691  0D25  3442               	retlw	66
  1692  0D26  347F               	retlw	127
  1693  0D27  3440               	retlw	64
  1694  0D28  3400               	retlw	0
  1695  0D29  3400               	retlw	0
  1696  0D2A  3442               	retlw	66
  1697  0D2B  3461               	retlw	97
  1698  0D2C  3451               	retlw	81
  1699  0D2D  3449               	retlw	73
  1700  0D2E  3446               	retlw	70
  1701  0D2F  3400               	retlw	0
  1702  0D30  3421               	retlw	33
  1703  0D31  3441               	retlw	65
  1704  0D32  3445               	retlw	69
  1705  0D33  344B               	retlw	75
  1706  0D34  3431               	retlw	49
  1707  0D35  3400               	retlw	0
  1708  0D36  3418               	retlw	24
  1709  0D37  3414               	retlw	20
  1710  0D38  3412               	retlw	18
  1711  0D39  347F               	retlw	127
  1712  0D3A  3410               	retlw	16
  1713  0D3B  3400               	retlw	0
  1714  0D3C  3427               	retlw	39
  1715  0D3D  3445               	retlw	69
  1716  0D3E  3445               	retlw	69
  1717  0D3F  3445               	retlw	69
  1718  0D40  3439               	retlw	57
  1719  0D41  3400               	retlw	0
  1720  0D42  343C               	retlw	60
  1721  0D43  344A               	retlw	74
  1722  0D44  3449               	retlw	73
  1723  0D45  3449               	retlw	73
  1724  0D46  3430               	retlw	48
  1725  0D47  3400               	retlw	0
  1726  0D48  3401               	retlw	1
  1727  0D49  3471               	retlw	113
  1728  0D4A  3409               	retlw	9
  1729  0D4B  3405               	retlw	5
  1730  0D4C  3403               	retlw	3
  1731  0D4D  3400               	retlw	0
  1732  0D4E  3436               	retlw	54
  1733  0D4F  3449               	retlw	73
  1734  0D50  3449               	retlw	73
  1735  0D51  3449               	retlw	73
  1736  0D52  3436               	retlw	54
  1737  0D53  3400               	retlw	0
  1738  0D54  3406               	retlw	6
  1739  0D55  3449               	retlw	73
  1740  0D56  3449               	retlw	73
  1741  0D57  3429               	retlw	41
  1742  0D58  341E               	retlw	30
  1743  0D59  3400               	retlw	0
  1744  0D5A                     __end_of_Battery6x8:	
  1745  0D5A                     _FlightMode8x12:	
  1746  0D5A  34FC               	retlw	252
  1747  0D5B  3400               	retlw	0
  1748  0D5C  3478               	retlw	120
  1749  0D5D  3400               	retlw	0
  1750  0D5E  3430               	retlw	48
  1751  0D5F  3400               	retlw	0
  1752  0D60  3430               	retlw	48
  1753  0D61  3400               	retlw	0
  1754  0D62  34FF               	retlw	255
  1755  0D63  3403               	retlw	3
  1756  0D64  34FE               	retlw	254
  1757  0D65  3401               	retlw	1
  1758  0D66  34FC               	retlw	252
  1759  0D67  3400               	retlw	0
  1760  0D68  3478               	retlw	120
  1761  0D69  3400               	retlw	0
  1762  0D6A  3478               	retlw	120
  1763  0D6B  3400               	retlw	0
  1764  0D6C  3478               	retlw	120
  1765  0D6D  3400               	retlw	0
  1766  0D6E  3478               	retlw	120
  1767  0D6F  3400               	retlw	0
  1768  0D70  3478               	retlw	120
  1769  0D71  3400               	retlw	0
  1770  0D72  3430               	retlw	48
  1771  0D73  3400               	retlw	0
  1772  0D74  3400               	retlw	0
  1773  0D75  3400               	retlw	0
  1774  0D76  3400               	retlw	0
  1775  0D77  3400               	retlw	0
  1776  0D78  3400               	retlw	0
  1777  0D79  3400               	retlw	0
  1778  0D7A                     __end_of_FlightMode8x12:	
  1779  0D7A                     _Reception8x8:	
  1780  0D7A  3400               	retlw	0
  1781  0D7B  343C               	retlw	60
  1782  0D7C  347E               	retlw	126
  1783  0D7D  347E               	retlw	126
  1784  0D7E  347E               	retlw	126
  1785  0D7F  347E               	retlw	126
  1786  0D80  343C               	retlw	60
  1787  0D81  3400               	retlw	0
  1788  0D82  3400               	retlw	0
  1789  0D83  343C               	retlw	60
  1790  0D84  3466               	retlw	102
  1791  0D85  3442               	retlw	66
  1792  0D86  3442               	retlw	66
  1793  0D87  3466               	retlw	102
  1794  0D88  343C               	retlw	60
  1795  0D89  3400               	retlw	0
  1796  0D8A                     __end_of_Reception8x8:	
  1797  0011                     _PIR1bits	set	17
  1798  000C                     _PORTAbits	set	12
  1799  000D                     _PORTBbits	set	13
  1800  000E                     _PORTCbits	set	14
  1801  0015                     _TMR0	set	21
  1802  005F                     _GIE	set	95
  1803  005B                     _IOCIE	set	91
  1804  008D                     _RCIF	set	141
  1805  005D                     _TMR0IE	set	93
  1806  005A                     _TMR0IF	set	90
  1807  0095                     _OPTION_REGbits	set	149
  1808  0099                     _OSCCON	set	153
  1809  009A                     _OSCSTAT	set	154
  1810  0098                     _OSCTUNE	set	152
  1811  008C                     _TRISA	set	140
  1812  008D                     _TRISB	set	141
  1813  008E                     _TRISC	set	142
  1814  0097                     _WDTCON	set	151
  1815  04A8                     _PS0	set	1192
  1816  04A9                     _PS1	set	1193
  1817  04AA                     _PS2	set	1194
  1818  04AB                     _PSA	set	1195
  1819  04B8                     _SWDTEN	set	1208
  1820  04AD                     _TMR0CS	set	1197
  1821  04AC                     _TMR0SE	set	1196
  1822  010C                     _LATA	set	268
  1823  010D                     _LATB	set	269
  1824  010E                     _LATC	set	270
  1825  018C                     _ANSELA	set	396
  1826  018D                     _ANSELB	set	397
  1827  018E                     _ANSELC	set	398
  1828  019F                     _BAUD1CON	set	415
  1829  0199                     _RC1REG	set	409
  1830  019D                     _RC1STA	set	413
  1831  019D                     _RC1STAbits	set	413
  1832  019C                     _SP1BRGH	set	412
  1833  019B                     _SP1BRGL	set	411
  1834  019A                     _TX1REG	set	410
  1835  019E                     _TX1STA	set	414
  1836  0212                     _SSP1ADD	set	530
  1837  0215                     _SSP1CON1	set	533
  1838  0215                     _SSP1CON1bits	set	533
  1839  0214                     _SSP1STAT	set	532
  1840  0214                     _SSP1STATbits	set	532
  1841  0211                     _SSPBUF	set	529
  1842  020C                     _WPUA	set	524
  1843  020D                     _WPUB	set	525
  1844  020E                     _WPUC	set	526
  1845  10AC                     _CKP	set	4268
  1846  1CC1                     _IOCCN1	set	7361
  1847  0E0F                     _PPSLOCK	set	3599
  1848  0E0F                     _PPSLOCKbits	set	3599
  1849  0E24                     _RXPPSbits	set	3620
  1850  0E20                     _SSPCLKPPSbits	set	3616
  1851  0E21                     _SSPDATPPSbits	set	3617
  1852  0E9D                     _RB5PPSbits	set	3741
  1853  0EA3                     _RC3PPSbits	set	3747
  1854  0EA6                     _RC6PPSbits	set	3750
  1855  0D8A                     STR_31:	
  1856  0D8A  3441               	retlw	65	;'A'
  1857  0D8B  3454               	retlw	84	;'T'
  1858  0D8C  342B               	retlw	43	;'+'
  1859  0D8D  3443               	retlw	67	;'C'
  1860  0D8E  344D               	retlw	77	;'M'
  1861  0D8F  3447               	retlw	71	;'G'
  1862  0D90  344C               	retlw	76	;'L'
  1863  0D91  343D               	retlw	61	;'='
  1864  0D92  3422               	retlw	34	;'"'
  1865  0D93  3452               	retlw	82	;'R'
  1866  0D94  3445               	retlw	69	;'E'
  1867  0D95  3443               	retlw	67	;'C'
  1868  0D96  3420               	retlw	32	;' '
  1869  0D97  3455               	retlw	85	;'U'
  1870  0D98  344E               	retlw	78	;'N'
  1871  0D99  3452               	retlw	82	;'R'
  1872  0D9A  3445               	retlw	69	;'E'
  1873  0D9B  3441               	retlw	65	;'A'
  1874  0D9C  3444               	retlw	68	;'D'
  1875  0D9D  3422               	retlw	34	;'"'
  1876  0D9E  342C               	retlw	44	;','
  1877  0D9F  3430               	retlw	48	;'0'
  1878  0DA0  340A               	retlw	10
  1879  0DA1  3400               	retlw	0
  1880  0DA2                     STR_41:	
  1881  0DA2  342C               	retlw	44	;','
  1882  0DA3  3431               	retlw	49	;'1'
  1883  0DA4  3432               	retlw	50	;'2'
  1884  0DA5  3439               	retlw	57	;'9'
  1885  0DA6  342C               	retlw	44	;','
  1886  0DA7  3422               	retlw	34	;'"'
  1887  0DA8  3442               	retlw	66	;'B'
  1888  0DA9  3469               	retlw	105	;'i'
  1889  0DAA  346B               	retlw	107	;'k'
  1890  0DAB  3465               	retlw	101	;'e'
  1891  0DAC  3420               	retlw	32	;' '
  1892  0DAD  3441               	retlw	65	;'A'
  1893  0DAE  346C               	retlw	108	;'l'
  1894  0DAF  3461               	retlw	97	;'a'
  1895  0DB0  3472               	retlw	114	;'r'
  1896  0DB1  346D               	retlw	109	;'m'
  1897  0DB2  3422               	retlw	34	;'"'
  1898  0DB3  340A               	retlw	10
  1899  0DB4  3400               	retlw	0
  1900  0DB5                     STR_85:	
  1901  0DB5  3430               	retlw	48	;'0'
  1902  0DB6  3431               	retlw	49	;'1'
  1903  0DB7  3432               	retlw	50	;'2'
  1904  0DB8  3433               	retlw	51	;'3'
  1905  0DB9  3434               	retlw	52	;'4'
  1906  0DBA  3435               	retlw	53	;'5'
  1907  0DBB  3436               	retlw	54	;'6'
  1908  0DBC  3437               	retlw	55	;'7'
  1909  0DBD  3438               	retlw	56	;'8'
  1910  0DBE  3439               	retlw	57	;'9'
  1911  0DBF  3441               	retlw	65	;'A'
  1912  0DC0  3442               	retlw	66	;'B'
  1913  0DC1  3443               	retlw	67	;'C'
  1914  0DC2  3444               	retlw	68	;'D'
  1915  0DC3  3445               	retlw	69	;'E'
  1916  0DC4  3446               	retlw	70	;'F'
  1917  0DC5  3400               	retlw	0
  1918  0DC6                     STR_42:	
  1919  0DC6  3441               	retlw	65	;'A'
  1920  0DC7  3454               	retlw	84	;'T'
  1921  0DC8  342B               	retlw	43	;'+'
  1922  0DC9  3443               	retlw	67	;'C'
  1923  0DCA  3450               	retlw	80	;'P'
  1924  0DCB  3442               	retlw	66	;'B'
  1925  0DCC  3453               	retlw	83	;'S'
  1926  0DCD  343D               	retlw	61	;'='
  1927  0DCE  3422               	retlw	34	;'"'
  1928  0DCF  3453               	retlw	83	;'S'
  1929  0DD0  344D               	retlw	77	;'M'
  1930  0DD1  3422               	retlw	34	;'"'
  1931  0DD2  340A               	retlw	10
  1932  0DD3  3400               	retlw	0
  1933  0DD4                     STR_61:	
  1934  0DD4  3443               	retlw	67	;'C'
  1935  0DD5  3448               	retlw	72	;'H'
  1936  0DD6  3445               	retlw	69	;'E'
  1937  0DD7  3443               	retlw	67	;'C'
  1938  0DD8  344B               	retlw	75	;'K'
  1939  0DD9  3440               	retlw	64	;'@'
  1940  0DDA  344E               	retlw	78	;'N'
  1941  0DDB  3445               	retlw	69	;'E'
  1942  0DDC  3454               	retlw	84	;'T'
  1943  0DDD  3457               	retlw	87	;'W'
  1944  0DDE  344F               	retlw	79	;'O'
  1945  0DDF  3452               	retlw	82	;'R'
  1946  0DE0  344B               	retlw	75	;'K'
  1947  0DE1  3400               	retlw	0
  1948  0DE2                     STR_44:	
  1949  0DE2  3441               	retlw	65	;'A'
  1950  0DE3  3454               	retlw	84	;'T'
  1951  0DE4  342B               	retlw	43	;'+'
  1952  0DE5  3443               	retlw	67	;'C'
  1953  0DE6  3450               	retlw	80	;'P'
  1954  0DE7  3442               	retlw	66	;'B'
  1955  0DE8  3452               	retlw	82	;'R'
  1956  0DE9  343D               	retlw	61	;'='
  1957  0DEA  3431               	retlw	49	;'1'
  1958  0DEB  3430               	retlw	48	;'0'
  1959  0DEC  340A               	retlw	10
  1960  0DED  3400               	retlw	0
  1961  0DEE                     STR_9:	
  1962  0DEE  3441               	retlw	65	;'A'
  1963  0DEF  3454               	retlw	84	;'T'
  1964  0DF0  342B               	retlw	43	;'+'
  1965  0DF1  3443               	retlw	67	;'C'
  1966  0DF2  3453               	retlw	83	;'S'
  1967  0DF3  3443               	retlw	67	;'C'
  1968  0DF4  344C               	retlw	76	;'L'
  1969  0DF5  344B               	retlw	75	;'K'
  1970  0DF6  343D               	retlw	61	;'='
  1971  0DF7  3432               	retlw	50	;'2'
  1972  0DF8  340A               	retlw	10
  1973  0DF9  3400               	retlw	0
  1974  0DFA                     STR_40:	
  1975  0DFA  3441               	retlw	65	;'A'
  1976  0DFB  3454               	retlw	84	;'T'
  1977  0DFC  342B               	retlw	43	;'+'
  1978  0DFD  3443               	retlw	67	;'C'
  1979  0DFE  3450               	retlw	80	;'P'
  1980  0DFF  3442               	retlw	66	;'B'
  1981  0E00  3457               	retlw	87	;'W'
  1982  0E01  343D               	retlw	61	;'='
  1983  0E02  3431               	retlw	49	;'1'
  1984  0E03  3430               	retlw	48	;'0'
  1985  0E04  342C               	retlw	44	;','
  1986  0E05  3400               	retlw	0
  1987  0E06                     STR_39:	
  1988  0E06  3453               	retlw	83	;'S'
  1989  0E07  3441               	retlw	65	;'A'
  1990  0E08  3456               	retlw	86	;'V'
  1991  0E09  3445               	retlw	69	;'E'
  1992  0E0A  3440               	retlw	64	;'@'
  1993  0E0B  3450               	retlw	80	;'P'
  1994  0E0C  3448               	retlw	72	;'H'
  1995  0E0D  344F               	retlw	79	;'O'
  1996  0E0E  344E               	retlw	78	;'N'
  1997  0E0F  3445               	retlw	69	;'E'
  1998  0E10  343F               	retlw	63	;'?'
  1999  0E11  3400               	retlw	0
  2000  0E12                     STR_6:	
  2001  0E12  3441               	retlw	65	;'A'
  2002  0E13  3454               	retlw	84	;'T'
  2003  0E14  342B               	retlw	43	;'+'
  2004  0E15  3443               	retlw	67	;'C'
  2005  0E16  344D               	retlw	77	;'M'
  2006  0E17  3447               	retlw	71	;'G'
  2007  0E18  3446               	retlw	70	;'F'
  2008  0E19  343D               	retlw	61	;'='
  2009  0E1A  3431               	retlw	49	;'1'
  2010  0E1B  340A               	retlw	10
  2011  0E1C  3400               	retlw	0
  2012  0E1D                     STR_11:	
  2013  0E1D  3441               	retlw	65	;'A'
  2014  0E1E  3454               	retlw	84	;'T'
  2015  0E1F  342B               	retlw	43	;'+'
  2016  0E20  3443               	retlw	67	;'C'
  2017  0E21  3446               	retlw	70	;'F'
  2018  0E22  3455               	retlw	85	;'U'
  2019  0E23  344E               	retlw	78	;'N'
  2020  0E24  343D               	retlw	61	;'='
  2021  0E25  3431               	retlw	49	;'1'
  2022  0E26  340A               	retlw	10
  2023  0E27  3400               	retlw	0
  2024  0E28                     STR_8:	
  2025  0E28  3441               	retlw	65	;'A'
  2026  0E29  3454               	retlw	84	;'T'
  2027  0E2A  342B               	retlw	43	;'+'
  2028  0E2B  3443               	retlw	67	;'C'
  2029  0E2C  3446               	retlw	70	;'F'
  2030  0E2D  3455               	retlw	85	;'U'
  2031  0E2E  344E               	retlw	78	;'N'
  2032  0E2F  343D               	retlw	61	;'='
  2033  0E30  3434               	retlw	52	;'4'
  2034  0E31  340A               	retlw	10
  2035  0E32  3400               	retlw	0
  2036  0E33                     STR_2:	
  2037  0E33  3441               	retlw	65	;'A'
  2038  0E34  3454               	retlw	84	;'T'
  2039  0E35  342B               	retlw	43	;'+'
  2040  0E36  3443               	retlw	67	;'C'
  2041  0E37  3453               	retlw	83	;'S'
  2042  0E38  344D               	retlw	77	;'M'
  2043  0E39  3449               	retlw	73	;'I'
  2044  0E3A  344E               	retlw	78	;'N'
  2045  0E3B  3453               	retlw	83	;'S'
  2046  0E3C  340A               	retlw	10
  2047  0E3D  3400               	retlw	0
  2048  0E3E                     STR_78:	
  2049  0E3E  3453               	retlw	83	;'S'
  2050  0E3F  3441               	retlw	65	;'A'
  2051  0E40  3456               	retlw	86	;'V'
  2052  0E41  3445               	retlw	69	;'E'
  2053  0E42  3444               	retlw	68	;'D'
  2054  0E43  3440               	retlw	64	;'@'
  2055  0E44  3440               	retlw	64	;'@'
  2056  0E45  3440               	retlw	64	;'@'
  2057  0E46  3440               	retlw	64	;'@'
  2058  0E47  3440               	retlw	64	;'@'
  2059  0E48  3400               	retlw	0
  2060  0E49                     STR_83:	
  2061  0E49  3441               	retlw	65	;'A'
  2062  0E4A  344C               	retlw	76	;'L'
  2063  0E4B  3445               	retlw	69	;'E'
  2064  0E4C  3452               	retlw	82	;'R'
  2065  0E4D  3454               	retlw	84	;'T'
  2066  0E4E  3440               	retlw	64	;'@'
  2067  0E4F  3440               	retlw	64	;'@'
  2068  0E50  3440               	retlw	64	;'@'
  2069  0E51  3440               	retlw	64	;'@'
  2070  0E52  3440               	retlw	64	;'@'
  2071  0E53  3400               	retlw	0
  2072  0E54                     STR_82:	
  2073  0E54  3441               	retlw	65	;'A'
  2074  0E55  344C               	retlw	76	;'L'
  2075  0E56  3441               	retlw	65	;'A'
  2076  0E57  3452               	retlw	82	;'R'
  2077  0E58  344D               	retlw	77	;'M'
  2078  0E59  3440               	retlw	64	;'@'
  2079  0E5A  344F               	retlw	79	;'O'
  2080  0E5B  344E               	retlw	78	;'N'
  2081  0E5C  3440               	retlw	64	;'@'
  2082  0E5D  3440               	retlw	64	;'@'
  2083  0E5E  3400               	retlw	0
  2084  0E5F                     STR_80:	
  2085  0E5F  3441               	retlw	65	;'A'
  2086  0E60  344C               	retlw	76	;'L'
  2087  0E61  3441               	retlw	65	;'A'
  2088  0E62  3452               	retlw	82	;'R'
  2089  0E63  344D               	retlw	77	;'M'
  2090  0E64  3440               	retlw	64	;'@'
  2091  0E65  344F               	retlw	79	;'O'
  2092  0E66  3446               	retlw	70	;'F'
  2093  0E67  3446               	retlw	70	;'F'
  2094  0E68  3440               	retlw	64	;'@'
  2095  0E69  3400               	retlw	0
  2096  0E6A                     STR_1:	
  2097  0E6A  3441               	retlw	65	;'A'
  2098  0E6B  3430               	retlw	48	;'0'
  2099  0E6C  3442               	retlw	66	;'B'
  2100  0E6D  3441               	retlw	65	;'A'
  2101  0E6E  3437               	retlw	55	;'7'
  2102  0E6F  3444               	retlw	68	;'D'
  2103  0E70  3435               	retlw	53	;'5'
  2104  0E71  3439               	retlw	57	;'9'
  2105  0E72  3433               	retlw	51	;'3'
  2106  0E73  3445               	retlw	69	;'E'
  2107  0E74  3400               	retlw	0
  2108  0E75                     STR_67:	
  2109  0E75  3442               	retlw	66	;'B'
  2110  0E76  3441               	retlw	65	;'A'
  2111  0E77  3444               	retlw	68	;'D'
  2112  0E78  3447               	retlw	71	;'G'
  2113  0E79  3445               	retlw	69	;'E'
  2114  0E7A  3440               	retlw	64	;'@'
  2115  0E7B  3440               	retlw	64	;'@'
  2116  0E7C  3440               	retlw	64	;'@'
  2117  0E7D  3440               	retlw	64	;'@'
  2118  0E7E  3400               	retlw	0
  2119  0E7F                     STR_63:	
  2120  0E7F  3457               	retlw	87	;'W'
  2121  0E80  3445               	retlw	69	;'E'
  2122  0E81  344C               	retlw	76	;'L'
  2123  0E82  3443               	retlw	67	;'C'
  2124  0E83  344F               	retlw	79	;'O'
  2125  0E84  344D               	retlw	77	;'M'
  2126  0E85  3445               	retlw	69	;'E'
  2127  0E86  3440               	retlw	64	;'@'
  2128  0E87  3440               	retlw	64	;'@'
  2129  0E88  3400               	retlw	0
  2130  0E89                     STR_48:	
  2131  0E89  3453               	retlw	83	;'S'
  2132  0E8A  3445               	retlw	69	;'E'
  2133  0E8B  3454               	retlw	84	;'T'
  2134  0E8C  3440               	retlw	64	;'@'
  2135  0E8D  3450               	retlw	80	;'P'
  2136  0E8E  3448               	retlw	72	;'H'
  2137  0E8F  344F               	retlw	79	;'O'
  2138  0E90  344E               	retlw	78	;'N'
  2139  0E91  3445               	retlw	69	;'E'
  2140  0E92  3400               	retlw	0
  2141  0E93                     STR_17:	
  2142  0E93  3440               	retlw	64	;'@'
  2143  0E94  3440               	retlw	64	;'@'
  2144  0E95  3440               	retlw	64	;'@'
  2145  0E96  3440               	retlw	64	;'@'
  2146  0E97  3440               	retlw	64	;'@'
  2147  0E98  3440               	retlw	64	;'@'
  2148  0E99  3440               	retlw	64	;'@'
  2149  0E9A  3440               	retlw	64	;'@'
  2150  0E9B  3400               	retlw	0
  2151  0E9C                     STR_51:	
  2152  0E9C  3453               	retlw	83	;'S'
  2153  0E9D  344D               	retlw	77	;'M'
  2154  0E9E  3453               	retlw	83	;'S'
  2155  0E9F  3440               	retlw	64	;'@'
  2156  0EA0  3453               	retlw	83	;'S'
  2157  0EA1  3445               	retlw	69	;'E'
  2158  0EA2  344E               	retlw	78	;'N'
  2159  0EA3  3454               	retlw	84	;'T'
  2160  0EA4  3400               	retlw	0
  2161  0EA5                     STR_13:	
  2162  0EA5  3441               	retlw	65	;'A'
  2163  0EA6  3454               	retlw	84	;'T'
  2164  0EA7  342B               	retlw	43	;'+'
  2165  0EA8  3443               	retlw	67	;'C'
  2166  0EA9  3442               	retlw	66	;'B'
  2167  0EAA  3443               	retlw	67	;'C'
  2168  0EAB  340A               	retlw	10
  2169  0EAC  3400               	retlw	0
  2170  0EAD                     STR_22:	
  2171  0EAD  3441               	retlw	65	;'A'
  2172  0EAE  3454               	retlw	84	;'T'
  2173  0EAF  342B               	retlw	43	;'+'
  2174  0EB0  3443               	retlw	67	;'C'
  2175  0EB1  3453               	retlw	83	;'S'
  2176  0EB2  3451               	retlw	81	;'Q'
  2177  0EB3  340A               	retlw	10
  2178  0EB4  3400               	retlw	0
  2179  0EB5                     STR_60:	
  2180  0EB5  3457               	retlw	87	;'W'
  2181  0EB6  3445               	retlw	69	;'E'
  2182  0EB7  344C               	retlw	76	;'L'
  2183  0EB8  3443               	retlw	67	;'C'
  2184  0EB9  344F               	retlw	79	;'O'
  2185  0EBA  344D               	retlw	77	;'M'
  2186  0EBB  3445               	retlw	69	;'E'
  2187  0EBC  3400               	retlw	0
  2188  0EBD                     STR_49:	
  2189  0EBD  344E               	retlw	78	;'N'
  2190  0EBE  3455               	retlw	85	;'U'
  2191  0EBF  344D               	retlw	77	;'M'
  2192  0EC0  3442               	retlw	66	;'B'
  2193  0EC1  3445               	retlw	69	;'E'
  2194  0EC2  3452               	retlw	82	;'R'
  2195  0EC3  3400               	retlw	0
  2196  0EC4                     STR_37:	
  2197  0EC4  344E               	retlw	78	;'N'
  2198  0EC5  344F               	retlw	79	;'O'
  2199  0EC6  3440               	retlw	64	;'@'
  2200  0EC7  3453               	retlw	83	;'S'
  2201  0EC8  344D               	retlw	77	;'M'
  2202  0EC9  3453               	retlw	83	;'S'
  2203  0ECA  3400               	retlw	0
  2204  0ECB                     STR_30:	
  2205  0ECB  3431               	retlw	49	;'1'
  2206  0ECC  3431               	retlw	49	;'1'
  2207  0ECD  3431               	retlw	49	;'1'
  2208  0ECE  3431               	retlw	49	;'1'
  2209  0ECF  3431               	retlw	49	;'1'
  2210  0ED0  3400               	retlw	0
  2211  0ED1                     STR_29:	
  2212  0ED1  3431               	retlw	49	;'1'
  2213  0ED2  3431               	retlw	49	;'1'
  2214  0ED3  3431               	retlw	49	;'1'
  2215  0ED4  3431               	retlw	49	;'1'
  2216  0ED5  3432               	retlw	50	;'2'
  2217  0ED6  3400               	retlw	0
  2218  0ED7                     STR_28:	
  2219  0ED7  3431               	retlw	49	;'1'
  2220  0ED8  3431               	retlw	49	;'1'
  2221  0ED9  3431               	retlw	49	;'1'
  2222  0EDA  3432               	retlw	50	;'2'
  2223  0EDB  3432               	retlw	50	;'2'
  2224  0EDC  3400               	retlw	0
  2225  0EDD                     STR_27:	
  2226  0EDD  3431               	retlw	49	;'1'
  2227  0EDE  3431               	retlw	49	;'1'
  2228  0EDF  3432               	retlw	50	;'2'
  2229  0EE0  3432               	retlw	50	;'2'
  2230  0EE1  3432               	retlw	50	;'2'
  2231  0EE2  3400               	retlw	0
  2232  0EE3                     STR_26:	
  2233  0EE3  3431               	retlw	49	;'1'
  2234  0EE4  3432               	retlw	50	;'2'
  2235  0EE5  3432               	retlw	50	;'2'
  2236  0EE6  3432               	retlw	50	;'2'
  2237  0EE7  3432               	retlw	50	;'2'
  2238  0EE8  3400               	retlw	0
  2239  0EE9                     STR_25:	
  2240  0EE9  3432               	retlw	50	;'2'
  2241  0EEA  3432               	retlw	50	;'2'
  2242  0EEB  3432               	retlw	50	;'2'
  2243  0EEC  3432               	retlw	50	;'2'
  2244  0EED  3432               	retlw	50	;'2'
  2245  0EEE  3400               	retlw	0
  2246  0EEF                     STR_57:	
  2247  0EEF  3445               	retlw	69	;'E'
  2248  0EF0  3452               	retlw	82	;'R'
  2249  0EF1  3452               	retlw	82	;'R'
  2250  0EF2  344F               	retlw	79	;'O'
  2251  0EF3  3452               	retlw	82	;'R'
  2252  0EF4  3400               	retlw	0
  2253  0EF5                     STR_81:	
  2254  0EF5  3425               	retlw	37	;'%'
  2255  0EF6  3430               	retlw	48	;'0'
  2256  0EF7  3432               	retlw	50	;'2'
  2257  0EF8  3464               	retlw	100	;'d'
  2258  0EF9  3400               	retlw	0
  2259  0EFA                     STR_59:	
  2260  0EFA  3441               	retlw	65	;'A'
  2261  0EFB  3454               	retlw	84	;'T'
  2262  0EFC  340A               	retlw	10
  2263  0EFD  3400               	retlw	0
  2264  0EFE                     STR_3:	
  2265  0EFE  3420               	retlw	32	;' '
  2266  0EFF  342C               	retlw	44	;','
  2267  0F00  3400               	retlw	0
  2268  0F01                     STR_55:	
  2269  0F01  3425               	retlw	37	;'%'
  2270  0F02  3458               	retlw	88	;'X'
  2271  0F03  3400               	retlw	0
  2272  0F04                     STR_53:	
  2273  0F04  342F               	retlw	47	;'/'
  2274  0F05  3400               	retlw	0
  2275  0F06                     STR_54:	
  2276  0F06  3430               	retlw	48	;'0'
  2277  0F07  3400               	retlw	0
  2278  0F08                     STR_20:	
  2279  0F08  3433               	retlw	51	;'3'
  2280  0F09  3400               	retlw	0
  2281  0F0A                     STR_21:	
  2282  0F0A  3434               	retlw	52	;'4'
  2283  0F0B  3400               	retlw	0
  2284  0F0C                     STR_52:	
  2285  0F0C  3435               	retlw	53	;'5'
  2286  0F0D  3400               	retlw	0
  2287  0DD3                     
  2288                           ; #config settings
  2289  0000                     
  2290                           	psect	cinit
  2291  07D7                     start_initialization:	
  2292  07D7                     __initialization:	
  2293                           
  2294                           ; Initialize objects allocated to BANK1
  2295  07D7  0021               	movlb	1	; select bank1
  2296  07D8  319C  24C3  3187   	fcall	__pidataBANK1	;fetch initializer
  2297  07DB  00EE               	movwf	__pdataBANK1& (0+127)
  2298  07DC  319C  24C4  3187   	fcall	__pidataBANK1+1	;fetch initializer
  2299  07DF  00EF               	movwf	(__pdataBANK1+1)& (0+127)
  2300                           
  2301                           ; Clear objects allocated to BANK0
  2302  07E0  305E               	movlw	low __pbssBANK0
  2303  07E1  0084               	movwf	4
  2304  07E2  3000               	movlw	high __pbssBANK0
  2305  07E3  0085               	movwf	5
  2306  07E4  3012               	movlw	18
  2307  07E5  318F  270E  3187   	fcall	clear_ram0
  2308                           
  2309                           ; Clear objects allocated to BANK1
  2310  07E8  01E8               	clrf	__pbssBANK1& (0+127)
  2311  07E9  01E9               	clrf	(__pbssBANK1+1)& (0+127)
  2312  07EA  01EA               	clrf	(__pbssBANK1+2)& (0+127)
  2313  07EB  01EB               	clrf	(__pbssBANK1+3)& (0+127)
  2314  07EC  01EC               	clrf	(__pbssBANK1+4)& (0+127)
  2315  07ED  01ED               	clrf	(__pbssBANK1+5)& (0+127)
  2316                           
  2317                           ; Clear objects allocated to BANK2
  2318  07EE  3020               	movlw	low __pbssBANK2
  2319  07EF  0084               	movwf	4
  2320  07F0  3001               	movlw	high __pbssBANK2
  2321  07F1  0085               	movwf	5
  2322  07F2  3025               	movlw	37
  2323  07F3  318F  270E  3187   	fcall	clear_ram0
  2324                           
  2325                           ; Clear objects allocated to BANK3
  2326  07F6  30A0               	movlw	low __pbssBANK3
  2327  07F7  0084               	movwf	4
  2328  07F8  3001               	movlw	high __pbssBANK3
  2329  07F9  0085               	movwf	5
  2330  07FA  3043               	movlw	67
  2331  07FB  318F  270E         	fcall	clear_ram0
  2332  07FD                     end_of_initialization:	
  2333                           ;End of C runtime variable initialization code
  2334                           
  2335  07FD                     __end_of__initialization:	
  2336  07FD  0020               	movlb	0
  2337  07FE  3183  2BB1         	ljmp	_main	;jump to C main() function
  2338                           
  2339                           	psect	bssBANK0
  2340  005E                     __pbssBANK0:	
  2341  005E                     _font:	
  2342  005E                     	ds	2
  2343  0060                     _screenTimer:	
  2344  0060                     	ds	2
  2345  0062                     _timer:	
  2346  0062                     	ds	2
  2347  0064                     strtok@sp:	
  2348  0064                     	ds	2
  2349  0066                     _alarmOn:	
  2350  0066                     	ds	1
  2351  0067                     _flightMode:	
  2352  0067                     	ds	1
  2353  0068                     _height:	
  2354  0068                     	ds	1
  2355  0069                     _imgCancel:	
  2356  0069                     	ds	1
  2357  006A                     _imgSetup:	
  2358  006A                     	ds	1
  2359  006B                     _imgValidate:	
  2360  006B                     	ds	1
  2361  006C                     _max:	
  2362  006C                     	ds	1
  2363  006D                     _min:	
  2364  006D                     	ds	1
  2365  006E                     _sleepMode:	
  2366  006E                     	ds	1
  2367  006F                     _width:	
  2368  006F                     	ds	1
  2369                           
  2370                           	psect	bssBANK1
  2371  00E8                     __pbssBANK1:	
  2372  00E8                     _font2:	
  2373  00E8                     	ds	2
  2374  00EA                     _simOk:	
  2375  00EA                     	ds	2
  2376  00EC                     _TagType:	
  2377  00EC                     	ds	2
  2378                           
  2379                           	psect	dataBANK1
  2380  00EE                     __pdataBANK1:	
  2381  00EE                     _RFID_CARD_NUMBER:	
  2382  00EE                     	ds	2
  2383                           
  2384                           	psect	bssBANK2
  2385  0120                     __pbssBANK2:	
  2386  0120                     RFID_Ok@F5666:	
  2387  0120                     	ds	11
  2388  012B                     _buffer:	
  2389  012B                     	ds	20
  2390  013F                     _UID:	
  2391  013F                     	ds	6
  2392                           
  2393                           	psect	bssBANK3
  2394  01A0                     __pbssBANK3:	
  2395  01A0                     _result3:	
  2396  01A0                     	ds	67
  2397                           
  2398                           	psect	clrtext
  2399  0F0E                     clear_ram0:	
  2400                           ;	Called with FSR0 containing the base address, and
  2401                           ;	WREG with the size to clear
  2402                           
  2403  0F0E  0064               	clrwdt	;clear the watchdog before getting into this loop
  2404  0F0F                     clrloop0:	
  2405  0F0F  0180               	clrf	0	;clear RAM location pointed to by FSR
  2406  0F10  3101               	addfsr 0,1
  2407  0F11  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2408  0F12  2F0F               	goto	clrloop0	;have we reached the end yet?
  2409  0F13  3400               	retlw	0	;all done for this memory range, return
  2410                           
  2411                           	psect	cstackBANK2
  2412  0145                     __pcstackBANK2:	
  2413  0145                     main@phoneNumber:	
  2414                           
  2415                           ; 2 bytes @ 0x0
  2416  0145                     	ds	2
  2417                           
  2418                           	psect	cstackBANK1
  2419  00A0                     __pcstackBANK1:	
  2420  00A0                     ReadPhoneNumber@result0:	
  2421  00A0                     SavePhoneNumber@str1:	
  2422                           ; 20 bytes @ 0x0
  2423                           
  2424                           
  2425                           ; 50 bytes @ 0x0
  2426  00A0                     	ds	20
  2427  00B4                     ReadPhoneNumber@result1:	
  2428                           
  2429                           ; 50 bytes @ 0x14
  2430  00B4                     	ds	50
  2431  00E6                     ReadPhoneNumber@phoneNumber:	
  2432                           
  2433                           ; 2 bytes @ 0x46
  2434  00E6                     	ds	2
  2435                           
  2436                           	psect	cstackCOMMON
  2437  0070                     __pcstackCOMMON:	
  2438  0070                     ?_isdigit:	
  2439  0070                     ?_ShowFlightIcon:	
  2440                           ; 1 bit 
  2441                           
  2442  0070                     ?_strcpy:	
  2443                           ; 1 bytes @ 0x0
  2444                           
  2445  0070                     ?_ResetScreenTimer:	
  2446                           ; 1 bytes @ 0x0
  2447                           
  2448  0070                     ??_ResetScreenTimer:	
  2449                           ; 1 bytes @ 0x0
  2450                           
  2451  0070                     ?_CheckSW1:	
  2452                           ; 1 bytes @ 0x0
  2453                           
  2454  0070                     ?_CheckSW2:	
  2455                           ; 1 bytes @ 0x0
  2456                           
  2457  0070                     ?_OnOff:	
  2458                           ; 1 bytes @ 0x0
  2459                           
  2460  0070                     ?_Reset:	
  2461                           ; 1 bytes @ 0x0
  2462                           
  2463  0070                     ?_SetAlarmOn:	
  2464                           ; 1 bytes @ 0x0
  2465                           
  2466  0070                     ?_SetAlarmOff:	
  2467                           ; 1 bytes @ 0x0
  2468                           
  2469  0070                     ?_RaiseAlarm:	
  2470                           ; 1 bytes @ 0x0
  2471                           
  2472  0070                     ?_SettingMenu:	
  2473                           ; 1 bytes @ 0x0
  2474                           
  2475  0070                     ??_isdigit:	
  2476                           ; 1 bytes @ 0x0
  2477                           
  2478  0070                     ?___delay_sec:	
  2479                           ; 1 bytes @ 0x0
  2480                           
  2481  0070                     ?_Bip:	
  2482                           ; 1 bytes @ 0x0
  2483                           
  2484  0070                     ?_OSC_Init:	
  2485                           ; 1 bytes @ 0x0
  2486                           
  2487  0070                     ??_OSC_Init:	
  2488                           ; 1 bytes @ 0x0
  2489                           
  2490  0070                     ?_PIN_Init:	
  2491                           ; 1 bytes @ 0x0
  2492                           
  2493  0070                     ??_PIN_Init:	
  2494                           ; 1 bytes @ 0x0
  2495                           
  2496  0070                     ?_INTER_Init:	
  2497                           ; 1 bytes @ 0x0
  2498                           
  2499  0070                     ??_INTER_Init:	
  2500                           ; 1 bytes @ 0x0
  2501                           
  2502  0070                     ?_UART_Init:	
  2503                           ; 1 bytes @ 0x0
  2504                           
  2505  0070                     ??_UART_Init:	
  2506                           ; 1 bytes @ 0x0
  2507                           
  2508  0070                     ?_UART_Write:	
  2509                           ; 1 bytes @ 0x0
  2510                           
  2511  0070                     ??_UART_Write:	
  2512                           ; 1 bytes @ 0x0
  2513                           
  2514  0070                     ?_UART_Read:	
  2515                           ; 1 bytes @ 0x0
  2516                           
  2517  0070                     ??_UART_Read:	
  2518                           ; 1 bytes @ 0x0
  2519                           
  2520  0070                     ?_UART_Read_Text:	
  2521                           ; 1 bytes @ 0x0
  2522                           
  2523  0070                     ?_SPI_Init:	
  2524                           ; 1 bytes @ 0x0
  2525                           
  2526  0070                     ??_SPI_Init:	
  2527                           ; 1 bytes @ 0x0
  2528                           
  2529  0070                     ?_SPI_Write:	
  2530                           ; 1 bytes @ 0x0
  2531                           
  2532  0070                     ??_SPI_Write:	
  2533                           ; 1 bytes @ 0x0
  2534                           
  2535  0070                     ?_Oled_WriteCmd:	
  2536                           ; 1 bytes @ 0x0
  2537                           
  2538  0070                     ?_Oled_WriteRam:	
  2539                           ; 1 bytes @ 0x0
  2540                           
  2541  0070                     ?_Oled_Reset:	
  2542                           ; 1 bytes @ 0x0
  2543                           
  2544  0070                     ??_Oled_Reset:	
  2545                           ; 1 bytes @ 0x0
  2546                           
  2547  0070                     ?_Oled_FillScreen:	
  2548                           ; 1 bytes @ 0x0
  2549                           
  2550  0070                     ?_Oled_Init:	
  2551                           ; 1 bytes @ 0x0
  2552                           
  2553  0070                     ?_ScreenOn:	
  2554                           ; 1 bytes @ 0x0
  2555                           
  2556  0070                     ?_ScreenOff:	
  2557                           ; 1 bytes @ 0x0
  2558                           
  2559  0070                     ?_Deactivate_Scroll:	
  2560                           ; 1 bytes @ 0x0
  2561                           
  2562  0070                     ?_Activate_Scroll:	
  2563                           ; 1 bytes @ 0x0
  2564                           
  2565  0070                     ?_SimCard_Init:	
  2566                           ; 1 bytes @ 0x0
  2567                           
  2568  0070                     ?_GsmOff:	
  2569                           ; 1 bytes @ 0x0
  2570                           
  2571  0070                     ?_GsmWakeUp:	
  2572                           ; 1 bytes @ 0x0
  2573                           
  2574  0070                     ?_GsmOn:	
  2575                           ; 1 bytes @ 0x0
  2576                           
  2577  0070                     ?_CheckBattery:	
  2578                           ; 1 bytes @ 0x0
  2579                           
  2580  0070                     ?_CheckNetwork:	
  2581                           ; 1 bytes @ 0x0
  2582                           
  2583  0070                     ?_SendSms:	
  2584                           ; 1 bytes @ 0x0
  2585                           
  2586  0070                     ?_ACC_ReadReg:	
  2587                           ; 1 bytes @ 0x0
  2588                           
  2589  0070                     ?_ADLX_Init:	
  2590                           ; 1 bytes @ 0x0
  2591                           
  2592  0070                     ?_MFRC522_Rd:	
  2593                           ; 1 bytes @ 0x0
  2594                           
  2595  0070                     ?_MFRC522_AntiColl:	
  2596                           ; 1 bytes @ 0x0
  2597                           
  2598  0070                     ?_MFRC522_isCard:	
  2599                           ; 1 bytes @ 0x0
  2600                           
  2601  0070                     ?_MFRC522_ReadCardSerial:	
  2602                           ; 1 bytes @ 0x0
  2603                           
  2604  0070                     ?_RFID_Ok:	
  2605                           ; 1 bytes @ 0x0
  2606                           
  2607  0070                     ?_main:	
  2608                           ; 1 bytes @ 0x0
  2609                           
  2610  0070                     ?_strlen:	
  2611                           ; 1 bytes @ 0x0
  2612                           
  2613  0070                     ?_strcat:	
  2614                           ; 2 bytes @ 0x0
  2615                           
  2616  0070                     ?_strcmp:	
  2617                           ; 2 bytes @ 0x0
  2618                           
  2619  0070                     ?_strchr:	
  2620                           ; 2 bytes @ 0x0
  2621                           
  2622  0070                     ?___wmul:	
  2623                           ; 2 bytes @ 0x0
  2624                           
  2625  0070                     ?___awdiv:	
  2626                           ; 2 bytes @ 0x0
  2627                           
  2628  0070                     ?___lwdiv:	
  2629                           ; 2 bytes @ 0x0
  2630                           
  2631  0070                     PIN_Init@state:	
  2632                           ; 2 bytes @ 0x0
  2633                           
  2634  0070                     UART_Write@data:	
  2635                           ; 1 bytes @ 0x0
  2636                           
  2637  0070                     SPI_Write@data:	
  2638                           ; 1 bytes @ 0x0
  2639                           
  2640  0070                     _isdigit$1025:	
  2641                           ; 1 bytes @ 0x0
  2642                           
  2643  0070                     ___delay_sec@n:	
  2644                           ; 1 bytes @ 0x0
  2645                           
  2646  0070                     Bip@n:	
  2647                           ; 2 bytes @ 0x0
  2648                           
  2649  0070                     UART_Read_Text@Output:	
  2650                           ; 2 bytes @ 0x0
  2651                           
  2652  0070                     ___wmul@multiplier:	
  2653                           ; 2 bytes @ 0x0
  2654                           
  2655  0070                     ___awdiv@divisor:	
  2656                           ; 2 bytes @ 0x0
  2657                           
  2658  0070                     ___lwdiv@divisor:	
  2659                           ; 2 bytes @ 0x0
  2660                           
  2661  0070                     strcat@to:	
  2662                           ; 2 bytes @ 0x0
  2663                           
  2664  0070                     strcmp@s2:	
  2665                           ; 2 bytes @ 0x0
  2666                           
  2667  0070                     strcpy@from:	
  2668                           ; 2 bytes @ 0x0
  2669                           
  2670  0070                     strlen@s:	
  2671                           ; 2 bytes @ 0x0
  2672                           
  2673  0070                     strchr@ptr:	
  2674                           ; 2 bytes @ 0x0
  2675                           
  2676                           
  2677                           ; 2 bytes @ 0x0
  2678  0070                     	ds	1
  2679  0071                     ?_UART_Write_Text:	
  2680  0071                     ??_Oled_WriteCmd:	
  2681                           ; 1 bytes @ 0x1
  2682                           
  2683  0071                     ??_Oled_WriteRam:	
  2684                           ; 1 bytes @ 0x1
  2685                           
  2686  0071                     ??_ACC_ReadReg:	
  2687                           ; 1 bytes @ 0x1
  2688                           
  2689  0071                     ?_ACC_WriteReg:	
  2690                           ; 1 bytes @ 0x1
  2691                           
  2692  0071                     ??_MFRC522_Rd:	
  2693                           ; 1 bytes @ 0x1
  2694                           
  2695  0071                     Oled_WriteCmd@cmd:	
  2696                           ; 1 bytes @ 0x1
  2697                           
  2698  0071                     Oled_WriteRam@dat:	
  2699                           ; 1 bytes @ 0x1
  2700                           
  2701  0071                     ACC_WriteReg@cmd:	
  2702                           ; 1 bytes @ 0x1
  2703                           
  2704  0071                     isdigit@c:	
  2705                           ; 1 bytes @ 0x1
  2706                           
  2707  0071                     UART_Write_Text@text:	
  2708                           ; 1 bytes @ 0x1
  2709                           
  2710                           
  2711                           ; 2 bytes @ 0x1
  2712  0071                     	ds	1
  2713  0072                     ??_strlen:	
  2714  0072                     ??_strcpy:	
  2715                           ; 1 bytes @ 0x2
  2716                           
  2717  0072                     ??_strcmp:	
  2718                           ; 1 bytes @ 0x2
  2719                           
  2720  0072                     ??___delay_sec:	
  2721                           ; 1 bytes @ 0x2
  2722                           
  2723  0072                     ?_Oled_SetPointer:	
  2724                           ; 1 bytes @ 0x2
  2725                           
  2726  0072                     ??_ScreenOn:	
  2727                           ; 1 bytes @ 0x2
  2728                           
  2729  0072                     ??_ScreenOff:	
  2730                           ; 1 bytes @ 0x2
  2731                           
  2732  0072                     ??_Deactivate_Scroll:	
  2733                           ; 1 bytes @ 0x2
  2734                           
  2735  0072                     ??_Activate_Scroll:	
  2736                           ; 1 bytes @ 0x2
  2737                           
  2738  0072                     ?_Left_HorizontalScroll:	
  2739                           ; 1 bytes @ 0x2
  2740                           
  2741  0072                     ??_ACC_WriteReg:	
  2742                           ; 1 bytes @ 0x2
  2743                           
  2744  0072                     Oled_SetPointer@pag:	
  2745                           ; 1 bytes @ 0x2
  2746                           
  2747  0072                     Left_HorizontalScroll@end_page:	
  2748                           ; 1 bytes @ 0x2
  2749                           
  2750  0072                     MFRC522_Rd@addr:	
  2751                           ; 1 bytes @ 0x2
  2752                           
  2753  0072                     Bip@t:	
  2754                           ; 1 bytes @ 0x2
  2755                           
  2756  0072                     UART_Read_Text@length:	
  2757                           ; 2 bytes @ 0x2
  2758                           
  2759  0072                     ___wmul@multiplicand:	
  2760                           ; 2 bytes @ 0x2
  2761                           
  2762  0072                     ___awdiv@dividend:	
  2763                           ; 2 bytes @ 0x2
  2764                           
  2765  0072                     ___lwdiv@dividend:	
  2766                           ; 2 bytes @ 0x2
  2767                           
  2768  0072                     strcat@from:	
  2769                           ; 2 bytes @ 0x2
  2770                           
  2771  0072                     strchr@chr:	
  2772                           ; 2 bytes @ 0x2
  2773                           
  2774                           
  2775                           ; 2 bytes @ 0x2
  2776  0072                     	ds	1
  2777  0073                     ??_UART_Write_Text:	
  2778  0073                     ??_Oled_SetPointer:	
  2779                           ; 1 bytes @ 0x3
  2780                           
  2781  0073                     Left_HorizontalScroll@set_time:	
  2782                           ; 1 bytes @ 0x3
  2783                           
  2784  0073                     MFRC522_Rd@val:	
  2785                           ; 1 bytes @ 0x3
  2786                           
  2787  0073                     strcmp@r:	
  2788                           ; 1 bytes @ 0x3
  2789                           
  2790  0073                     strcpy@cp:	
  2791                           ; 1 bytes @ 0x3
  2792                           
  2793                           
  2794                           ; 1 bytes @ 0x3
  2795  0073                     	ds	1
  2796  0074                     ??_strcat:	
  2797  0074                     ??_strchr:	
  2798                           ; 1 bytes @ 0x4
  2799                           
  2800  0074                     ??_Bip:	
  2801                           ; 1 bytes @ 0x4
  2802                           
  2803  0074                     ??_UART_Read_Text:	
  2804                           ; 1 bytes @ 0x4
  2805                           
  2806  0074                     ??_Left_HorizontalScroll:	
  2807                           ; 1 bytes @ 0x4
  2808                           
  2809  0074                     ?_MFRC522_Wr:	
  2810                           ; 1 bytes @ 0x4
  2811                           
  2812  0074                     ??___wmul:	
  2813                           ; 1 bytes @ 0x4
  2814                           
  2815  0074                     ??___awdiv:	
  2816                           ; 1 bytes @ 0x4
  2817                           
  2818  0074                     ??___lwdiv:	
  2819                           ; 1 bytes @ 0x4
  2820                           
  2821  0074                     Left_HorizontalScroll@start_page:	
  2822                           ; 1 bytes @ 0x4
  2823                           
  2824  0074                     ACC_ReadReg@reg:	
  2825                           ; 1 bytes @ 0x4
  2826                           
  2827  0074                     MFRC522_Wr@value:	
  2828                           ; 1 bytes @ 0x4
  2829                           
  2830  0074                     strcmp@s1:	
  2831                           ; 1 bytes @ 0x4
  2832                           
  2833  0074                     strcpy@to:	
  2834                           ; 1 bytes @ 0x4
  2835                           
  2836  0074                     UART_Write_Text@i:	
  2837                           ; 1 bytes @ 0x4
  2838                           
  2839  0074                     ___wmul@product:	
  2840                           ; 2 bytes @ 0x4
  2841                           
  2842  0074                     strcat@cp:	
  2843                           ; 2 bytes @ 0x4
  2844                           
  2845  0074                     strlen@cp:	
  2846                           ; 2 bytes @ 0x4
  2847                           
  2848                           
  2849                           ; 2 bytes @ 0x4
  2850  0074                     	ds	1
  2851  0075                     ??_MFRC522_Wr:	
  2852  0075                     Oled_SetPointer@low_column:	
  2853                           ; 1 bytes @ 0x5
  2854                           
  2855  0075                     ACC_ReadReg@val:	
  2856                           ; 1 bytes @ 0x5
  2857                           
  2858  0075                     ACC_WriteReg@reg:	
  2859                           ; 1 bytes @ 0x5
  2860                           
  2861  0075                     MFRC522_Wr@addr:	
  2862                           ; 1 bytes @ 0x5
  2863                           
  2864  0075                     ___awdiv@counter:	
  2865                           ; 1 bytes @ 0x5
  2866                           
  2867  0075                     ___lwdiv@counter:	
  2868                           ; 1 bytes @ 0x5
  2869                           
  2870                           
  2871                           ; 1 bytes @ 0x5
  2872  0075                     	ds	1
  2873  0076                     ?_SendUartCmd:	
  2874  0076                     ??_ADLX_Init:	
  2875                           ; 1 bytes @ 0x6
  2876                           
  2877  0076                     ?_MFRC522_Clear_Bit:	
  2878                           ; 1 bytes @ 0x6
  2879                           
  2880  0076                     ?_MFRC522_Set_Bit:	
  2881                           ; 1 bytes @ 0x6
  2882                           
  2883  0076                     ?_atoi:	
  2884                           ; 1 bytes @ 0x6
  2885                           
  2886  0076                     Oled_SetPointer@seg:	
  2887                           ; 2 bytes @ 0x6
  2888                           
  2889  0076                     MFRC522_Clear_Bit@mask:	
  2890                           ; 1 bytes @ 0x6
  2891                           
  2892  0076                     MFRC522_Set_Bit@mask:	
  2893                           ; 1 bytes @ 0x6
  2894                           
  2895  0076                     ___awdiv@sign:	
  2896                           ; 1 bytes @ 0x6
  2897                           
  2898  0076                     Bip@i:	
  2899                           ; 1 bytes @ 0x6
  2900                           
  2901  0076                     SendUartCmd@cmd:	
  2902                           ; 2 bytes @ 0x6
  2903                           
  2904  0076                     atoi@s:	
  2905                           ; 2 bytes @ 0x6
  2906                           
  2907  0076                     ___lwdiv@quotient:	
  2908                           ; 2 bytes @ 0x6
  2909                           
  2910                           
  2911                           ; 2 bytes @ 0x6
  2912  0076                     	ds	1
  2913  0077                     ??_MFRC522_Clear_Bit:	
  2914  0077                     ??_MFRC522_Set_Bit:	
  2915                           ; 1 bytes @ 0x7
  2916                           
  2917  0077                     ?_strspn:	
  2918                           ; 1 bytes @ 0x7
  2919                           
  2920  0077                     ?_strcspn:	
  2921                           ; 2 bytes @ 0x7
  2922                           
  2923  0077                     Oled_SetPointer@hig_column:	
  2924                           ; 2 bytes @ 0x7
  2925                           
  2926  0077                     ADLX_Init@reg:	
  2927                           ; 1 bytes @ 0x7
  2928                           
  2929  0077                     UART_Read_Text@i:	
  2930                           ; 1 bytes @ 0x7
  2931                           
  2932  0077                     ___awdiv@quotient:	
  2933                           ; 2 bytes @ 0x7
  2934                           
  2935  0077                     strcspn@s1:	
  2936                           ; 2 bytes @ 0x7
  2937                           
  2938  0077                     strspn@s1:	
  2939                           ; 2 bytes @ 0x7
  2940                           
  2941                           
  2942                           ; 2 bytes @ 0x7
  2943  0077                     	ds	1
  2944  0078                     ??_atoi:	
  2945  0078                     ??_SendUartCmd:	
  2946                           ; 1 bytes @ 0x8
  2947                           
  2948  0078                     ??_Oled_FillScreen:	
  2949                           ; 1 bytes @ 0x8
  2950                           
  2951  0078                     ?_Oled_WriteChar:	
  2952                           ; 1 bytes @ 0x8
  2953                           
  2954  0078                     ??_GsmWakeUp:	
  2955                           ; 1 bytes @ 0x8
  2956                           
  2957  0078                     ?_SavePhoneNumber:	
  2958                           ; 1 bytes @ 0x8
  2959                           
  2960  0078                     ?___lwmod:	
  2961                           ; 1 bytes @ 0x8
  2962                           
  2963  0078                     Oled_WriteChar@seg:	
  2964                           ; 2 bytes @ 0x8
  2965                           
  2966  0078                     MFRC522_Set_Bit@addr:	
  2967                           ; 1 bytes @ 0x8
  2968                           
  2969  0078                     Bip@j:	
  2970                           ; 1 bytes @ 0x8
  2971                           
  2972  0078                     SavePhoneNumber@myPhone:	
  2973                           ; 2 bytes @ 0x8
  2974                           
  2975  0078                     ___lwmod@divisor:	
  2976                           ; 2 bytes @ 0x8
  2977                           
  2978                           
  2979                           ; 2 bytes @ 0x8
  2980  0078                     	ds	1
  2981  0079                     ??_Oled_SetFont:	
  2982  0079                     ??_SimCard_Init:	
  2983                           ; 1 bytes @ 0x9
  2984                           
  2985  0079                     Oled_FillScreen@pattern:	
  2986                           ; 1 bytes @ 0x9
  2987                           
  2988  0079                     Oled_WriteChar@pag:	
  2989                           ; 1 bytes @ 0x9
  2990                           
  2991  0079                     MFRC522_Clear_Bit@addr:	
  2992                           ; 1 bytes @ 0x9
  2993                           
  2994  0079                     strcspn@s2:	
  2995                           ; 1 bytes @ 0x9
  2996                           
  2997  0079                     strspn@s2:	
  2998                           ; 2 bytes @ 0x9
  2999                           
  3000                           
  3001                           ; 2 bytes @ 0x9
  3002  0079                     	ds	1
  3003  007A                     ??_Oled_WriteChar:	
  3004  007A                     ??_SavePhoneNumber:	
  3005                           ; 1 bytes @ 0xA
  3006                           
  3007  007A                     ??_MFRC522_Request:	
  3008                           ; 1 bytes @ 0xA
  3009                           
  3010  007A                     ??_MFRC522_AntiColl:	
  3011                           ; 1 bytes @ 0xA
  3012                           
  3013  007A                     Oled_FillScreen@j:	
  3014                           ; 1 bytes @ 0xA
  3015                           
  3016  007A                     atoi@sign:	
  3017                           ; 1 bytes @ 0xA
  3018                           
  3019  007A                     ___lwmod@dividend:	
  3020                           ; 1 bytes @ 0xA
  3021                           
  3022                           
  3023                           ; 2 bytes @ 0xA
  3024  007A                     	ds	1
  3025  007B                     ??_strspn:	
  3026  007B                     ??_strcspn:	
  3027                           ; 1 bytes @ 0xB
  3028                           
  3029  007B                     Oled_FillScreen@i:	
  3030                           ; 1 bytes @ 0xB
  3031                           
  3032  007B                     atoi@a:	
  3033                           ; 1 bytes @ 0xB
  3034                           
  3035                           
  3036                           ; 2 bytes @ 0xB
  3037  007B                     	ds	1
  3038  007C                     ??_MFRC522_isCard:	
  3039  007C                     ??___lwmod:	
  3040                           ; 1 bytes @ 0xC
  3041                           
  3042                           
  3043                           ; 1 bytes @ 0xC
  3044  007C                     	ds	1
  3045  007D                     ??_strtok:	
  3046  007D                     ??_MFRC522_ReadCardSerial:	
  3047                           ; 1 bytes @ 0xD
  3048                           
  3049  007D                     MFRC522_isCard@TagType:	
  3050                           ; 1 bytes @ 0xD
  3051                           
  3052  007D                     ___lwmod@counter:	
  3053                           ; 1 bytes @ 0xD
  3054                           
  3055                           
  3056                           ; 1 bytes @ 0xD
  3057  007D                     	ds	1
  3058  007E                     ??_GsmOff:	
  3059  007E                     ??_GsmOn:	
  3060                           ; 1 bytes @ 0xE
  3061                           
  3062                           
  3063                           	psect	cstackBANK0
  3064  0020                     __pcstackBANK0:	
  3065                           ; 1 bytes @ 0xE
  3066                           
  3067  0020                     ??_Oled_Init:	
  3068  0020                     ?_Oled_SetFont:	
  3069                           ; 1 bytes @ 0x0
  3070                           
  3071  0020                     ?_MFRC522_ToCard:	
  3072                           ; 1 bytes @ 0x0
  3073                           
  3074  0020                     ?_sprintf:	
  3075                           ; 1 bytes @ 0x0
  3076                           
  3077  0020                     Oled_WriteChar@c:	
  3078                           ; 2 bytes @ 0x0
  3079                           
  3080  0020                     Oled_SetFont@_font:	
  3081                           ; 1 bytes @ 0x0
  3082                           
  3083  0020                     MFRC522_ToCard@sendData:	
  3084                           ; 2 bytes @ 0x0
  3085                           
  3086  0020                     sprintf@sp:	
  3087                           ; 2 bytes @ 0x0
  3088                           
  3089  0020                     strcspn@i:	
  3090                           ; 2 bytes @ 0x0
  3091                           
  3092  0020                     strspn@i:	
  3093                           ; 2 bytes @ 0x0
  3094                           
  3095  0020                     SimCard_Init@result:	
  3096                           ; 2 bytes @ 0x0
  3097                           
  3098  0020                     SavePhoneNumber@str2:	
  3099                           ; 15 bytes @ 0x0
  3100                           
  3101                           
  3102                           ; 50 bytes @ 0x0
  3103  0020                     	ds	1
  3104  0021                     _Oled_WriteChar$1368:	
  3105                           
  3106                           ; 2 bytes @ 0x1
  3107  0021                     	ds	1
  3108  0022                     ?_strtok:	
  3109  0022                     Oled_SetFont@_width:	
  3110                           ; 2 bytes @ 0x2
  3111                           
  3112  0022                     MFRC522_ToCard@sendLen:	
  3113                           ; 1 bytes @ 0x2
  3114                           
  3115  0022                     sprintf@f:	
  3116                           ; 1 bytes @ 0x2
  3117                           
  3118  0022                     strtok@s1:	
  3119                           ; 2 bytes @ 0x2
  3120                           
  3121                           
  3122                           ; 2 bytes @ 0x2
  3123  0022                     	ds	1
  3124  0023                     Oled_SetFont@_height:	
  3125  0023                     Oled_WriteChar@y_pag:	
  3126                           ; 1 bytes @ 0x3
  3127                           
  3128  0023                     MFRC522_ToCard@backData:	
  3129                           ; 1 bytes @ 0x3
  3130                           
  3131                           
  3132                           ; 2 bytes @ 0x3
  3133  0023                     	ds	1
  3134  0024                     Oled_SetFont@_min:	
  3135  0024                     Oled_WriteChar@x_seg:	
  3136                           ; 1 bytes @ 0x4
  3137                           
  3138  0024                     strtok@s2:	
  3139                           ; 1 bytes @ 0x4
  3140                           
  3141                           
  3142                           ; 2 bytes @ 0x4
  3143  0024                     	ds	1
  3144  0025                     Oled_SetFont@_max:	
  3145  0025                     MFRC522_ToCard@backLen:	
  3146                           ; 1 bytes @ 0x5
  3147                           
  3148  0025                     Oled_WriteChar@i:	
  3149                           ; 1 bytes @ 0x5
  3150                           
  3151                           
  3152                           ; 2 bytes @ 0x5
  3153  0025                     	ds	1
  3154  0026                     ??_sprintf:	
  3155  0026                     ??_MFRC522_ToCard:	
  3156                           ; 1 bytes @ 0x6
  3157                           
  3158                           
  3159                           ; 1 bytes @ 0x6
  3160  0026                     	ds	1
  3161  0027                     Oled_WriteChar@j:	
  3162                           
  3163                           ; 2 bytes @ 0x7
  3164  0027                     	ds	2
  3165  0029                     ?_Oled_ConstText:	
  3166  0029                     Oled_ConstText@buffer:	
  3167                           ; 1 bytes @ 0x9
  3168                           
  3169                           
  3170                           ; 2 bytes @ 0x9
  3171  0029                     	ds	1
  3172  002A                     sprintf@idx:	
  3173                           
  3174                           ; 1 bytes @ 0xA
  3175  002A                     	ds	1
  3176  002B                     Oled_ConstText@seg:	
  3177  002B                     sprintf@ap:	
  3178                           ; 1 bytes @ 0xB
  3179                           
  3180                           
  3181                           ; 1 bytes @ 0xB
  3182  002B                     	ds	1
  3183  002C                     Oled_ConstText@pag:	
  3184  002C                     sprintf@prec:	
  3185                           ; 1 bytes @ 0xC
  3186                           
  3187                           
  3188                           ; 1 bytes @ 0xC
  3189  002C                     	ds	1
  3190  002D                     ??_Oled_ConstText:	
  3191  002D                     sprintf@val:	
  3192                           ; 1 bytes @ 0xD
  3193                           
  3194                           
  3195                           ; 2 bytes @ 0xD
  3196  002D                     	ds	1
  3197  002E                     MFRC522_ToCard@waitIRq:	
  3198                           
  3199                           ; 1 bytes @ 0xE
  3200  002E                     	ds	1
  3201  002F                     Oled_ConstText@x_seg:	
  3202  002F                     MFRC522_ToCard@_status:	
  3203                           ; 1 bytes @ 0xF
  3204                           
  3205  002F                     sprintf@flag:	
  3206                           ; 1 bytes @ 0xF
  3207                           
  3208                           
  3209                           ; 1 bytes @ 0xF
  3210  002F                     	ds	1
  3211  0030                     ?_ShowMessage:	
  3212  0030                     ??_ShowFlightIcon:	
  3213                           ; 1 bytes @ 0x10
  3214                           
  3215  0030                     ?_ShowBattLoad:	
  3216                           ; 1 bytes @ 0x10
  3217                           
  3218  0030                     ?_ShowBattIcon:	
  3219                           ; 1 bytes @ 0x10
  3220                           
  3221  0030                     ?_ShowReceptionIcon:	
  3222                           ; 1 bytes @ 0x10
  3223                           
  3224  0030                     ?_ShowNumber:	
  3225                           ; 1 bytes @ 0x10
  3226                           
  3227  0030                     ?_ShowIcon:	
  3228                           ; 1 bytes @ 0x10
  3229                           
  3230  0030                     MFRC522_ToCard@lastBits:	
  3231                           ; 1 bytes @ 0x10
  3232                           
  3233  0030                     ShowBattIcon@level:	
  3234                           ; 1 bytes @ 0x10
  3235                           
  3236  0030                     ShowBattLoad@level:	
  3237                           ; 2 bytes @ 0x10
  3238                           
  3239  0030                     ShowReceptionIcon@level:	
  3240                           ; 2 bytes @ 0x10
  3241                           
  3242  0030                     ShowMessage@message:	
  3243                           ; 2 bytes @ 0x10
  3244                           
  3245  0030                     ShowNumber@number:	
  3246                           ; 2 bytes @ 0x10
  3247                           
  3248  0030                     ShowIcon@id:	
  3249                           ; 2 bytes @ 0x10
  3250                           
  3251  0030                     sprintf@width:	
  3252                           ; 2 bytes @ 0x10
  3253                           
  3254                           
  3255                           ; 2 bytes @ 0x10
  3256  0030                     	ds	1
  3257  0031                     MFRC522_ToCard@irqEn:	
  3258                           
  3259                           ; 1 bytes @ 0x11
  3260  0031                     	ds	1
  3261  0032                     ??_ShowBattLoad:	
  3262  0032                     ??_ShowBattIcon:	
  3263                           ; 1 bytes @ 0x12
  3264                           
  3265  0032                     ??_ShowReceptionIcon:	
  3266                           ; 1 bytes @ 0x12
  3267                           
  3268  0032                     ShowMessage@page:	
  3269                           ; 1 bytes @ 0x12
  3270                           
  3271  0032                     ShowNumber@seg:	
  3272                           ; 1 bytes @ 0x12
  3273                           
  3274  0032                     ShowIcon@seg:	
  3275                           ; 1 bytes @ 0x12
  3276                           
  3277  0032                     MFRC522_ToCard@command:	
  3278                           ; 1 bytes @ 0x12
  3279                           
  3280  0032                     sprintf@c:	
  3281                           ; 1 bytes @ 0x12
  3282                           
  3283                           
  3284                           ; 1 bytes @ 0x12
  3285  0032                     	ds	1
  3286  0033                     ??_ShowMessage:	
  3287  0033                     ShowNumber@page:	
  3288                           ; 1 bytes @ 0x13
  3289                           
  3290  0033                     ShowIcon@page:	
  3291                           ; 1 bytes @ 0x13
  3292                           
  3293  0033                     MFRC522_ToCard@i:	
  3294                           ; 1 bytes @ 0x13
  3295                           
  3296                           
  3297                           ; 2 bytes @ 0x13
  3298  0033                     	ds	1
  3299  0034                     ??_ShowNumber:	
  3300  0034                     ??_ShowIcon:	
  3301                           ; 1 bytes @ 0x14
  3302                           
  3303                           
  3304                           ; 1 bytes @ 0x14
  3305  0034                     	ds	1
  3306  0035                     MFRC522_ToCard@n:	
  3307                           
  3308                           ; 1 bytes @ 0x15
  3309  0035                     	ds	1
  3310  0036                     ??_CheckNetwork:	
  3311  0036                     ?_MFRC522_Request:	
  3312                           ; 1 bytes @ 0x16
  3313                           
  3314  0036                     MFRC522_Request@TagType:	
  3315                           ; 1 bytes @ 0x16
  3316                           
  3317  0036                     MFRC522_AntiColl@serNumCheck:	
  3318                           ; 1 bytes @ 0x16
  3319                           
  3320                           
  3321                           ; 1 bytes @ 0x16
  3322  0036                     	ds	1
  3323  0037                     ??_OnOff:	
  3324  0037                     ??_SetAlarmOff:	
  3325                           ; 1 bytes @ 0x17
  3326                           
  3327  0037                     ??_CheckBattery:	
  3328                           ; 1 bytes @ 0x17
  3329                           
  3330  0037                     ??_SendSms:	
  3331                           ; 1 bytes @ 0x17
  3332                           
  3333  0037                     ?_ReadLastSMS:	
  3334                           ; 1 bytes @ 0x17
  3335                           
  3336  0037                     ?_ReadPhoneNumber:	
  3337                           ; 2 bytes @ 0x17
  3338                           
  3339  0037                     MFRC522_Request@reqMode:	
  3340                           ; 2 bytes @ 0x17
  3341                           
  3342  0037                     MFRC522_AntiColl@unLen:	
  3343                           ; 1 bytes @ 0x17
  3344                           
  3345  0037                     CheckNetwork@res:	
  3346                           ; 2 bytes @ 0x17
  3347                           
  3348                           
  3349                           ; 20 bytes @ 0x17
  3350  0037                     	ds	1
  3351  0038                     ??_CheckSW1:	
  3352  0038                     ??_Reset:	
  3353                           ; 1 bytes @ 0x18
  3354                           
  3355  0038                     ??_ReadLastSMS:	
  3356                           ; 1 bytes @ 0x18
  3357                           
  3358  0038                     ??_ReadPhoneNumber:	
  3359                           ; 1 bytes @ 0x18
  3360                           
  3361  0038                     MFRC522_Request@_status:	
  3362                           ; 1 bytes @ 0x18
  3363                           
  3364  0038                     CheckBattery@res:	
  3365                           ; 1 bytes @ 0x18
  3366                           
  3367                           
  3368                           ; 31 bytes @ 0x18
  3369  0038                     	ds	1
  3370  0039                     MFRC522_AntiColl@_status:	
  3371  0039                     MFRC522_Request@backBits:	
  3372                           ; 1 bytes @ 0x19
  3373                           
  3374                           
  3375                           ; 2 bytes @ 0x19
  3376  0039                     	ds	1
  3377  003A                     MFRC522_AntiColl@i:	
  3378                           
  3379                           ; 1 bytes @ 0x1A
  3380  003A                     	ds	1
  3381  003B                     MFRC522_AntiColl@serNum:	
  3382  003B                     ReadLastSMS@phoneNbr:	
  3383                           ; 1 bytes @ 0x1B
  3384                           
  3385                           
  3386                           ; 2 bytes @ 0x1B
  3387  003B                     	ds	1
  3388  003C                     MFRC522_ReadCardSerial@_status:	
  3389                           
  3390                           ; 1 bytes @ 0x1C
  3391  003C                     	ds	1
  3392  003D                     MFRC522_ReadCardSerial@str:	
  3393                           
  3394                           ; 1 bytes @ 0x1D
  3395  003D                     	ds	1
  3396  003E                     ??_RFID_Ok:	
  3397                           
  3398                           ; 1 bytes @ 0x1E
  3399  003E                     	ds	2
  3400  0040                     RFID_Ok@badgeSerialNumber:	
  3401                           
  3402                           ; 11 bytes @ 0x20
  3403  0040                     	ds	11
  3404  004B                     CheckNetwork@netSignal:	
  3405  004B                     RFID_Ok@i:	
  3406                           ; 2 bytes @ 0x2B
  3407                           
  3408                           
  3409                           ; 2 bytes @ 0x2B
  3410  004B                     	ds	2
  3411  004D                     RFID_Ok@buffer:	
  3412  004D                     CheckNetwork@netSignalInt:	
  3413                           ; 1 bytes @ 0x2D
  3414                           
  3415                           
  3416                           ; 2 bytes @ 0x2D
  3417  004D                     	ds	2
  3418  004F                     ??_SetAlarmOn:	
  3419  004F                     ??_RaiseAlarm:	
  3420                           ; 1 bytes @ 0x2F
  3421                           
  3422                           
  3423                           ; 1 bytes @ 0x2F
  3424  004F                     	ds	3
  3425  0052                     ??_SettingMenu:	
  3426  0052                     SetAlarmOn@i:	
  3427                           ; 1 bytes @ 0x32
  3428                           
  3429  0052                     RaiseAlarm@i:	
  3430                           ; 2 bytes @ 0x32
  3431                           
  3432                           
  3433                           ; 2 bytes @ 0x32
  3434  0052                     	ds	3
  3435  0055                     SettingMenu@phoneNumber:	
  3436                           
  3437                           ; 2 bytes @ 0x35
  3438  0055                     	ds	2
  3439  0057                     ??_CheckSW2:	
  3440  0057                     CheckBattery@battLoad:	
  3441                           ; 1 bytes @ 0x37
  3442                           
  3443                           
  3444                           ; 2 bytes @ 0x37
  3445  0057                     	ds	2
  3446  0059                     CheckBattery@battLoadInt:	
  3447                           
  3448                           ; 2 bytes @ 0x39
  3449  0059                     	ds	2
  3450  005B                     ??_main:	
  3451                           
  3452                           ; 1 bytes @ 0x3B
  3453  005B                     	ds	3
  3454                           
  3455                           	psect	maintext
  3456  03B1                     __pmaintext:	
  3457 ;;
  3458 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  3459 ;;
  3460 ;; *************** function _main *****************
  3461 ;; Defined at:
  3462 ;;		line 35 in file "main.c"
  3463 ;; Parameters:    Size  Location     Type
  3464 ;;		None
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  phoneNumber     2    0[BANK2 ] PTR unsigned char 
  3467 ;;		 -> STR_50(1), ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), 
  3468 ;;		 -> CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3473 ;; Tracked objects:
  3474 ;;		On entry : B1F/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3479 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3480 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3481 ;;      Totals:         0       3       0       2       0       0       0       0       0       0       0       0       
      +0       0
  3482 ;;Total ram usage:        5 bytes
  3483 ;; Hardware stack levels required when called:   10
  3484 ;; This function calls:
  3485 ;;		_ADLX_Init
  3486 ;;		_Bip
  3487 ;;		_CheckBattery
  3488 ;;		_CheckNetwork
  3489 ;;		_CheckSW1
  3490 ;;		_CheckSW2
  3491 ;;		_Deactivate_Scroll
  3492 ;;		_GsmOn
  3493 ;;		_INTER_Init
  3494 ;;		_Left_HorizontalScroll
  3495 ;;		_OSC_Init
  3496 ;;		_Oled_FillScreen
  3497 ;;		_Oled_Init
  3498 ;;		_OnOff
  3499 ;;		_PIN_Init
  3500 ;;		_RaiseAlarm
  3501 ;;		_ReadPhoneNumber
  3502 ;;		_Reset
  3503 ;;		_ResetScreenTimer
  3504 ;;		_SPI_Init
  3505 ;;		_SendUartCmd
  3506 ;;		_SetAlarmOff
  3507 ;;		_SetAlarmOn
  3508 ;;		_ShowMessage
  3509 ;;		_SimCard_Init
  3510 ;;		_UART_Init
  3511 ;;		___delay_sec
  3512 ;; This function is called by:
  3513 ;;		Startup code after reset
  3514 ;; This function uses a non-reentrant model
  3515 ;;
  3516                           
  3517                           
  3518                           ;psect for function _main
  3519  03B1                     _main:	
  3520                           
  3521                           ;main.c: 37: SWDTEN = 1;
  3522                           
  3523                           ;incstack = 0
  3524                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3525  03B1  0021               	movlb	1	; select bank1
  3526  03B2  1417               	bsf	23,0	;volatile
  3527                           
  3528                           ;main.c: 38: OSC_Init();
  3529  03B3  3180  2004  3183   	fcall	_OSC_Init
  3530                           
  3531                           ;main.c: 39: PIN_Init();
  3532  03B6  318F  2714  3183   	fcall	_PIN_Init
  3533                           
  3534                           ;main.c: 40: INTER_Init();
  3535  03B9  319D  2570  3183   	fcall	_INTER_Init
  3536                           
  3537                           ;main.c: 41: UART_Init();
  3538  03BC  319D  2515  3183   	fcall	_UART_Init
  3539                           
  3540                           ;main.c: 42: SPI_Init();
  3541  03BF  319C  24E9  3183   	fcall	_SPI_Init
  3542                           
  3543                           ;main.c: 43: Oled_Init();
  3544  03C2  3196  26DE  3183   	fcall	_Oled_Init
  3545                           
  3546                           ;main.c: 44: ADLX_Init();
  3547  03C5  3193  23CC  3183   	fcall	_ADLX_Init
  3548  03C8  0064               	clrwdt	;# 
  3549                           
  3550                           ;main.c: 48: SendUartCmd("AT\n");
  3551  03C9  30FA               	movlw	low (STR_59| (0+32768))
  3552  03CA  00F6               	movwf	SendUartCmd@cmd
  3553  03CB  308E               	movlw	high (STR_59| (0+32768))
  3554  03CC  00F7               	movwf	SendUartCmd@cmd+1
  3555  03CD  319C  24DB  3183   	fcall	_SendUartCmd
  3556                           
  3557                           ;main.c: 49: __delay_sec(1);
  3558  03D0  3001               	movlw	1
  3559  03D1  00F0               	movwf	___delay_sec@n
  3560  03D2  3000               	movlw	0
  3561  03D3  00F1               	movwf	___delay_sec@n+1
  3562  03D4  319D  25D9  3183   	fcall	___delay_sec
  3563                           
  3564                           ;main.c: 50: GsmOn();
  3565  03D7  319D  25A1  3183   	fcall	_GsmOn
  3566                           
  3567                           ;main.c: 51: __delay_sec(1);
  3568  03DA  3001               	movlw	1
  3569  03DB  00F0               	movwf	___delay_sec@n
  3570  03DC  3000               	movlw	0
  3571  03DD  00F1               	movwf	___delay_sec@n+1
  3572  03DE  319D  25D9  3183   	fcall	___delay_sec
  3573                           
  3574                           ;main.c: 52: SimCard_Init();
  3575  03E1  319D  25B2  3183   	fcall	_SimCard_Init
  3576                           
  3577                           ;main.c: 55: SWDTEN = 0;
  3578  03E4  0021               	movlb	1	; select bank1
  3579  03E5  1017               	bcf	23,0	;volatile
  3580                           
  3581                           ;main.c: 56: ResetScreenTimer();
  3582  03E6  319C  24D5  3183   	fcall	_ResetScreenTimer
  3583                           
  3584                           ;main.c: 57: ShowMessage("WELCOME", 3);
  3585  03E9  30B5               	movlw	low (STR_60| (0+32768))
  3586  03EA  0020               	movlb	0	; select bank0
  3587  03EB  00B0               	movwf	ShowMessage@message
  3588  03EC  308E               	movlw	high (STR_60| (0+32768))
  3589  03ED  00B1               	movwf	ShowMessage@message+1
  3590  03EE  3003               	movlw	3
  3591  03EF  00DB               	movwf	??_main
  3592  03F0  085B               	movf	??_main,w
  3593  03F1  00B2               	movwf	ShowMessage@page
  3594  03F2  319F  278E  3183   	fcall	_ShowMessage
  3595                           
  3596                           ;main.c: 58: Left_HorizontalScroll(3, 4, 4);
  3597  03F5  3004               	movlw	4
  3598  03F6  0020               	movlb	0	; select bank0
  3599  03F7  00DB               	movwf	??_main
  3600  03F8  085B               	movf	??_main,w
  3601  03F9  00F2               	movwf	Left_HorizontalScroll@end_page
  3602  03FA  3004               	movlw	4
  3603  03FB  00DC               	movwf	??_main+1
  3604  03FC  085C               	movf	??_main+1,w
  3605  03FD  00F3               	movwf	Left_HorizontalScroll@set_time
  3606  03FE  3003               	movlw	3
  3607  03FF  319F  2747  3183   	fcall	_Left_HorizontalScroll
  3608                           
  3609                           ;main.c: 59: __delay_sec(4);
  3610  0402  3004               	movlw	4
  3611  0403  00F0               	movwf	___delay_sec@n
  3612  0404  3000               	movlw	0
  3613  0405  00F1               	movwf	___delay_sec@n+1
  3614  0406  319D  25D9  3183   	fcall	___delay_sec
  3615                           
  3616                           ;main.c: 60: Deactivate_Scroll();
  3617  0409  319C  24C9  3183   	fcall	_Deactivate_Scroll
  3618                           
  3619                           ;main.c: 61: Oled_FillScreen(0x00);
  3620  040C  3000               	movlw	0
  3621  040D  3190  2000  3183   	fcall	_Oled_FillScreen
  3622                           
  3623                           ;main.c: 62: SWDTEN = 1;
  3624  0410  0021               	movlb	1	; select bank1
  3625  0411  1417               	bsf	23,0	;volatile
  3626  0412                     l562:	
  3627                           ;main.c: 65: while(1){
  3628                           
  3629  0412  0064               	clrwdt	;# 
  3630                           
  3631                           ;main.c: 67: if(CheckNetwork()){
  3632  0413  3181  21FE  3183   	fcall	_CheckNetwork
  3633  0416  3A00               	xorlw	0
  3634  0417  1D03               	btfss	3,2
  3635  0418  2C2D               	goto	l566
  3636                           
  3637                           ;main.c: 69: }
  3638                           ;main.c: 70: __delay_sec(1);
  3639                           
  3640                           ;main.c: 68: break;
  3641  0419  3001               	movlw	1
  3642  041A  00F0               	movwf	___delay_sec@n
  3643  041B  3000               	movlw	0
  3644  041C  00F1               	movwf	___delay_sec@n+1
  3645  041D  319D  25D9  3183   	fcall	___delay_sec
  3646                           
  3647                           ;main.c: 71: ShowMessage("CHECK@NETWORK", 3);
  3648  0420  30D4               	movlw	low (STR_61| (0+32768))
  3649  0421  0020               	movlb	0	; select bank0
  3650  0422  00B0               	movwf	ShowMessage@message
  3651  0423  308D               	movlw	high (STR_61| (0+32768))
  3652  0424  00B1               	movwf	ShowMessage@message+1
  3653  0425  3003               	movlw	3
  3654  0426  00DB               	movwf	??_main
  3655  0427  085B               	movf	??_main,w
  3656  0428  00B2               	movwf	ShowMessage@page
  3657  0429  319F  278E  3183   	fcall	_ShowMessage
  3658  042C  2C12               	goto	l562
  3659  042D                     l566:	
  3660                           ;main.c: 72: }
  3661                           ;main.c: 75: while(1){
  3662                           
  3663  042D  0064               	clrwdt	;# 
  3664                           
  3665                           ;main.c: 77: CheckSW1();
  3666  042E  3195  25E8  3183   	fcall	_CheckSW1
  3667                           
  3668                           ;main.c: 78: CheckSW2();
  3669  0431  3194  24FB  3183   	fcall	_CheckSW2
  3670                           
  3671                           ;main.c: 79: OnOff();
  3672  0434  3190  20C3  3183   	fcall	_OnOff
  3673                           
  3674                           ;main.c: 80: char * phoneNumber = ReadPhoneNumber();
  3675  0437  3180  200C  3183   	fcall	_ReadPhoneNumber
  3676  043A  0020               	movlb	0	; select bank0
  3677  043B  0838               	movf	?_ReadPhoneNumber+1,w
  3678  043C  0022               	movlb	2	; select bank2
  3679  043D  00C6               	movwf	(main@phoneNumber+1)^(0+256)
  3680  043E  0020               	movlb	0	; select bank0
  3681  043F  0837               	movf	?_ReadPhoneNumber,w
  3682  0440  0022               	movlb	2	; select bank2
  3683  0441  00C5               	movwf	main@phoneNumber^(0+256)
  3684                           
  3685                           ;main.c: 81: if(phoneNumber!=""){
  3686  0442  308D               	movlw	high ((STR_42+13)| (0+32768))
  3687  0443  0646               	xorwf	(main@phoneNumber+1)^(0+256),w
  3688  0444  1D03               	skipz
  3689  0445  2C48               	goto	u6495
  3690  0446  30D3               	movlw	low ((STR_42+13)| (0+32768))
  3691  0447  0645               	xorwf	main@phoneNumber^(0+256),w
  3692  0448                     u6495:	
  3693  0448  1903               	skipnz
  3694  0449  2C2D               	goto	l566
  3695                           
  3696                           ;main.c: 82: Bip(1,100);
  3697  044A  3001               	movlw	1
  3698  044B  00F0               	movwf	Bip@n
  3699  044C  3000               	movlw	0
  3700  044D  00F1               	movwf	Bip@n+1
  3701  044E  3064               	movlw	100
  3702  044F  00F2               	movwf	Bip@t
  3703  0450  3000               	movlw	0
  3704  0451  00F3               	movwf	Bip@t+1
  3705  0452  3192  22A6  3183   	fcall	_Bip
  3706                           
  3707                           ;main.c: 83: Reset();
  3708  0455  319E  26E4  3183   	fcall	_Reset
  3709  0458                     l570:	
  3710                           ;main.c: 85: }
  3711                           ;main.c: 86: }
  3712                           ;main.c: 102: while(1){
  3713                           
  3714                           ;main.c: 84: break;
  3715                           
  3716  0458  0064               	clrwdt	;# 
  3717                           
  3718                           ;main.c: 105: if(TMR0IF)
  3719  0459  1D0B               	btfss	11,2	;volatile
  3720  045A  2C72               	goto	l6134
  3721                           
  3722                           ;main.c: 106: {
  3723                           ;main.c: 107: timer++;
  3724  045B  3001               	movlw	1
  3725  045C  0020               	movlb	0	; select bank0
  3726  045D  07E2               	addwf	_timer,f
  3727  045E  3000               	movlw	0
  3728  045F  3DE3               	addwfc	_timer+1,f
  3729                           
  3730                           ;main.c: 108: if(timer==61){
  3731  0460  303D               	movlw	61
  3732  0461  0662               	xorwf	_timer,w
  3733  0462  0463               	iorwf	_timer+1,w
  3734  0463  1D03               	btfss	3,2
  3735  0464  2C71               	goto	l6132
  3736                           
  3737                           ;main.c: 109: timer=0;
  3738  0465  01E2               	clrf	_timer
  3739  0466  01E3               	clrf	_timer+1
  3740                           
  3741                           ;main.c: 110: CheckBattery();
  3742  0467  3182  22D7  3183   	fcall	_CheckBattery
  3743                           
  3744                           ;main.c: 111: if(!flightMode) CheckNetwork();
  3745  046A  0020               	movlb	0	; select bank0
  3746  046B  0867               	movf	_flightMode,w
  3747  046C  1D03               	btfss	3,2
  3748  046D  2C71               	goto	l6132
  3749  046E  3181  21FE  3183   	fcall	_CheckNetwork
  3750  0471                     l6132:	
  3751                           
  3752                           ;main.c: 112: }
  3753                           ;main.c: 113: TMR0IF = 0;
  3754  0471  110B               	bcf	11,2	;volatile
  3755  0472                     l6134:	
  3756                           
  3757                           ;main.c: 114: }
  3758                           ;main.c: 116: if(!sleepMode){
  3759  0472  0020               	movlb	0	; select bank0
  3760  0473  086E               	movf	_sleepMode,w
  3761  0474  1903               	btfsc	3,2
  3762                           
  3763                           ;main.c: 123: if(PORTBbits.RB6==0){
  3764  0475  1B0D               	btfsc	13,6	;volatile
  3765  0476  2C9F               	goto	l6152
  3766                           
  3767                           ;main.c: 124: if(flightMode){
  3768  0477  0867               	movf	_flightMode,w
  3769  0478  1903               	btfsc	3,2
  3770  0479  2C7D               	goto	l6142
  3771                           
  3772                           ;main.c: 125: GsmOn();
  3773  047A  319D  25A1  3183   	fcall	_GsmOn
  3774  047D                     l6142:	
  3775                           
  3776                           ;main.c: 126: }
  3777                           ;main.c: 127: alarmOn = !alarmOn;
  3778  047D  0020               	movlb	0	; select bank0
  3779  047E  0866               	movf	_alarmOn,w
  3780  047F  1D03               	btfss	3,2
  3781  0480  2C83               	goto	u6560
  3782  0481  3001               	movlw	1
  3783  0482  2C84               	goto	u6570
  3784  0483                     u6560:	
  3785  0483  3000               	movlw	0
  3786  0484                     u6570:	
  3787  0484  00DB               	movwf	??_main
  3788  0485  085B               	movf	??_main,w
  3789  0486  00E6               	movwf	_alarmOn
  3790                           
  3791                           ;main.c: 128: if(alarmOn)SetAlarmOn();
  3792  0487  0866               	movf	_alarmOn,w
  3793  0488  1903               	btfsc	3,2
  3794  0489  2C8E               	goto	l6148
  3795  048A  3196  2663  3183   	fcall	_SetAlarmOn
  3796  048D  2C91               	goto	l6150
  3797  048E                     l6148:	
  3798                           
  3799                           ;main.c: 129: else SetAlarmOff();
  3800  048E  319D  257F  3183   	fcall	_SetAlarmOff
  3801  0491                     l6150:	
  3802                           
  3803                           ;main.c: 130: _delay((unsigned long)((300)*(16000000/4000.0)));
  3804  0491  3007               	movlw	7
  3805  0492  0020               	movlb	0	; select bank0
  3806  0493  00DD               	movwf	??_main+2
  3807  0494  3017               	movlw	23
  3808  0495  00DC               	movwf	??_main+1
  3809  0496  306F               	movlw	111
  3810  0497  00DB               	movwf	??_main
  3811  0498                     u6617:	
  3812  0498  0BDB               	decfsz	??_main,f
  3813  0499  2C98               	goto	u6617
  3814  049A  0BDC               	decfsz	??_main+1,f
  3815  049B  2C98               	goto	u6617
  3816  049C  0BDD               	decfsz	??_main+2,f
  3817  049D  2C98               	goto	u6617
  3818  049E  0000               	nop
  3819  049F                     l6152:	
  3820                           
  3821                           ;main.c: 131: }
  3822                           ;main.c: 132: }
  3823                           ;main.c: 134: CheckSW1();
  3824  049F  3195  25E8  3183   	fcall	_CheckSW1
  3825                           
  3826                           ;main.c: 135: CheckSW2();
  3827  04A2  3194  24FB  3183   	fcall	_CheckSW2
  3828                           
  3829                           ;main.c: 136: OnOff();
  3830  04A5  3190  20C3  3183   	fcall	_OnOff
  3831                           
  3832                           ;main.c: 138: if(PORTCbits.RC1 == 1 && alarmOn){
  3833  04A8  0020               	movlb	0	; select bank0
  3834  04A9  1C8E               	btfss	14,1	;volatile
  3835  04AA  2C58               	goto	l570
  3836  04AB  0866               	movf	_alarmOn,w
  3837  04AC  1903               	btfsc	3,2
  3838  04AD  2C58               	goto	l570
  3839                           
  3840                           ;main.c: 139: RaiseAlarm();
  3841  04AE  3195  2570  3183   	fcall	_RaiseAlarm
  3842  04B1  2C58               	goto	l570
  3843  04B2                     __end_of_main:	
  3844                           
  3845                           	psect	text1
  3846  1D15                     __ptext1:	
  3847 ;; *************** function _UART_Init *****************
  3848 ;; Defined at:
  3849 ;;		line 4 in file "uart.h"
  3850 ;; Parameters:    Size  Location     Type
  3851 ;;		None
  3852 ;; Auto vars:     Size  Location     Type
  3853 ;;		None
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      unsigned char 
  3856 ;; Registers used:
  3857 ;;		wreg, status,2
  3858 ;; Tracked objects:
  3859 ;;		On entry : 0/0
  3860 ;;		On exit  : 0/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3867 ;;Total ram usage:        0 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_main
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           
  3877                           ;psect for function _UART_Init
  3878  1D15                     _UART_Init:	
  3879                           
  3880                           ;uart.h: 7: BAUD1CON = 0x48;
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in _UART_Init: [wreg+status,2]
  3884  1D15  3048               	movlw	72
  3885  1D16  0023               	movlb	3	; select bank3
  3886  1D17  009F               	movwf	31	;volatile
  3887                           
  3888                           ;uart.h: 9: RC1STA = 0x90;
  3889  1D18  3090               	movlw	144
  3890  1D19  009D               	movwf	29	;volatile
  3891                           
  3892                           ;uart.h: 11: TX1STA = 0x26;
  3893  1D1A  3026               	movlw	38
  3894  1D1B  009E               	movwf	30	;volatile
  3895                           
  3896                           ;uart.h: 14: SP1BRGL = 0xCF;
  3897  1D1C  30CF               	movlw	207
  3898  1D1D  009B               	movwf	27	;volatile
  3899                           
  3900                           ;uart.h: 15: SP1BRGH = 0x00;
  3901  1D1E  019C               	clrf	28	;volatile
  3902  1D1F  0008               	return
  3903  1D20                     __end_of_UART_Init:	
  3904                           
  3905                           	psect	text2
  3906  1DB2                     __ptext2:	
  3907 ;; *************** function _SimCard_Init *****************
  3908 ;; Defined at:
  3909 ;;		line 33 in file "gsm.h"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  result         15    0[BANK0 ] unsigned char [15]
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3924 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3926 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3927 ;;Total ram usage:       15 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    3
  3930 ;; This function calls:
  3931 ;;		_SendUartCmd
  3932 ;;		_UART_Read_Text
  3933 ;; This function is called by:
  3934 ;;		_main
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           
  3939                           ;psect for function _SimCard_Init
  3940  1DB2                     _SimCard_Init:	
  3941                           
  3942                           ;gsm.h: 34: char result[15];
  3943                           ;gsm.h: 35: SendUartCmd("AT+CMGF=1\n");
  3944                           
  3945                           ;incstack = 0
  3946                           ; Regs used in _SimCard_Init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3947  1DB2  3012               	movlw	low (STR_6| (0+32768))
  3948  1DB3  00F6               	movwf	SendUartCmd@cmd
  3949  1DB4  308E               	movlw	high (STR_6| (0+32768))
  3950  1DB5  00F7               	movwf	SendUartCmd@cmd+1
  3951  1DB6  319C  24DB  319D   	fcall	_SendUartCmd
  3952                           
  3953                           ;gsm.h: 36: UART_Read_Text(result, sizeof(result)/sizeof(char));
  3954  1DB9  3020               	movlw	low SimCard_Init@result
  3955  1DBA  00F0               	movwf	UART_Read_Text@Output
  3956  1DBB  3000               	movlw	high SimCard_Init@result
  3957  1DBC  00F1               	movwf	UART_Read_Text@Output+1
  3958  1DBD  300F               	movlw	15
  3959  1DBE  00F2               	movwf	UART_Read_Text@length
  3960  1DBF  3000               	movlw	0
  3961  1DC0  00F3               	movwf	UART_Read_Text@length+1
  3962  1DC1  3192  22E4         	fcall	_UART_Read_Text
  3963  1DC3  0008               	return
  3964  1DC4                     __end_of_SimCard_Init:	
  3965                           
  3966                           	psect	text3
  3967  1663                     __ptext3:	
  3968 ;; *************** function _SetAlarmOn *****************
  3969 ;; Defined at:
  3970 ;;		line 291 in file "main.c"
  3971 ;; Parameters:    Size  Location     Type
  3972 ;;		None
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  i               2   50[BANK0 ] int 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  1    wreg      void 
  3977 ;; Registers used:
  3978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3985 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3986 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3987 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3988 ;;Total ram usage:        5 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; Hardware stack levels required when called:    7
  3991 ;; This function calls:
  3992 ;;		_Bip
  3993 ;;		_CheckNetwork
  3994 ;;		_ResetScreenTimer
  3995 ;;		_SetAlarmOff
  3996 ;;		_ShowMessage
  3997 ;;		_ShowNumber
  3998 ;;		_sprintf
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           
  4005                           ;psect for function _SetAlarmOn
  4006  1663                     _SetAlarmOn:	
  4007                           
  4008                           ;main.c: 292: ResetScreenTimer();
  4009                           
  4010                           ;incstack = 0
  4011                           ; Regs used in _SetAlarmOn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4012  1663  319C  24D5  3196   	fcall	_ResetScreenTimer
  4013                           
  4014                           ;main.c: 293: for(int i=0;i<=10;i++)
  4015  1666  0020               	movlb	0	; select bank0
  4016  1667  01D2               	clrf	SetAlarmOn@i
  4017  1668  01D3               	clrf	SetAlarmOn@i+1
  4018  1669  0853               	movf	SetAlarmOn@i+1,w
  4019  166A  3A80               	xorlw	128
  4020  166B  00CF               	movwf	??_SetAlarmOn
  4021  166C  3080               	movlw	128
  4022  166D  024F               	subwf	??_SetAlarmOn,w
  4023  166E  1D03               	skipz
  4024  166F  2E72               	goto	u6195
  4025  1670  300B               	movlw	11
  4026  1671  0252               	subwf	SetAlarmOn@i,w
  4027  1672                     u6195:	
  4028  1672  1803               	btfsc	3,0
  4029  1673  2EC7               	goto	l5870
  4030  1674                     l635:	
  4031  1674  0064               	clrwdt	;# 
  4032                           
  4033                           ;main.c: 296: CheckNetwork();
  4034  1675  3181  21FE  3196   	fcall	_CheckNetwork
  4035                           
  4036                           ;main.c: 298: if(PORTBbits.RB6==0 && !imgSetup){
  4037  1678  0020               	movlb	0	; select bank0
  4038  1679  1B0D               	btfsc	13,6	;volatile
  4039  167A  2E81               	goto	l5860
  4040  167B  086A               	movf	_imgSetup,w
  4041  167C  1D03               	btfss	3,2
  4042  167D  2E81               	goto	l5860
  4043                           
  4044                           ;main.c: 299: SetAlarmOff();
  4045  167E  319D  257F         	fcall	_SetAlarmOff
  4046                           
  4047                           ;main.c: 300: return;
  4048  1680  0008               	return
  4049  1681                     l5860:	
  4050                           
  4051                           ;main.c: 301: }
  4052                           ;main.c: 302: sprintf(buffer,"%02d",10-i);
  4053  1681  302B               	movlw	low _buffer
  4054  1682  0020               	movlb	0	; select bank0
  4055  1683  00A0               	movwf	sprintf@sp
  4056  1684  3001               	movlw	high _buffer
  4057  1685  00A1               	movwf	sprintf@sp+1
  4058  1686  30F5               	movlw	low (STR_81| (0+32768))
  4059  1687  00A2               	movwf	sprintf@f
  4060  1688  308E               	movlw	high (STR_81| (0+32768))
  4061  1689  00A3               	movwf	sprintf@f+1
  4062  168A  0952               	comf	SetAlarmOn@i,w
  4063  168B  00CF               	movwf	??_SetAlarmOn
  4064  168C  0953               	comf	SetAlarmOn@i+1,w
  4065  168D  00D0               	movwf	??_SetAlarmOn+1
  4066  168E  0ACF               	incf	??_SetAlarmOn,f
  4067  168F  1903               	skipnz
  4068  1690  0AD0               	incf	??_SetAlarmOn+1,f
  4069  1691  084F               	movf	??_SetAlarmOn,w
  4070  1692  3E0A               	addlw	10
  4071  1693  00A4               	movwf	?_sprintf+4
  4072  1694  3000               	movlw	0
  4073  1695  3D50               	addwfc	??_SetAlarmOn+1,w
  4074  1696  00A5               	movwf	?_sprintf+5
  4075  1697  3185  25E8  3196   	fcall	_sprintf
  4076                           
  4077                           ;main.c: 303: ShowNumber(buffer, 56, 6);
  4078  169A  302B               	movlw	low _buffer
  4079  169B  0020               	movlb	0	; select bank0
  4080  169C  00B0               	movwf	ShowNumber@number
  4081  169D  3001               	movlw	high _buffer
  4082  169E  00B1               	movwf	ShowNumber@number+1
  4083  169F  3038               	movlw	56
  4084  16A0  00CF               	movwf	??_SetAlarmOn
  4085  16A1  084F               	movf	??_SetAlarmOn,w
  4086  16A2  00B2               	movwf	ShowNumber@seg
  4087  16A3  3006               	movlw	6
  4088  16A4  00D0               	movwf	??_SetAlarmOn+1
  4089  16A5  0850               	movf	??_SetAlarmOn+1,w
  4090  16A6  00B3               	movwf	ShowNumber@page
  4091  16A7  3190  209B  3196   	fcall	_ShowNumber
  4092                           
  4093                           ;main.c: 304: _delay((unsigned long)((800)*(16000000/4000.0)));
  4094  16AA  3011               	movlw	17
  4095  16AB  0020               	movlb	0	; select bank0
  4096  16AC  00D1               	movwf	??_SetAlarmOn+2
  4097  16AD  303C               	movlw	60
  4098  16AE  00D0               	movwf	??_SetAlarmOn+1
  4099  16AF  30DA               	movlw	218
  4100  16B0  00CF               	movwf	??_SetAlarmOn
  4101  16B1                     u6627:	
  4102  16B1  0BCF               	decfsz	??_SetAlarmOn,f
  4103  16B2  2EB1               	goto	u6627
  4104  16B3  0BD0               	decfsz	??_SetAlarmOn+1,f
  4105  16B4  2EB1               	goto	u6627
  4106  16B5  0BD1               	decfsz	??_SetAlarmOn+2,f
  4107  16B6  2EB1               	goto	u6627
  4108  16B7  3001               	movlw	1
  4109  16B8  0020               	movlb	0	; select bank0
  4110  16B9  07D2               	addwf	SetAlarmOn@i,f
  4111  16BA  3000               	movlw	0
  4112  16BB  3DD3               	addwfc	SetAlarmOn@i+1,f
  4113  16BC  0853               	movf	SetAlarmOn@i+1,w
  4114  16BD  3A80               	xorlw	128
  4115  16BE  00CF               	movwf	??_SetAlarmOn
  4116  16BF  3080               	movlw	128
  4117  16C0  024F               	subwf	??_SetAlarmOn,w
  4118  16C1  1D03               	skipz
  4119  16C2  2EC5               	goto	u6225
  4120  16C3  300B               	movlw	11
  4121  16C4  0252               	subwf	SetAlarmOn@i,w
  4122  16C5                     u6225:	
  4123  16C5  1C03               	skipc
  4124  16C6  2E74               	goto	l635
  4125  16C7                     l5870:	
  4126                           
  4127                           ;main.c: 305: }
  4128                           ;main.c: 306: Bip(4,100);
  4129  16C7  3004               	movlw	4
  4130  16C8  00F0               	movwf	Bip@n
  4131  16C9  3000               	movlw	0
  4132  16CA  00F1               	movwf	Bip@n+1
  4133  16CB  3064               	movlw	100
  4134  16CC  00F2               	movwf	Bip@t
  4135  16CD  3000               	movlw	0
  4136  16CE  00F3               	movwf	Bip@t+1
  4137  16CF  3192  22A6  3196   	fcall	_Bip
  4138                           
  4139                           ;main.c: 307: ShowMessage("ALARM@ON@@", 3);
  4140  16D2  3054               	movlw	low (STR_82| (0+32768))
  4141  16D3  0020               	movlb	0	; select bank0
  4142  16D4  00B0               	movwf	ShowMessage@message
  4143  16D5  308E               	movlw	high (STR_82| (0+32768))
  4144  16D6  00B1               	movwf	ShowMessage@message+1
  4145  16D7  3003               	movlw	3
  4146  16D8  00CF               	movwf	??_SetAlarmOn
  4147  16D9  084F               	movf	??_SetAlarmOn,w
  4148  16DA  00B2               	movwf	ShowMessage@page
  4149  16DB  319F  278E         	fcall	_ShowMessage
  4150  16DD  0008               	return
  4151  16DE                     __end_of_SetAlarmOn:	
  4152                           
  4153                           	psect	text4
  4154  1CE9                     __ptext4:	
  4155 ;; *************** function _SPI_Init *****************
  4156 ;; Defined at:
  4157 ;;		line 6 in file "spi.h"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, status,2
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; This function calls:
  4178 ;;		Nothing
  4179 ;; This function is called by:
  4180 ;;		_main
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           
  4185                           ;psect for function _SPI_Init
  4186  1CE9                     _SPI_Init:	
  4187                           
  4188                           ;spi.h: 9: SSP1STAT = 0x40;
  4189                           
  4190                           ;incstack = 0
  4191                           ; Regs used in _SPI_Init: [wreg+status,2]
  4192  1CE9  3040               	movlw	64
  4193  1CEA  0024               	movlb	4	; select bank4
  4194  1CEB  0094               	movwf	20	;volatile
  4195                           
  4196                           ;spi.h: 13: SSP1CON1 = 0x30;
  4197  1CEC  3030               	movlw	48
  4198  1CED  0095               	movwf	21	;volatile
  4199                           
  4200                           ;spi.h: 17: SSP1ADD = 0x00;
  4201  1CEE  0192               	clrf	18	;volatile
  4202  1CEF  0008               	return
  4203  1CF0                     __end_of_SPI_Init:	
  4204                           
  4205                           	psect	text5
  4206  000C                     __ptext5:	
  4207 ;; *************** function _ReadPhoneNumber *****************
  4208 ;; Defined at:
  4209 ;;		line 133 in file "gsm.h"
  4210 ;; Parameters:    Size  Location     Type
  4211 ;;		None
  4212 ;; Auto vars:     Size  Location     Type
  4213 ;;  result1        50   20[BANK1 ] unsigned char [50]
  4214 ;;  result0        20    0[BANK1 ] unsigned char [20]
  4215 ;;  phoneNumber     2   70[BANK1 ] PTR unsigned char 
  4216 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
  4217 ;;		 -> NULL(0), CheckSimCard@result(11), 
  4218 ;; Return value:  Size  Location     Type
  4219 ;;                  2   23[BANK0 ] PTR unsigned char 
  4220 ;; Registers used:
  4221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4222 ;; Tracked objects:
  4223 ;;		On entry : 0/0
  4224 ;;		On exit  : 0/0
  4225 ;;		Unchanged: 0/0
  4226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4227 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4228 ;;      Locals:         0       0      72       0       0       0       0       0       0       0       0       0       
      +0       0
  4229 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4230 ;;      Totals:         0       2      72       0       0       0       0       0       0       0       0       0       
      +0       0
  4231 ;;Total ram usage:       74 bytes
  4232 ;; Hardware stack levels used:    1
  4233 ;; Hardware stack levels required when called:    6
  4234 ;; This function calls:
  4235 ;;		_SendUartCmd
  4236 ;;		_ShowMessage
  4237 ;;		_UART_Read_Text
  4238 ;;		___delay_sec
  4239 ;;		_strlen
  4240 ;;		_strtok
  4241 ;; This function is called by:
  4242 ;;		_main
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function _ReadPhoneNumber
  4248  000C                     _ReadPhoneNumber:	
  4249                           
  4250                           ;gsm.h: 134: char result0[20], result1[50];
  4251                           ;gsm.h: 135: char * phoneNumber;
  4252                           ;gsm.h: 136: SendUartCmd("AT+CPBS=\"SM\"\n");
  4253                           
  4254                           ;incstack = 0
  4255                           ; Regs used in _ReadPhoneNumber: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4256  000C  30C6               	movlw	low (STR_42| (0+32768))
  4257  000D  00F6               	movwf	SendUartCmd@cmd
  4258  000E  308D               	movlw	high (STR_42| (0+32768))
  4259  000F  00F7               	movwf	SendUartCmd@cmd+1
  4260  0010  319C  24DB  3180   	fcall	_SendUartCmd
  4261                           
  4262                           ;gsm.h: 137: UART_Read_Text(result0, sizeof(result0)/sizeof(char));
  4263  0013  30A0               	movlw	low ReadPhoneNumber@result0
  4264  0014  00F0               	movwf	UART_Read_Text@Output
  4265  0015  3000               	movlw	high ReadPhoneNumber@result0
  4266  0016  00F1               	movwf	UART_Read_Text@Output+1
  4267  0017  3014               	movlw	20
  4268  0018  00F2               	movwf	UART_Read_Text@length
  4269  0019  3000               	movlw	0
  4270  001A  00F3               	movwf	UART_Read_Text@length+1
  4271  001B  3192  22E4  3180   	fcall	_UART_Read_Text
  4272                           
  4273                           ;gsm.h: 138: SendUartCmd("AT+CPBR=10\n");
  4274  001E  30E2               	movlw	low (STR_44| (0+32768))
  4275  001F  00F6               	movwf	SendUartCmd@cmd
  4276  0020  308D               	movlw	high (STR_44| (0+32768))
  4277  0021  00F7               	movwf	SendUartCmd@cmd+1
  4278  0022  319C  24DB  3180   	fcall	_SendUartCmd
  4279                           
  4280                           ;gsm.h: 139: UART_Read_Text(result1, sizeof(result1)/sizeof(char));
  4281  0025  30B4               	movlw	low ReadPhoneNumber@result1
  4282  0026  00F0               	movwf	UART_Read_Text@Output
  4283  0027  3000               	movlw	high ReadPhoneNumber@result1
  4284  0028  00F1               	movwf	UART_Read_Text@Output+1
  4285  0029  3032               	movlw	50
  4286  002A  00F2               	movwf	UART_Read_Text@length
  4287  002B  3000               	movlw	0
  4288  002C  00F3               	movwf	UART_Read_Text@length+1
  4289  002D  3192  22E4  3180   	fcall	_UART_Read_Text
  4290                           
  4291                           ;gsm.h: 140: strtok (result1," ,");
  4292  0030  30B4               	movlw	low ReadPhoneNumber@result1
  4293  0031  0020               	movlb	0	; select bank0
  4294  0032  00A2               	movwf	strtok@s1
  4295  0033  3000               	movlw	high ReadPhoneNumber@result1
  4296  0034  00A3               	movwf	strtok@s1+1
  4297  0035  30FE               	movlw	low (STR_3| (0+32768))
  4298  0036  00A4               	movwf	strtok@s2
  4299  0037  308E               	movlw	high (STR_3| (0+32768))
  4300  0038  00A5               	movwf	strtok@s2+1
  4301  0039  3193  237A  3180   	fcall	_strtok
  4302                           
  4303                           ;gsm.h: 141: strtok ((0),",");
  4304  003C  3000               	movlw	0
  4305  003D  0020               	movlb	0	; select bank0
  4306  003E  00A2               	movwf	strtok@s1
  4307  003F  3000               	movlw	0
  4308  0040  00A3               	movwf	strtok@s1+1
  4309  0041  30FF               	movlw	low ((STR_3+1)| (0+32768))
  4310  0042  00A4               	movwf	strtok@s2
  4311  0043  308E               	movlw	high ((STR_3+1)| (0+32768))
  4312  0044  00A5               	movwf	strtok@s2+1
  4313  0045  3193  237A  3180   	fcall	_strtok
  4314                           
  4315                           ;gsm.h: 142: phoneNumber = strtok ((0),",");
  4316  0048  3000               	movlw	0
  4317  0049  0020               	movlb	0	; select bank0
  4318  004A  00A2               	movwf	strtok@s1
  4319  004B  3000               	movlw	0
  4320  004C  00A3               	movwf	strtok@s1+1
  4321  004D  30FF               	movlw	low ((STR_3+1)| (0+32768))
  4322  004E  00A4               	movwf	strtok@s2
  4323  004F  308E               	movlw	high ((STR_3+1)| (0+32768))
  4324  0050  00A5               	movwf	strtok@s2+1
  4325  0051  3193  237A  3180   	fcall	_strtok
  4326  0054  0020               	movlb	0	; select bank0
  4327  0055  0823               	movf	?_strtok+1,w
  4328  0056  0021               	movlb	1	; select bank1
  4329  0057  00E7               	movwf	(ReadPhoneNumber@phoneNumber+1)^(0+128)
  4330  0058  0020               	movlb	0	; select bank0
  4331  0059  0822               	movf	?_strtok,w
  4332  005A  0021               	movlb	1	; select bank1
  4333  005B  00E6               	movwf	ReadPhoneNumber@phoneNumber^(0+128)
  4334                           
  4335                           ;gsm.h: 143: __delay_sec(2);
  4336  005C  3002               	movlw	2
  4337  005D  00F0               	movwf	___delay_sec@n
  4338  005E  3000               	movlw	0
  4339  005F  00F1               	movwf	___delay_sec@n+1
  4340  0060  319D  25D9  3180   	fcall	___delay_sec
  4341                           
  4342                           ;gsm.h: 144: if(strlen(phoneNumber)==0){
  4343  0063  0021               	movlb	1	; select bank1
  4344  0064  0867               	movf	(ReadPhoneNumber@phoneNumber+1)^(0+128),w
  4345  0065  00F1               	movwf	strlen@s+1
  4346  0066  0866               	movf	ReadPhoneNumber@phoneNumber^(0+128),w
  4347  0067  00F0               	movwf	strlen@s
  4348  0068  319E  26C6  3180   	fcall	_strlen
  4349  006B  0870               	movf	?_strlen,w
  4350  006C  0471               	iorwf	?_strlen+1,w
  4351  006D  1D03               	btfss	3,2
  4352  006E  288C               	goto	l5718
  4353                           
  4354                           ;gsm.h: 145: ShowMessage("SET@PHONE", 2);
  4355  006F  3089               	movlw	low (STR_48| (0+32768))
  4356  0070  0020               	movlb	0	; select bank0
  4357  0071  00B0               	movwf	ShowMessage@message
  4358  0072  308E               	movlw	high (STR_48| (0+32768))
  4359  0073  00B1               	movwf	ShowMessage@message+1
  4360  0074  3002               	movlw	2
  4361  0075  00B8               	movwf	??_ReadPhoneNumber
  4362  0076  0838               	movf	??_ReadPhoneNumber,w
  4363  0077  00B2               	movwf	ShowMessage@page
  4364  0078  319F  278E  3180   	fcall	_ShowMessage
  4365                           
  4366                           ;gsm.h: 146: ShowMessage("NUMBER", 5);
  4367  007B  30BD               	movlw	low (STR_49| (0+32768))
  4368  007C  0020               	movlb	0	; select bank0
  4369  007D  00B0               	movwf	ShowMessage@message
  4370  007E  308E               	movlw	high (STR_49| (0+32768))
  4371  007F  00B1               	movwf	ShowMessage@message+1
  4372  0080  3005               	movlw	5
  4373  0081  00B8               	movwf	??_ReadPhoneNumber
  4374  0082  0838               	movf	??_ReadPhoneNumber,w
  4375  0083  00B2               	movwf	ShowMessage@page
  4376  0084  319F  278E         	fcall	_ShowMessage
  4377                           
  4378                           ;gsm.h: 147: return "";}
  4379  0086  30D3               	movlw	low ((STR_42+13)| (0+32768))
  4380  0087  0020               	movlb	0	; select bank0
  4381  0088  00B7               	movwf	?_ReadPhoneNumber
  4382  0089  308D               	movlw	high ((STR_42+13)| (0+32768))
  4383  008A  00B8               	movwf	?_ReadPhoneNumber+1
  4384  008B  0008               	return
  4385  008C                     l5718:	
  4386                           
  4387                           ;gsm.h: 148: return phoneNumber;
  4388  008C  0021               	movlb	1	; select bank1
  4389  008D  0867               	movf	(ReadPhoneNumber@phoneNumber+1)^(0+128),w
  4390  008E  0020               	movlb	0	; select bank0
  4391  008F  00B8               	movwf	?_ReadPhoneNumber+1
  4392  0090  0021               	movlb	1	; select bank1
  4393  0091  0866               	movf	ReadPhoneNumber@phoneNumber^(0+128),w
  4394  0092  0020               	movlb	0	; select bank0
  4395  0093  00B7               	movwf	?_ReadPhoneNumber
  4396  0094  0008               	return
  4397  0095                     __end_of_ReadPhoneNumber:	
  4398                           
  4399                           	psect	text6
  4400  1570                     __ptext6:	
  4401 ;; *************** function _RaiseAlarm *****************
  4402 ;; Defined at:
  4403 ;;		line 310 in file "main.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  i               2   50[BANK0 ] int 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4420 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4421 ;;Total ram usage:        5 bytes
  4422 ;; Hardware stack levels used:    1
  4423 ;; Hardware stack levels required when called:    7
  4424 ;; This function calls:
  4425 ;;		_CheckNetwork
  4426 ;;		_GsmOn
  4427 ;;		_GsmWakeUp
  4428 ;;		_ResetScreenTimer
  4429 ;;		_ScreenOn
  4430 ;;		_SendSms
  4431 ;;		_SetAlarmOff
  4432 ;;		_ShowMessage
  4433 ;;		___delay_sec
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           
  4439                           
  4440                           ;psect for function _RaiseAlarm
  4441  1570                     _RaiseAlarm:	
  4442                           
  4443                           ;main.c: 311: GsmWakeUp();
  4444                           
  4445                           ;incstack = 0
  4446                           ; Regs used in _RaiseAlarm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4447  1570  319C  24E2  3195   	fcall	_GsmWakeUp
  4448                           
  4449                           ;main.c: 312: sleepMode = 0;
  4450  1573  0020               	movlb	0	; select bank0
  4451  1574  01EE               	clrf	_sleepMode
  4452                           
  4453                           ;main.c: 313: ShowMessage("ALERT@@@@@", 3);
  4454  1575  3049               	movlw	low (STR_83| (0+32768))
  4455  1576  00B0               	movwf	ShowMessage@message
  4456  1577  308E               	movlw	high (STR_83| (0+32768))
  4457  1578  00B1               	movwf	ShowMessage@message+1
  4458  1579  3003               	movlw	3
  4459  157A  00CF               	movwf	??_RaiseAlarm
  4460  157B  084F               	movf	??_RaiseAlarm,w
  4461  157C  00B2               	movwf	ShowMessage@page
  4462  157D  319F  278E  3195   	fcall	_ShowMessage
  4463                           
  4464                           ;main.c: 314: ScreenOn();
  4465  1580  319C  24CD  3195   	fcall	_ScreenOn
  4466                           
  4467                           ;main.c: 315: ResetScreenTimer();
  4468  1583  319C  24D5  3195   	fcall	_ResetScreenTimer
  4469                           
  4470                           ;main.c: 318: if(flightMode){
  4471  1586  0020               	movlb	0	; select bank0
  4472  1587  0867               	movf	_flightMode,w
  4473  1588  1903               	btfsc	3,2
  4474  1589  2D8E               	goto	l5890
  4475  158A  0064               	clrwdt	;# 
  4476                           
  4477                           ;main.c: 321: GsmOn();
  4478  158B  319D  25A1  3195   	fcall	_GsmOn
  4479  158E                     l5890:	
  4480                           
  4481                           ;main.c: 323: }
  4482                           ;main.c: 324: for(int i=0;i<=10;i++)
  4483  158E  0020               	movlb	0	; select bank0
  4484  158F  01D2               	clrf	RaiseAlarm@i
  4485  1590  01D3               	clrf	RaiseAlarm@i+1
  4486  1591  0853               	movf	RaiseAlarm@i+1,w
  4487  1592  3A80               	xorlw	128
  4488  1593  00CF               	movwf	??_RaiseAlarm
  4489  1594  3080               	movlw	128
  4490  1595  024F               	subwf	??_RaiseAlarm,w
  4491  1596  1D03               	skipz
  4492  1597  2D9A               	goto	u6245
  4493  1598  300B               	movlw	11
  4494  1599  0252               	subwf	RaiseAlarm@i,w
  4495  159A                     u6245:	
  4496  159A  1803               	btfsc	3,0
  4497  159B  2DD2               	goto	l5908
  4498  159C                     l642:	
  4499  159C  0064               	clrwdt	;# 
  4500                           
  4501                           ;main.c: 327: CheckNetwork();
  4502  159D  3181  21FE  3195   	fcall	_CheckNetwork
  4503                           
  4504                           ;main.c: 329: if(PORTBbits.RB6==0){
  4505  15A0  0020               	movlb	0	; select bank0
  4506  15A1  1B0D               	btfsc	13,6	;volatile
  4507  15A2  2DB5               	goto	l5906
  4508                           
  4509                           ;main.c: 330: SetAlarmOff();
  4510  15A3  319D  257F  3195   	fcall	_SetAlarmOff
  4511                           
  4512                           ;main.c: 331: _delay((unsigned long)((300)*(16000000/4000.0)));
  4513  15A6  3007               	movlw	7
  4514  15A7  0020               	movlb	0	; select bank0
  4515  15A8  00D1               	movwf	??_RaiseAlarm+2
  4516  15A9  3017               	movlw	23
  4517  15AA  00D0               	movwf	??_RaiseAlarm+1
  4518  15AB  306F               	movlw	111
  4519  15AC  00CF               	movwf	??_RaiseAlarm
  4520  15AD                     u6637:	
  4521  15AD  0BCF               	decfsz	??_RaiseAlarm,f
  4522  15AE  2DAD               	goto	u6637
  4523  15AF  0BD0               	decfsz	??_RaiseAlarm+1,f
  4524  15B0  2DAD               	goto	u6637
  4525  15B1  0BD1               	decfsz	??_RaiseAlarm+2,f
  4526  15B2  2DAD               	goto	u6637
  4527  15B3  0000               	nop
  4528                           
  4529                           ;main.c: 332: return;
  4530  15B4  0008               	return
  4531  15B5                     l5906:	
  4532                           
  4533                           ;main.c: 333: }
  4534                           ;main.c: 334: _delay((unsigned long)((800)*(16000000/4000.0)));
  4535  15B5  3011               	movlw	17
  4536  15B6  0020               	movlb	0	; select bank0
  4537  15B7  00D1               	movwf	??_RaiseAlarm+2
  4538  15B8  303C               	movlw	60
  4539  15B9  00D0               	movwf	??_RaiseAlarm+1
  4540  15BA  30DA               	movlw	218
  4541  15BB  00CF               	movwf	??_RaiseAlarm
  4542  15BC                     u6647:	
  4543  15BC  0BCF               	decfsz	??_RaiseAlarm,f
  4544  15BD  2DBC               	goto	u6647
  4545  15BE  0BD0               	decfsz	??_RaiseAlarm+1,f
  4546  15BF  2DBC               	goto	u6647
  4547  15C0  0BD1               	decfsz	??_RaiseAlarm+2,f
  4548  15C1  2DBC               	goto	u6647
  4549  15C2  3001               	movlw	1
  4550  15C3  0020               	movlb	0	; select bank0
  4551  15C4  07D2               	addwf	RaiseAlarm@i,f
  4552  15C5  3000               	movlw	0
  4553  15C6  3DD3               	addwfc	RaiseAlarm@i+1,f
  4554  15C7  0853               	movf	RaiseAlarm@i+1,w
  4555  15C8  3A80               	xorlw	128
  4556  15C9  00CF               	movwf	??_RaiseAlarm
  4557  15CA  3080               	movlw	128
  4558  15CB  024F               	subwf	??_RaiseAlarm,w
  4559  15CC  1D03               	skipz
  4560  15CD  2DD0               	goto	u6265
  4561  15CE  300B               	movlw	11
  4562  15CF  0252               	subwf	RaiseAlarm@i,w
  4563  15D0                     u6265:	
  4564  15D0  1C03               	skipc
  4565  15D1  2D9C               	goto	l642
  4566  15D2                     l5908:	
  4567                           
  4568                           ;main.c: 335: }
  4569                           ;main.c: 337: SendSms();
  4570  15D2  319D  252C  3195   	fcall	_SendSms
  4571                           
  4572                           ;main.c: 338: __delay_sec(3);
  4573  15D5  3003               	movlw	3
  4574  15D6  00F0               	movwf	___delay_sec@n
  4575  15D7  3000               	movlw	0
  4576  15D8  00F1               	movwf	___delay_sec@n+1
  4577  15D9  319D  25D9  3195   	fcall	___delay_sec
  4578                           
  4579                           ;main.c: 340: ShowMessage("ALARM@ON@@", 3);
  4580  15DC  3054               	movlw	low (STR_82| (0+32768))
  4581  15DD  0020               	movlb	0	; select bank0
  4582  15DE  00B0               	movwf	ShowMessage@message
  4583  15DF  308E               	movlw	high (STR_82| (0+32768))
  4584  15E0  00B1               	movwf	ShowMessage@message+1
  4585  15E1  3003               	movlw	3
  4586  15E2  00CF               	movwf	??_RaiseAlarm
  4587  15E3  084F               	movf	??_RaiseAlarm,w
  4588  15E4  00B2               	movwf	ShowMessage@page
  4589  15E5  319F  278E         	fcall	_ShowMessage
  4590  15E7  0008               	return
  4591  15E8                     __end_of_RaiseAlarm:	
  4592                           
  4593                           	psect	text7
  4594  1D2C                     __ptext7:	
  4595 ;; *************** function _SendSms *****************
  4596 ;; Defined at:
  4597 ;;		line 151 in file "gsm.h"
  4598 ;; Parameters:    Size  Location     Type
  4599 ;;		None
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  1    wreg      void 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4613 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4614 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4615 ;;Total ram usage:        1 bytes
  4616 ;; Hardware stack levels used:    1
  4617 ;; Hardware stack levels required when called:    6
  4618 ;; This function calls:
  4619 ;;		_ShowMessage
  4620 ;; This function is called by:
  4621 ;;		_RaiseAlarm
  4622 ;; This function uses a non-reentrant model
  4623 ;;
  4624                           
  4625                           
  4626                           ;psect for function _SendSms
  4627  1D2C                     _SendSms:	
  4628                           
  4629                           ;gsm.h: 152: ShowMessage("SMS@SENT", 3);
  4630                           
  4631                           ;incstack = 0
  4632                           ; Regs used in _SendSms: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4633  1D2C  309C               	movlw	low (STR_51| (0+32768))
  4634  1D2D  0020               	movlb	0	; select bank0
  4635  1D2E  00B0               	movwf	ShowMessage@message
  4636  1D2F  308E               	movlw	high (STR_51| (0+32768))
  4637  1D30  00B1               	movwf	ShowMessage@message+1
  4638  1D31  3003               	movlw	3
  4639  1D32  00B7               	movwf	??_SendSms
  4640  1D33  0837               	movf	??_SendSms,w
  4641  1D34  00B2               	movwf	ShowMessage@page
  4642  1D35  319F  278E         	fcall	_ShowMessage
  4643  1D37  0008               	return
  4644  1D38                     __end_of_SendSms:	
  4645                           
  4646                           	psect	text8
  4647  1DA1                     __ptext8:	
  4648 ;; *************** function _GsmOn *****************
  4649 ;; Defined at:
  4650 ;;		line 52 in file "gsm.h"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      void 
  4657 ;; Registers used:
  4658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    6
  4671 ;; This function calls:
  4672 ;;		_SendUartCmd
  4673 ;;		_ShowMessage
  4674 ;; This function is called by:
  4675 ;;		_main
  4676 ;;		_RaiseAlarm
  4677 ;; This function uses a non-reentrant model
  4678 ;;
  4679                           
  4680                           
  4681                           ;psect for function _GsmOn
  4682  1DA1                     _GsmOn:	
  4683                           
  4684                           ;gsm.h: 53: SendUartCmd("AT+CFUN=1\n");
  4685                           
  4686                           ;incstack = 0
  4687                           ; Regs used in _GsmOn: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4688  1DA1  301D               	movlw	low (STR_11| (0+32768))
  4689  1DA2  00F6               	movwf	SendUartCmd@cmd
  4690  1DA3  308E               	movlw	high (STR_11| (0+32768))
  4691  1DA4  00F7               	movwf	SendUartCmd@cmd+1
  4692  1DA5  319C  24DB  319D   	fcall	_SendUartCmd
  4693                           
  4694                           ;gsm.h: 54: flightMode = 0;
  4695  1DA8  0020               	movlb	0	; select bank0
  4696  1DA9  01E7               	clrf	_flightMode
  4697                           
  4698                           ;gsm.h: 55: ShowMessage("@@@@", 0);
  4699  1DAA  3097               	movlw	low ((STR_17+4)| (0+32768))
  4700  1DAB  00B0               	movwf	ShowMessage@message
  4701  1DAC  308E               	movlw	high ((STR_17+4)| (0+32768))
  4702  1DAD  00B1               	movwf	ShowMessage@message+1
  4703  1DAE  01B2               	clrf	ShowMessage@page
  4704  1DAF  319F  278E         	fcall	_ShowMessage
  4705  1DB1  0008               	return
  4706  1DB2                     __end_of_GsmOn:	
  4707                           
  4708                           	psect	text9
  4709  01FE                     __ptext9:	
  4710 ;; *************** function _CheckNetwork *****************
  4711 ;; Defined at:
  4712 ;;		line 77 in file "gsm.h"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;		None
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  res            20   23[BANK0 ] unsigned char [20]
  4717 ;;  netSignalInt    2   45[BANK0 ] int 
  4718 ;;  netSignal       2   43[BANK0 ] PTR unsigned char 
  4719 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
  4720 ;;		 -> NULL(0), CheckSimCard@result(11), 
  4721 ;; Return value:  Size  Location     Type
  4722 ;;                  1    wreg      unsigned char 
  4723 ;; Registers used:
  4724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4731 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4732 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4733 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4734 ;;Total ram usage:       25 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    6
  4737 ;; This function calls:
  4738 ;;		_SendUartCmd
  4739 ;;		_ShowReceptionIcon
  4740 ;;		_UART_Read_Text
  4741 ;;		_atoi
  4742 ;;		_strtok
  4743 ;; This function is called by:
  4744 ;;		_main
  4745 ;;		_SetAlarmOn
  4746 ;;		_RaiseAlarm
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750                           
  4751                           ;psect for function _CheckNetwork
  4752  01FE                     _CheckNetwork:	
  4753                           
  4754                           ;gsm.h: 78: char res[20];
  4755                           ;gsm.h: 79: char * netSignal;
  4756                           ;gsm.h: 80: int netSignalInt;
  4757                           ;gsm.h: 81: SendUartCmd("AT+CSQ\n");
  4758                           
  4759                           ;incstack = 0
  4760                           ; Regs used in _CheckNetwork: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4761  01FE  30AD               	movlw	low (STR_22| (0+32768))
  4762  01FF  00F6               	movwf	SendUartCmd@cmd
  4763  0200  308E               	movlw	high (STR_22| (0+32768))
  4764  0201  00F7               	movwf	SendUartCmd@cmd+1
  4765  0202  319C  24DB  3181   	fcall	_SendUartCmd
  4766                           
  4767                           ;gsm.h: 82: UART_Read_Text(res, sizeof(res)/sizeof(char));
  4768  0205  3037               	movlw	low CheckNetwork@res
  4769  0206  00F0               	movwf	UART_Read_Text@Output
  4770  0207  3000               	movlw	high CheckNetwork@res
  4771  0208  00F1               	movwf	UART_Read_Text@Output+1
  4772  0209  3014               	movlw	20
  4773  020A  00F2               	movwf	UART_Read_Text@length
  4774  020B  3000               	movlw	0
  4775  020C  00F3               	movwf	UART_Read_Text@length+1
  4776  020D  3192  22E4  3181   	fcall	_UART_Read_Text
  4777                           
  4778                           ;gsm.h: 83: strtok (res," ,");
  4779  0210  3037               	movlw	low CheckNetwork@res
  4780  0211  0020               	movlb	0	; select bank0
  4781  0212  00A2               	movwf	strtok@s1
  4782  0213  3000               	movlw	high CheckNetwork@res
  4783  0214  00A3               	movwf	strtok@s1+1
  4784  0215  30FE               	movlw	low (STR_3| (0+32768))
  4785  0216  00A4               	movwf	strtok@s2
  4786  0217  308E               	movlw	high (STR_3| (0+32768))
  4787  0218  00A5               	movwf	strtok@s2+1
  4788  0219  3193  237A  3181   	fcall	_strtok
  4789                           
  4790                           ;gsm.h: 84: netSignal = strtok ((0),",");
  4791  021C  3000               	movlw	0
  4792  021D  0020               	movlb	0	; select bank0
  4793  021E  00A2               	movwf	strtok@s1
  4794  021F  3000               	movlw	0
  4795  0220  00A3               	movwf	strtok@s1+1
  4796  0221  30FF               	movlw	low ((STR_3+1)| (0+32768))
  4797  0222  00A4               	movwf	strtok@s2
  4798  0223  308E               	movlw	high ((STR_3+1)| (0+32768))
  4799  0224  00A5               	movwf	strtok@s2+1
  4800  0225  3193  237A  3181   	fcall	_strtok
  4801  0228  0020               	movlb	0	; select bank0
  4802  0229  0823               	movf	?_strtok+1,w
  4803  022A  00CC               	movwf	CheckNetwork@netSignal+1
  4804  022B  0822               	movf	?_strtok,w
  4805  022C  00CB               	movwf	CheckNetwork@netSignal
  4806                           
  4807                           ;gsm.h: 85: netSignalInt = atoi(netSignal);
  4808  022D  084C               	movf	CheckNetwork@netSignal+1,w
  4809  022E  00F7               	movwf	atoi@s+1
  4810  022F  084B               	movf	CheckNetwork@netSignal,w
  4811  0230  00F6               	movwf	atoi@s
  4812  0231  3194  248F  3181   	fcall	_atoi
  4813  0234  0877               	movf	?_atoi+1,w
  4814  0235  0020               	movlb	0	; select bank0
  4815  0236  00CE               	movwf	CheckNetwork@netSignalInt+1
  4816  0237  0876               	movf	?_atoi,w
  4817  0238  00CD               	movwf	CheckNetwork@netSignalInt
  4818                           
  4819                           ;gsm.h: 86: if(netSignalInt==0 || netSignalInt==99) {
  4820  0239  084D               	movf	CheckNetwork@netSignalInt,w
  4821  023A  044E               	iorwf	CheckNetwork@netSignalInt+1,w
  4822  023B  1903               	btfsc	3,2
  4823  023C  2A42               	goto	l5384
  4824  023D  3063               	movlw	99
  4825  023E  064D               	xorwf	CheckNetwork@netSignalInt,w
  4826  023F  044E               	iorwf	CheckNetwork@netSignalInt+1,w
  4827  0240  1D03               	btfss	3,2
  4828  0241  2A4A               	goto	l5392
  4829  0242                     l5384:	
  4830                           
  4831                           ;gsm.h: 87: ShowReceptionIcon("22222");
  4832  0242  30E9               	movlw	low (STR_25| (0+32768))
  4833  0243  00B0               	movwf	ShowReceptionIcon@level
  4834  0244  308E               	movlw	high (STR_25| (0+32768))
  4835  0245  00B1               	movwf	ShowReceptionIcon@level+1
  4836  0246  319F  2725         	fcall	_ShowReceptionIcon
  4837                           
  4838                           ;gsm.h: 88: return 0;
  4839  0248  3000               	movlw	0
  4840                           
  4841                           ;gsm.h: 89: }
  4842  0249  0008               	return
  4843  024A                     l5392:	
  4844                           
  4845                           ;gsm.h: 90: else
  4846                           ;gsm.h: 91: {
  4847                           ;gsm.h: 92: if(netSignalInt==1) ShowReceptionIcon("12222");
  4848  024A  0020               	movlb	0	; select bank0
  4849  024B  034D               	decf	CheckNetwork@netSignalInt,w
  4850  024C  044E               	iorwf	CheckNetwork@netSignalInt+1,w
  4851  024D  1D03               	btfss	3,2
  4852  024E  2A56               	goto	l5396
  4853  024F  30E3               	movlw	low (STR_26| (0+32768))
  4854  0250  00B0               	movwf	ShowReceptionIcon@level
  4855  0251  308E               	movlw	high (STR_26| (0+32768))
  4856  0252  00B1               	movwf	ShowReceptionIcon@level+1
  4857  0253  319F  2725  3181   	fcall	_ShowReceptionIcon
  4858  0256                     l5396:	
  4859                           
  4860                           ;gsm.h: 93: if(netSignalInt>1 && netSignalInt<=3) ShowReceptionIcon("11222");
  4861  0256  0020               	movlb	0	; select bank0
  4862  0257  084E               	movf	CheckNetwork@netSignalInt+1,w
  4863  0258  3A80               	xorlw	128
  4864  0259  00B6               	movwf	??_CheckNetwork
  4865  025A  3080               	movlw	128
  4866  025B  0236               	subwf	??_CheckNetwork,w
  4867  025C  1D03               	skipz
  4868  025D  2A60               	goto	u5635
  4869  025E  3002               	movlw	2
  4870  025F  024D               	subwf	CheckNetwork@netSignalInt,w
  4871  0260                     u5635:	
  4872  0260  1C03               	skipc
  4873  0261  2A76               	goto	l5402
  4874  0262  0020               	movlb	0	; select bank0
  4875  0263  084E               	movf	CheckNetwork@netSignalInt+1,w
  4876  0264  3A80               	xorlw	128
  4877  0265  00B6               	movwf	??_CheckNetwork
  4878  0266  3080               	movlw	128
  4879  0267  0236               	subwf	??_CheckNetwork,w
  4880  0268  1D03               	skipz
  4881  0269  2A6C               	goto	u5645
  4882  026A  3004               	movlw	4
  4883  026B  024D               	subwf	CheckNetwork@netSignalInt,w
  4884  026C                     u5645:	
  4885  026C  1803               	skipnc
  4886  026D  2A76               	goto	l5402
  4887  026E  30DD               	movlw	low (STR_27| (0+32768))
  4888  026F  0020               	movlb	0	; select bank0
  4889  0270  00B0               	movwf	ShowReceptionIcon@level
  4890  0271  308E               	movlw	high (STR_27| (0+32768))
  4891  0272  00B1               	movwf	ShowReceptionIcon@level+1
  4892  0273  319F  2725  3181   	fcall	_ShowReceptionIcon
  4893  0276                     l5402:	
  4894                           
  4895                           ;gsm.h: 94: if(netSignalInt>3 && netSignalInt<=6) ShowReceptionIcon("11122");
  4896  0276  0020               	movlb	0	; select bank0
  4897  0277  084E               	movf	CheckNetwork@netSignalInt+1,w
  4898  0278  3A80               	xorlw	128
  4899  0279  00B6               	movwf	??_CheckNetwork
  4900  027A  3080               	movlw	128
  4901  027B  0236               	subwf	??_CheckNetwork,w
  4902  027C  1D03               	skipz
  4903  027D  2A80               	goto	u5655
  4904  027E  3004               	movlw	4
  4905  027F  024D               	subwf	CheckNetwork@netSignalInt,w
  4906  0280                     u5655:	
  4907  0280  1C03               	skipc
  4908  0281  2A96               	goto	l5408
  4909  0282  0020               	movlb	0	; select bank0
  4910  0283  084E               	movf	CheckNetwork@netSignalInt+1,w
  4911  0284  3A80               	xorlw	128
  4912  0285  00B6               	movwf	??_CheckNetwork
  4913  0286  3080               	movlw	128
  4914  0287  0236               	subwf	??_CheckNetwork,w
  4915  0288  1D03               	skipz
  4916  0289  2A8C               	goto	u5665
  4917  028A  3007               	movlw	7
  4918  028B  024D               	subwf	CheckNetwork@netSignalInt,w
  4919  028C                     u5665:	
  4920  028C  1803               	skipnc
  4921  028D  2A96               	goto	l5408
  4922  028E  30D7               	movlw	low (STR_28| (0+32768))
  4923  028F  0020               	movlb	0	; select bank0
  4924  0290  00B0               	movwf	ShowReceptionIcon@level
  4925  0291  308E               	movlw	high (STR_28| (0+32768))
  4926  0292  00B1               	movwf	ShowReceptionIcon@level+1
  4927  0293  319F  2725  3181   	fcall	_ShowReceptionIcon
  4928  0296                     l5408:	
  4929                           
  4930                           ;gsm.h: 95: if(netSignalInt>6 && netSignalInt<=20) ShowReceptionIcon("11112");
  4931  0296  0020               	movlb	0	; select bank0
  4932  0297  084E               	movf	CheckNetwork@netSignalInt+1,w
  4933  0298  3A80               	xorlw	128
  4934  0299  00B6               	movwf	??_CheckNetwork
  4935  029A  3080               	movlw	128
  4936  029B  0236               	subwf	??_CheckNetwork,w
  4937  029C  1D03               	skipz
  4938  029D  2AA0               	goto	u5675
  4939  029E  3007               	movlw	7
  4940  029F  024D               	subwf	CheckNetwork@netSignalInt,w
  4941  02A0                     u5675:	
  4942  02A0  1C03               	skipc
  4943  02A1  2AB6               	goto	l5414
  4944  02A2  0020               	movlb	0	; select bank0
  4945  02A3  084E               	movf	CheckNetwork@netSignalInt+1,w
  4946  02A4  3A80               	xorlw	128
  4947  02A5  00B6               	movwf	??_CheckNetwork
  4948  02A6  3080               	movlw	128
  4949  02A7  0236               	subwf	??_CheckNetwork,w
  4950  02A8  1D03               	skipz
  4951  02A9  2AAC               	goto	u5685
  4952  02AA  3015               	movlw	21
  4953  02AB  024D               	subwf	CheckNetwork@netSignalInt,w
  4954  02AC                     u5685:	
  4955  02AC  1803               	skipnc
  4956  02AD  2AB6               	goto	l5414
  4957  02AE  30D1               	movlw	low (STR_29| (0+32768))
  4958  02AF  0020               	movlb	0	; select bank0
  4959  02B0  00B0               	movwf	ShowReceptionIcon@level
  4960  02B1  308E               	movlw	high (STR_29| (0+32768))
  4961  02B2  00B1               	movwf	ShowReceptionIcon@level+1
  4962  02B3  319F  2725  3181   	fcall	_ShowReceptionIcon
  4963  02B6                     l5414:	
  4964                           
  4965                           ;gsm.h: 96: if(netSignalInt>20 && netSignalInt<=31) ShowReceptionIcon("11111");
  4966  02B6  0020               	movlb	0	; select bank0
  4967  02B7  084E               	movf	CheckNetwork@netSignalInt+1,w
  4968  02B8  3A80               	xorlw	128
  4969  02B9  00B6               	movwf	??_CheckNetwork
  4970  02BA  3080               	movlw	128
  4971  02BB  0236               	subwf	??_CheckNetwork,w
  4972  02BC  1D03               	skipz
  4973  02BD  2AC0               	goto	u5695
  4974  02BE  3015               	movlw	21
  4975  02BF  024D               	subwf	CheckNetwork@netSignalInt,w
  4976  02C0                     u5695:	
  4977  02C0  1C03               	skipc
  4978  02C1  2AD5               	goto	l5420
  4979  02C2  0020               	movlb	0	; select bank0
  4980  02C3  084E               	movf	CheckNetwork@netSignalInt+1,w
  4981  02C4  3A80               	xorlw	128
  4982  02C5  00B6               	movwf	??_CheckNetwork
  4983  02C6  3080               	movlw	128
  4984  02C7  0236               	subwf	??_CheckNetwork,w
  4985  02C8  1D03               	skipz
  4986  02C9  2ACC               	goto	u5705
  4987  02CA  3020               	movlw	32
  4988  02CB  024D               	subwf	CheckNetwork@netSignalInt,w
  4989  02CC                     u5705:	
  4990  02CC  1803               	skipnc
  4991  02CD  2AD5               	goto	l5420
  4992  02CE  30CB               	movlw	low (STR_30| (0+32768))
  4993  02CF  0020               	movlb	0	; select bank0
  4994  02D0  00B0               	movwf	ShowReceptionIcon@level
  4995  02D1  308E               	movlw	high (STR_30| (0+32768))
  4996  02D2  00B1               	movwf	ShowReceptionIcon@level+1
  4997  02D3  319F  2725         	fcall	_ShowReceptionIcon
  4998  02D5                     l5420:	
  4999                           
  5000                           ;gsm.h: 97: return 1;
  5001  02D5  3001               	movlw	1
  5002  02D6  0008               	return
  5003  02D7                     __end_of_CheckNetwork:	
  5004                           
  5005                           	psect	text10
  5006  1F25                     __ptext10:	
  5007 ;; *************** function _ShowReceptionIcon *****************
  5008 ;; Defined at:
  5009 ;;		line 176 in file "gsm.h"
  5010 ;; Parameters:    Size  Location     Type
  5011 ;;  level           2   16[BANK0 ] PTR const unsigned char 
  5012 ;;		 -> STR_30(6), STR_29(6), STR_28(6), STR_27(6), 
  5013 ;;		 -> STR_26(6), STR_25(6), 
  5014 ;; Auto vars:     Size  Location     Type
  5015 ;;		None
  5016 ;; Return value:  Size  Location     Type
  5017 ;;                  1    wreg      void 
  5018 ;; Registers used:
  5019 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5020 ;; Tracked objects:
  5021 ;;		On entry : 0/0
  5022 ;;		On exit  : 0/0
  5023 ;;		Unchanged: 0/0
  5024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5025 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5027 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;Total ram usage:        6 bytes
  5030 ;; Hardware stack levels used:    1
  5031 ;; Hardware stack levels required when called:    5
  5032 ;; This function calls:
  5033 ;;		_Oled_ConstText
  5034 ;;		_Oled_SetFont
  5035 ;; This function is called by:
  5036 ;;		_CheckNetwork
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           
  5041                           ;psect for function _ShowReceptionIcon
  5042  1F25                     _ShowReceptionIcon:	
  5043                           
  5044                           ;gsm.h: 177: Oled_SetFont(Reception8x8, 8, 8, 49, 50);
  5045                           
  5046                           ;incstack = 0
  5047                           ; Regs used in _ShowReceptionIcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5048  1F25  307A               	movlw	low (_Reception8x8| (0+32768))
  5049  1F26  0020               	movlb	0	; select bank0
  5050  1F27  00A0               	movwf	Oled_SetFont@_font
  5051  1F28  308D               	movlw	high (_Reception8x8| (0+32768))
  5052  1F29  00A1               	movwf	Oled_SetFont@_font+1
  5053  1F2A  3008               	movlw	8
  5054  1F2B  00B2               	movwf	??_ShowReceptionIcon
  5055  1F2C  0832               	movf	??_ShowReceptionIcon,w
  5056  1F2D  00A2               	movwf	Oled_SetFont@_width
  5057  1F2E  3008               	movlw	8
  5058  1F2F  00B3               	movwf	??_ShowReceptionIcon+1
  5059  1F30  0833               	movf	??_ShowReceptionIcon+1,w
  5060  1F31  00A3               	movwf	Oled_SetFont@_height
  5061  1F32  3031               	movlw	49
  5062  1F33  00B4               	movwf	??_ShowReceptionIcon+2
  5063  1F34  0834               	movf	??_ShowReceptionIcon+2,w
  5064  1F35  00A4               	movwf	Oled_SetFont@_min
  5065  1F36  3032               	movlw	50
  5066  1F37  00B5               	movwf	??_ShowReceptionIcon+3
  5067  1F38  0835               	movf	??_ShowReceptionIcon+3,w
  5068  1F39  00A5               	movwf	Oled_SetFont@_max
  5069  1F3A  3190  204B  319F   	fcall	_Oled_SetFont
  5070                           
  5071                           ;gsm.h: 178: Oled_ConstText(level, 0, 0);
  5072  1F3D  0020               	movlb	0	; select bank0
  5073  1F3E  0831               	movf	ShowReceptionIcon@level+1,w
  5074  1F3F  00AA               	movwf	Oled_ConstText@buffer+1
  5075  1F40  0830               	movf	ShowReceptionIcon@level,w
  5076  1F41  00A9               	movwf	Oled_ConstText@buffer
  5077  1F42  01AB               	clrf	Oled_ConstText@seg
  5078  1F43  01AC               	clrf	Oled_ConstText@pag
  5079  1F44  319F  27D9         	fcall	_Oled_ConstText
  5080  1F46  0008               	return
  5081  1F47                     __end_of_ShowReceptionIcon:	
  5082                           
  5083                           	psect	text11
  5084  0F14                     __ptext11:	
  5085 ;; *************** function _PIN_Init *****************
  5086 ;; Defined at:
  5087 ;;		line 38 in file "misc.h"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;		None
  5090 ;; Auto vars:     Size  Location     Type
  5091 ;;  state           1    0[COMMON] unsigned char 
  5092 ;; Return value:  Size  Location     Type
  5093 ;;                  1    wreg      void 
  5094 ;; Registers used:
  5095 ;;		wreg, status,2, status,0
  5096 ;; Tracked objects:
  5097 ;;		On entry : 0/0
  5098 ;;		On exit  : 0/0
  5099 ;;		Unchanged: 0/0
  5100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;Total ram usage:        1 bytes
  5106 ;; Hardware stack levels used:    1
  5107 ;; This function calls:
  5108 ;;		Nothing
  5109 ;; This function is called by:
  5110 ;;		_main
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           
  5115                           ;psect for function _PIN_Init
  5116  0F14                     _PIN_Init:	
  5117                           
  5118                           ;misc.h: 40: LATA = 0x00;
  5119                           
  5120                           ;incstack = 0
  5121                           ; Regs used in _PIN_Init: [wreg+status,2+status,0]
  5122  0F14  0022               	movlb	2	; select bank2
  5123  0F15  018C               	clrf	12	;volatile
  5124                           
  5125                           ;misc.h: 41: LATB = 0x00;
  5126  0F16  018D               	clrf	13	;volatile
  5127                           
  5128                           ;misc.h: 42: LATC = 0x00;
  5129  0F17  018E               	clrf	14	;volatile
  5130                           
  5131                           ;misc.h: 44: TRISA = 0x23;
  5132  0F18  3023               	movlw	35
  5133  0F19  0021               	movlb	1	; select bank1
  5134  0F1A  008C               	movwf	12	;volatile
  5135                           
  5136                           ;misc.h: 45: TRISB = 0xF0;
  5137  0F1B  30F0               	movlw	240
  5138  0F1C  008D               	movwf	13	;volatile
  5139                           
  5140                           ;misc.h: 46: TRISC = 0x02;
  5141  0F1D  3002               	movlw	2
  5142  0F1E  008E               	movwf	14	;volatile
  5143                           
  5144                           ;misc.h: 48: ANSELA = 0x03;
  5145  0F1F  3003               	movlw	3
  5146  0F20  0023               	movlb	3	; select bank3
  5147  0F21  008C               	movwf	12	;volatile
  5148                           
  5149                           ;misc.h: 49: ANSELB = 0x00;
  5150  0F22  018D               	clrf	13	;volatile
  5151                           
  5152                           ;misc.h: 50: ANSELC = 0x00;
  5153  0F23  018E               	clrf	14	;volatile
  5154                           
  5155                           ;misc.h: 52: WPUA = 0x00;
  5156  0F24  0024               	movlb	4	; select bank4
  5157  0F25  018C               	clrf	12	;volatile
  5158                           
  5159                           ;misc.h: 53: WPUB = 0x00;
  5160  0F26  018D               	clrf	13	;volatile
  5161                           
  5162                           ;misc.h: 54: WPUC = 0x00;
  5163  0F27  018E               	clrf	14	;volatile
  5164                           
  5165                           ;misc.h: 55: OPTION_REGbits.nWPUEN = 0x01;
  5166  0F28  0021               	movlb	1	; select bank1
  5167  0F29  1795               	bsf	21,7	;volatile
  5168                           
  5169                           ;misc.h: 57: bool state = GIE;
  5170  0F2A  3000               	movlw	0
  5171  0F2B  1B8B               	btfsc	11,7	;volatile
  5172  0F2C  3001               	movlw	1
  5173  0F2D  00F0               	movwf	PIN_Init@state
  5174                           
  5175                           ;misc.h: 58: GIE = 0;
  5176  0F2E  138B               	bcf	11,7	;volatile
  5177                           
  5178                           ;misc.h: 59: PPSLOCK = 0x55;
  5179  0F2F  3055               	movlw	85
  5180  0F30  003C               	movlb	28	; select bank28
  5181  0F31  008F               	movwf	15	;volatile
  5182                           
  5183                           ;misc.h: 60: PPSLOCK = 0xAA;
  5184  0F32  30AA               	movlw	170
  5185  0F33  008F               	movwf	15	;volatile
  5186                           
  5187                           ;misc.h: 61: PPSLOCKbits.PPSLOCKED = 0x00;
  5188  0F34  100F               	bcf	15,0	;volatile
  5189                           
  5190                           ;misc.h: 63: SSPDATPPSbits.SSPDATPPS = 0x05;
  5191  0F35  0821               	movf	33,w	;volatile
  5192  0F36  39E0               	andlw	-32
  5193  0F37  3805               	iorlw	5
  5194  0F38  00A1               	movwf	33	;volatile
  5195                           
  5196                           ;misc.h: 64: RXPPSbits.RXPPS = 0x0C;
  5197  0F39  0824               	movf	36,w	;volatile
  5198  0F3A  39E0               	andlw	-32
  5199  0F3B  380C               	iorlw	12
  5200  0F3C  00A4               	movwf	36	;volatile
  5201                           
  5202                           ;misc.h: 65: RB5PPSbits.RB5PPS = 0x14;
  5203  0F3D  003D               	movlb	29	; select bank29
  5204  0F3E  081D               	movf	29,w	;volatile
  5205  0F3F  39E0               	andlw	-32
  5206  0F40  3814               	iorlw	20
  5207  0F41  009D               	movwf	29	;volatile
  5208                           
  5209                           ;misc.h: 66: RC3PPSbits.RC3PPS = 0x12;
  5210  0F42  0823               	movf	35,w	;volatile
  5211  0F43  39E0               	andlw	-32
  5212  0F44  3812               	iorlw	18
  5213  0F45  00A3               	movwf	35	;volatile
  5214                           
  5215                           ;misc.h: 67: SSPCLKPPSbits.SSPCLKPPS = 0x16;
  5216  0F46  003C               	movlb	28	; select bank28
  5217  0F47  0820               	movf	32,w	;volatile
  5218  0F48  39E0               	andlw	-32
  5219  0F49  3816               	iorlw	22
  5220  0F4A  00A0               	movwf	32	;volatile
  5221                           
  5222                           ;misc.h: 68: RC6PPSbits.RC6PPS = 0x10;
  5223  0F4B  003D               	movlb	29	; select bank29
  5224  0F4C  0826               	movf	38,w	;volatile
  5225  0F4D  39E0               	andlw	-32
  5226  0F4E  3810               	iorlw	16
  5227  0F4F  00A6               	movwf	38	;volatile
  5228                           
  5229                           ;misc.h: 69: PPSLOCK = 0x55;
  5230  0F50  3055               	movlw	85
  5231  0F51  003C               	movlb	28	; select bank28
  5232  0F52  008F               	movwf	15	;volatile
  5233                           
  5234                           ;misc.h: 70: PPSLOCK = 0xAA;
  5235  0F53  30AA               	movlw	170
  5236  0F54  008F               	movwf	15	;volatile
  5237                           
  5238                           ;misc.h: 71: PPSLOCKbits.PPSLOCKED = 0x01;
  5239  0F55  140F               	bsf	15,0	;volatile
  5240                           
  5241                           ;misc.h: 72: GIE = state;
  5242  0F56  1C70               	btfss	PIN_Init@state,0
  5243  0F57  2F5A               	goto	u5860
  5244  0F58  178B               	bsf	11,7	;volatile
  5245  0F59  0008               	return
  5246  0F5A                     u5860:	
  5247  0F5A  138B               	bcf	11,7	;volatile
  5248  0F5B  0008               	return
  5249  0F5C                     __end_of_PIN_Init:	
  5250                           
  5251                           	psect	text12
  5252  10C3                     __ptext12:	
  5253 ;; *************** function _OnOff *****************
  5254 ;; Defined at:
  5255 ;;		line 170 in file "main.c"
  5256 ;; Parameters:    Size  Location     Type
  5257 ;;		None
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;		None
  5260 ;; Return value:  Size  Location     Type
  5261 ;;                  1    wreg      void 
  5262 ;; Registers used:
  5263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5264 ;; Tracked objects:
  5265 ;;		On entry : 0/0
  5266 ;;		On exit  : 0/0
  5267 ;;		Unchanged: 0/0
  5268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5271 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;Total ram usage:        1 bytes
  5274 ;; Hardware stack levels used:    1
  5275 ;; Hardware stack levels required when called:    7
  5276 ;; This function calls:
  5277 ;;		_GsmOff
  5278 ;;		_ResetScreenTimer
  5279 ;;		_ScreenOff
  5280 ;; This function is called by:
  5281 ;;		_main
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _OnOff
  5287  10C3                     _OnOff:	
  5288                           
  5289                           ;main.c: 171: if(PORTCbits.RC1 == 1 && !sleepMode){
  5290                           
  5291                           ;incstack = 0
  5292                           ; Regs used in _OnOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5293  10C3  0020               	movlb	0	; select bank0
  5294  10C4  1C8E               	btfss	14,1	;volatile
  5295  10C5  28CC               	goto	l5830
  5296  10C6  086E               	movf	_sleepMode,w
  5297  10C7  1D03               	btfss	3,2
  5298  10C8  28CC               	goto	l5830
  5299                           
  5300                           ;main.c: 172: ResetScreenTimer();
  5301  10C9  319C  24D5  3190   	fcall	_ResetScreenTimer
  5302  10CC                     l5830:	
  5303                           
  5304                           ;main.c: 173: };
  5305                           ;main.c: 175: if(screenTimer==1){
  5306  10CC  0020               	movlb	0	; select bank0
  5307  10CD  0360               	decf	_screenTimer,w
  5308  10CE  0461               	iorwf	_screenTimer+1,w
  5309  10CF  1D03               	btfss	3,2
  5310  10D0  28DA               	goto	l5838
  5311                           
  5312                           ;main.c: 176: ScreenOff();
  5313  10D1  319C  24D1  3190   	fcall	_ScreenOff
  5314                           
  5315                           ;main.c: 177: sleepMode = 1;
  5316  10D4  0020               	movlb	0	; select bank0
  5317  10D5  01EE               	clrf	_sleepMode
  5318  10D6  0AEE               	incf	_sleepMode,f
  5319                           
  5320                           ;main.c: 179: GsmOff();
  5321  10D7  319E  266F  3190   	fcall	_GsmOff
  5322  10DA                     l5838:	
  5323                           
  5324                           ;main.c: 180: }
  5325                           ;main.c: 181: if(screenTimer>=1)screenTimer--;
  5326  10DA  0020               	movlb	0	; select bank0
  5327  10DB  0861               	movf	_screenTimer+1,w
  5328  10DC  3A80               	xorlw	128
  5329  10DD  00B7               	movwf	??_OnOff
  5330  10DE  3080               	movlw	128
  5331  10DF  0237               	subwf	??_OnOff,w
  5332  10E0  1D03               	skipz
  5333  10E1  28E4               	goto	u6185
  5334  10E2  3001               	movlw	1
  5335  10E3  0260               	subwf	_screenTimer,w
  5336  10E4                     u6185:	
  5337  10E4  1C03               	skipc
  5338  10E5  0008               	return
  5339  10E6  30FF               	movlw	255
  5340  10E7  0020               	movlb	0	; select bank0
  5341  10E8  07E0               	addwf	_screenTimer,f
  5342  10E9  30FF               	movlw	255
  5343  10EA  3DE1               	addwfc	_screenTimer+1,f
  5344  10EB  0008               	return
  5345  10EC                     __end_of_OnOff:	
  5346                           
  5347                           	psect	text13
  5348  1CD1                     __ptext13:	
  5349 ;; *************** function _ScreenOff *****************
  5350 ;; Defined at:
  5351 ;;		line 119 in file "oled.h"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, status,2, status,0, pclath, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5369 ;;Total ram usage:        0 bytes
  5370 ;; Hardware stack levels used:    1
  5371 ;; Hardware stack levels required when called:    2
  5372 ;; This function calls:
  5373 ;;		_Oled_WriteCmd
  5374 ;; This function is called by:
  5375 ;;		_OnOff
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           
  5380                           ;psect for function _ScreenOff
  5381  1CD1                     _ScreenOff:	
  5382                           
  5383                           ;oled.h: 120: Oled_WriteCmd(0xAE);
  5384                           
  5385                           ;incstack = 0
  5386                           ; Regs used in _ScreenOff: [wreg+status,2+status,0+pclath+cstack]
  5387  1CD1  30AE               	movlw	174
  5388  1CD2  319D  2501         	fcall	_Oled_WriteCmd
  5389  1CD4  0008               	return
  5390  1CD5                     __end_of_ScreenOff:	
  5391                           
  5392                           	psect	text14
  5393  1E6F                     __ptext14:	
  5394 ;; *************** function _GsmOff *****************
  5395 ;; Defined at:
  5396 ;;		line 39 in file "gsm.h"
  5397 ;; Parameters:    Size  Location     Type
  5398 ;;		None
  5399 ;; Auto vars:     Size  Location     Type
  5400 ;;  res            11    0        unsigned char [11]
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  1    wreg      void 
  5403 ;; Registers used:
  5404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5414 ;;Total ram usage:        0 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    6
  5417 ;; This function calls:
  5418 ;;		_SendUartCmd
  5419 ;;		_ShowFlightIcon
  5420 ;;		_ShowMessage
  5421 ;; This function is called by:
  5422 ;;		_OnOff
  5423 ;; This function uses a non-reentrant model
  5424 ;;
  5425                           
  5426                           
  5427                           ;psect for function _GsmOff
  5428  1E6F                     _GsmOff:	
  5429                           
  5430                           ;gsm.h: 40: char res[11];
  5431                           ;gsm.h: 41: flightMode = 1;
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _GsmOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5435  1E6F  0020               	movlb	0	; select bank0
  5436  1E70  01E7               	clrf	_flightMode
  5437  1E71  0AE7               	incf	_flightMode,f
  5438                           
  5439                           ;gsm.h: 42: ShowMessage("@@@@", 0);
  5440  1E72  3097               	movlw	low ((STR_17+4)| (0+32768))
  5441  1E73  00B0               	movwf	ShowMessage@message
  5442  1E74  308E               	movlw	high ((STR_17+4)| (0+32768))
  5443  1E75  00B1               	movwf	ShowMessage@message+1
  5444  1E76  01B2               	clrf	ShowMessage@page
  5445  1E77  319F  278E  319E   	fcall	_ShowMessage
  5446                           
  5447                           ;gsm.h: 43: SendUartCmd("AT+CFUN=4\n");
  5448  1E7A  3028               	movlw	low (STR_8| (0+32768))
  5449  1E7B  00F6               	movwf	SendUartCmd@cmd
  5450  1E7C  308E               	movlw	high (STR_8| (0+32768))
  5451  1E7D  00F7               	movwf	SendUartCmd@cmd+1
  5452  1E7E  319C  24DB  319E   	fcall	_SendUartCmd
  5453                           
  5454                           ;gsm.h: 44: SendUartCmd("AT+CSCLK=2\n");
  5455  1E81  30EE               	movlw	low (STR_9| (0+32768))
  5456  1E82  00F6               	movwf	SendUartCmd@cmd
  5457  1E83  308D               	movlw	high (STR_9| (0+32768))
  5458  1E84  00F7               	movwf	SendUartCmd@cmd+1
  5459  1E85  319C  24DB  319E   	fcall	_SendUartCmd
  5460                           
  5461                           ;gsm.h: 45: ShowFlightIcon();
  5462  1E88  319F  2703         	fcall	_ShowFlightIcon
  5463  1E8A  0008               	return
  5464  1E8B                     __end_of_GsmOff:	
  5465                           
  5466                           	psect	text15
  5467  16DE                     __ptext15:	
  5468 ;; *************** function _Oled_Init *****************
  5469 ;; Defined at:
  5470 ;;		line 84 in file "oled.h"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, status,2, status,0, pclath, cstack
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;Total ram usage:        3 bytes
  5489 ;; Hardware stack levels used:    1
  5490 ;; Hardware stack levels required when called:    4
  5491 ;; This function calls:
  5492 ;;		_Oled_FillScreen
  5493 ;;		_Oled_Reset
  5494 ;;		_Oled_WriteCmd
  5495 ;; This function is called by:
  5496 ;;		_main
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _Oled_Init
  5502  16DE                     _Oled_Init:	
  5503                           
  5504                           ;oled.h: 85: PORTAbits.RA4 = 1;
  5505                           
  5506                           ;incstack = 0
  5507                           ; Regs used in _Oled_Init: [wreg+status,2+status,0+pclath+cstack]
  5508  16DE  0020               	movlb	0	; select bank0
  5509  16DF  160C               	bsf	12,4	;volatile
  5510                           
  5511                           ;oled.h: 86: PORTCbits.RC5 = 0;
  5512  16E0  128E               	bcf	14,5	;volatile
  5513                           
  5514                           ;oled.h: 87: PORTCbits.RC4 = 0;
  5515  16E1  120E               	bcf	14,4	;volatile
  5516                           
  5517                           ;oled.h: 88: _delay((unsigned long)((500)*(16000000/4000.0)));
  5518  16E2  300B               	movlw	11
  5519  16E3  00A2               	movwf	??_Oled_Init+2
  5520  16E4  3026               	movlw	38
  5521  16E5  00A1               	movwf	??_Oled_Init+1
  5522  16E6  3066               	movlw	102
  5523  16E7  00A0               	movwf	??_Oled_Init
  5524  16E8                     u6657:	
  5525  16E8  0BA0               	decfsz	??_Oled_Init,f
  5526  16E9  2EE8               	goto	u6657
  5527  16EA  0BA1               	decfsz	??_Oled_Init+1,f
  5528  16EB  2EE8               	goto	u6657
  5529  16EC  0BA2               	decfsz	??_Oled_Init+2,f
  5530  16ED  2EE8               	goto	u6657
  5531  16EE  3200               	nop2
  5532                           
  5533                           ;oled.h: 90: Oled_Reset();
  5534  16EF  319E  268B  3196   	fcall	_Oled_Reset
  5535                           
  5536                           ;oled.h: 91: Oled_WriteCmd(0xAE);
  5537  16F2  30AE               	movlw	174
  5538  16F3  319D  2501  3196   	fcall	_Oled_WriteCmd
  5539                           
  5540                           ;oled.h: 92: Oled_WriteCmd(0x81);
  5541  16F6  3081               	movlw	129
  5542  16F7  319D  2501  3196   	fcall	_Oled_WriteCmd
  5543                           
  5544                           ;oled.h: 93: Oled_WriteCmd(0xCF);
  5545  16FA  30CF               	movlw	207
  5546  16FB  319D  2501  3196   	fcall	_Oled_WriteCmd
  5547                           
  5548                           ;oled.h: 94: Oled_WriteCmd(0xA4);
  5549  16FE  30A4               	movlw	164
  5550  16FF  319D  2501  3196   	fcall	_Oled_WriteCmd
  5551                           
  5552                           ;oled.h: 95: Oled_WriteCmd(0xA6);
  5553  1702  30A6               	movlw	166
  5554  1703  319D  2501  3196   	fcall	_Oled_WriteCmd
  5555                           
  5556                           ;oled.h: 96: Oled_WriteCmd(0x20); Oled_WriteCmd(0x02);
  5557  1706  3020               	movlw	32
  5558  1707  319D  2501  3196   	fcall	_Oled_WriteCmd
  5559  170A  3002               	movlw	2
  5560  170B  319D  2501  3196   	fcall	_Oled_WriteCmd
  5561                           
  5562                           ;oled.h: 97: Oled_WriteCmd(0x00);
  5563  170E  3000               	movlw	0
  5564  170F  319D  2501  3196   	fcall	_Oled_WriteCmd
  5565                           
  5566                           ;oled.h: 98: Oled_WriteCmd(0x10);
  5567  1712  3010               	movlw	16
  5568  1713  319D  2501  3196   	fcall	_Oled_WriteCmd
  5569                           
  5570                           ;oled.h: 99: Oled_WriteCmd(0xB0);
  5571  1716  30B0               	movlw	176
  5572  1717  319D  2501  3196   	fcall	_Oled_WriteCmd
  5573                           
  5574                           ;oled.h: 100: Oled_WriteCmd(0x40);
  5575  171A  3040               	movlw	64
  5576  171B  319D  2501  3196   	fcall	_Oled_WriteCmd
  5577                           
  5578                           ;oled.h: 101: Oled_WriteCmd(0xA1);
  5579  171E  30A1               	movlw	161
  5580  171F  319D  2501  3196   	fcall	_Oled_WriteCmd
  5581                           
  5582                           ;oled.h: 102: Oled_WriteCmd(0xA8); Oled_WriteCmd(0x3F);
  5583  1722  30A8               	movlw	168
  5584  1723  319D  2501  3196   	fcall	_Oled_WriteCmd
  5585  1726  303F               	movlw	63
  5586  1727  319D  2501  3196   	fcall	_Oled_WriteCmd
  5587                           
  5588                           ;oled.h: 103: Oled_WriteCmd(0xC8);
  5589  172A  30C8               	movlw	200
  5590  172B  319D  2501  3196   	fcall	_Oled_WriteCmd
  5591                           
  5592                           ;oled.h: 104: Oled_WriteCmd(0xD3); Oled_WriteCmd(0x00);
  5593  172E  30D3               	movlw	211
  5594  172F  319D  2501  3196   	fcall	_Oled_WriteCmd
  5595  1732  3000               	movlw	0
  5596  1733  319D  2501  3196   	fcall	_Oled_WriteCmd
  5597                           
  5598                           ;oled.h: 105: Oled_WriteCmd(0xDA); Oled_WriteCmd(0x12);
  5599  1736  30DA               	movlw	218
  5600  1737  319D  2501  3196   	fcall	_Oled_WriteCmd
  5601  173A  3012               	movlw	18
  5602  173B  319D  2501  3196   	fcall	_Oled_WriteCmd
  5603                           
  5604                           ;oled.h: 106: Oled_WriteCmd(0xD5); Oled_WriteCmd(0x80);
  5605  173E  30D5               	movlw	213
  5606  173F  319D  2501  3196   	fcall	_Oled_WriteCmd
  5607  1742  3080               	movlw	128
  5608  1743  319D  2501  3196   	fcall	_Oled_WriteCmd
  5609                           
  5610                           ;oled.h: 107: Oled_WriteCmd(0xD9); Oled_WriteCmd(0xF1);
  5611  1746  30D9               	movlw	217
  5612  1747  319D  2501  3196   	fcall	_Oled_WriteCmd
  5613  174A  30F1               	movlw	241
  5614  174B  319D  2501  3196   	fcall	_Oled_WriteCmd
  5615                           
  5616                           ;oled.h: 108: Oled_WriteCmd(0xDB); Oled_WriteCmd(0x40);
  5617  174E  30DB               	movlw	219
  5618  174F  319D  2501  3196   	fcall	_Oled_WriteCmd
  5619  1752  3040               	movlw	64
  5620  1753  319D  2501  3196   	fcall	_Oled_WriteCmd
  5621                           
  5622                           ;oled.h: 109: Oled_WriteCmd(0x8D); Oled_WriteCmd(0x14);
  5623  1756  308D               	movlw	141
  5624  1757  319D  2501  3196   	fcall	_Oled_WriteCmd
  5625  175A  3014               	movlw	20
  5626  175B  319D  2501  3196   	fcall	_Oled_WriteCmd
  5627                           
  5628                           ;oled.h: 110: Oled_WriteCmd(0xAF);
  5629  175E  30AF               	movlw	175
  5630  175F  319D  2501  3196   	fcall	_Oled_WriteCmd
  5631                           
  5632                           ;oled.h: 111: Oled_FillScreen(0x00);
  5633  1762  3000               	movlw	0
  5634  1763  3190  2000         	fcall	_Oled_FillScreen
  5635  1765  0008               	return
  5636  1766                     __end_of_Oled_Init:	
  5637                           
  5638                           	psect	text16
  5639  1E8B                     __ptext16:	
  5640 ;; *************** function _Oled_Reset *****************
  5641 ;; Defined at:
  5642 ;;		line 43 in file "oled.h"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;		None
  5647 ;; Return value:  Size  Location     Type
  5648 ;;                  1    wreg      void 
  5649 ;; Registers used:
  5650 ;;		wreg
  5651 ;; Tracked objects:
  5652 ;;		On entry : 0/0
  5653 ;;		On exit  : 0/0
  5654 ;;		Unchanged: 0/0
  5655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5658 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5659 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5660 ;;Total ram usage:        3 bytes
  5661 ;; Hardware stack levels used:    1
  5662 ;; This function calls:
  5663 ;;		Nothing
  5664 ;; This function is called by:
  5665 ;;		_Oled_Init
  5666 ;; This function uses a non-reentrant model
  5667 ;;
  5668                           
  5669                           
  5670                           ;psect for function _Oled_Reset
  5671  1E8B                     _Oled_Reset:	
  5672                           
  5673                           ;oled.h: 44: PORTCbits.RC4 = 0;
  5674                           
  5675                           ;incstack = 0
  5676                           ; Regs used in _Oled_Reset: [wreg]
  5677  1E8B  0020               	movlb	0	; select bank0
  5678  1E8C  120E               	bcf	14,4	;volatile
  5679                           
  5680                           ;oled.h: 45: _delay((unsigned long)((200)*(16000000/4000.0)));
  5681  1E8D  3005               	movlw	5
  5682  1E8E  00F2               	movwf	??_Oled_Reset+2
  5683  1E8F  300F               	movlw	15
  5684  1E90  00F1               	movwf	??_Oled_Reset+1
  5685  1E91  30F4               	movlw	244
  5686  1E92  00F0               	movwf	??_Oled_Reset
  5687  1E93                     u6667:	
  5688  1E93  0BF0               	decfsz	??_Oled_Reset,f
  5689  1E94  2E93               	goto	u6667
  5690  1E95  0BF1               	decfsz	??_Oled_Reset+1,f
  5691  1E96  2E93               	goto	u6667
  5692  1E97  0BF2               	decfsz	??_Oled_Reset+2,f
  5693  1E98  2E93               	goto	u6667
  5694                           
  5695                           ;oled.h: 46: PORTCbits.RC4 = 1;
  5696  1E99  0020               	movlb	0	; select bank0
  5697  1E9A  160E               	bsf	14,4	;volatile
  5698                           
  5699                           ;oled.h: 47: _delay((unsigned long)((200)*(16000000/4000.0)));
  5700  1E9B  3005               	movlw	5
  5701  1E9C  00F2               	movwf	??_Oled_Reset+2
  5702  1E9D  300F               	movlw	15
  5703  1E9E  00F1               	movwf	??_Oled_Reset+1
  5704  1E9F  30F4               	movlw	244
  5705  1EA0  00F0               	movwf	??_Oled_Reset
  5706  1EA1                     u6677:	
  5707  1EA1  0BF0               	decfsz	??_Oled_Reset,f
  5708  1EA2  2EA1               	goto	u6677
  5709  1EA3  0BF1               	decfsz	??_Oled_Reset+1,f
  5710  1EA4  2EA1               	goto	u6677
  5711  1EA5  0BF2               	decfsz	??_Oled_Reset+2,f
  5712  1EA6  2EA1               	goto	u6677
  5713  1EA7  0008               	return
  5714  1EA8                     __end_of_Oled_Reset:	
  5715                           
  5716                           	psect	text17
  5717  0004                     __ptext17:	
  5718 ;; *************** function _OSC_Init *****************
  5719 ;; Defined at:
  5720 ;;		line 27 in file "misc.h"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, status,2
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5738 ;;Total ram usage:        0 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; This function calls:
  5741 ;;		Nothing
  5742 ;; This function is called by:
  5743 ;;		_main
  5744 ;; This function uses a non-reentrant model
  5745 ;;
  5746                           
  5747                           
  5748                           ;psect for function _OSC_Init
  5749  0004                     _OSC_Init:	
  5750                           
  5751                           ;misc.h: 29: OSCCON = 0x78;
  5752                           
  5753                           ;incstack = 0
  5754                           ; Regs used in _OSC_Init: [wreg+status,2]
  5755  0004  3078               	movlw	120
  5756  0005  0021               	movlb	1	; select bank1
  5757  0006  0099               	movwf	25	;volatile
  5758                           
  5759                           ;misc.h: 31: OSCSTAT = 0x00;
  5760  0007  019A               	clrf	26	;volatile
  5761                           
  5762                           ;misc.h: 33: OSCTUNE = 0x00;
  5763  0008  0198               	clrf	24	;volatile
  5764                           
  5765                           ;misc.h: 35: WDTCON = 0x18;
  5766  0009  3018               	movlw	24
  5767  000A  0097               	movwf	23	;volatile
  5768  000B  0008               	return
  5769  000C                     __end_of_OSC_Init:	
  5770                           
  5771                           	psect	text18
  5772  1D70                     __ptext18:	
  5773 ;; *************** function _INTER_Init *****************
  5774 ;; Defined at:
  5775 ;;		line 75 in file "misc.h"
  5776 ;; Parameters:    Size  Location     Type
  5777 ;;		None
  5778 ;; Auto vars:     Size  Location     Type
  5779 ;;		None
  5780 ;; Return value:  Size  Location     Type
  5781 ;;                  1    wreg      void 
  5782 ;; Registers used:
  5783 ;;		status,2
  5784 ;; Tracked objects:
  5785 ;;		On entry : 0/0
  5786 ;;		On exit  : 0/0
  5787 ;;		Unchanged: 0/0
  5788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5793 ;;Total ram usage:        0 bytes
  5794 ;; Hardware stack levels used:    1
  5795 ;; This function calls:
  5796 ;;		Nothing
  5797 ;; This function is called by:
  5798 ;;		_main
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802                           
  5803                           ;psect for function _INTER_Init
  5804  1D70                     _INTER_Init:	
  5805                           
  5806                           ;misc.h: 76: TMR0IE = 1;
  5807                           
  5808                           ;incstack = 0
  5809                           ; Regs used in _INTER_Init: [status,2]
  5810  1D70  168B               	bsf	11,5	;volatile
  5811                           
  5812                           ;misc.h: 77: GIE = 1;
  5813  1D71  178B               	bsf	11,7	;volatile
  5814                           
  5815                           ;misc.h: 78: TMR0CS=0;
  5816  1D72  0021               	movlb	1	; select bank1
  5817  1D73  1295               	bcf	21,5	;volatile
  5818                           
  5819                           ;misc.h: 79: TMR0SE=0;
  5820  1D74  1215               	bcf	21,4	;volatile
  5821                           
  5822                           ;misc.h: 80: PSA=0;
  5823  1D75  1195               	bcf	21,3	;volatile
  5824                           
  5825                           ;misc.h: 81: PS0=1;
  5826  1D76  1415               	bsf	21,0	;volatile
  5827                           
  5828                           ;misc.h: 82: PS1=1;
  5829  1D77  1495               	bsf	21,1	;volatile
  5830                           
  5831                           ;misc.h: 83: PS2=1;
  5832  1D78  1515               	bsf	21,2	;volatile
  5833                           
  5834                           ;misc.h: 84: TMR0 = 0;
  5835  1D79  0020               	movlb	0	; select bank0
  5836  1D7A  0195               	clrf	21	;volatile
  5837                           
  5838                           ;misc.h: 87: IOCIE = 1;
  5839  1D7B  158B               	bsf	11,3	;volatile
  5840                           
  5841                           ;misc.h: 88: IOCCN1 = 1;
  5842  1D7C  0027               	movlb	7	; select bank7
  5843  1D7D  1498               	bsf	24,1	;volatile
  5844  1D7E  0008               	return
  5845  1D7F                     __end_of_INTER_Init:	
  5846                           
  5847                           	psect	text19
  5848  14FB                     __ptext19:	
  5849 ;; *************** function _CheckSW2 *****************
  5850 ;; Defined at:
  5851 ;;		line 211 in file "main.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;		None
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      void 
  5858 ;; Registers used:
  5859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5867 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5868 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5869 ;;Total ram usage:        3 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; Hardware stack levels required when called:    9
  5872 ;; This function calls:
  5873 ;;		_RFID_Ok
  5874 ;;		_Reset
  5875 ;;		_ResetScreenTimer
  5876 ;;		_SettingMenu
  5877 ;;		_ShowIcon
  5878 ;;		_ShowMessage
  5879 ;; This function is called by:
  5880 ;;		_main
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           
  5885                           ;psect for function _CheckSW2
  5886  14FB                     _CheckSW2:	
  5887                           
  5888                           ;main.c: 212: if(PORTBbits.RB6==0 && imgSetup){
  5889                           
  5890                           ;incstack = 0
  5891                           ; Regs used in _CheckSW2: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5892  14FB  0020               	movlb	0	; select bank0
  5893  14FC  1B0D               	btfsc	13,6	;volatile
  5894  14FD  0008               	return
  5895  14FE  086A               	movf	_imgSetup,w
  5896  14FF  1903               	btfsc	3,2
  5897  1500  0008               	return
  5898                           
  5899                           ;main.c: 213: ResetScreenTimer();
  5900  1501  319C  24D5  3194   	fcall	_ResetScreenTimer
  5901                           
  5902                           ;main.c: 214: ShowMessage("BADGE@@@@", 3);
  5903  1504  3075               	movlw	low (STR_67| (0+32768))
  5904  1505  0020               	movlb	0	; select bank0
  5905  1506  00B0               	movwf	ShowMessage@message
  5906  1507  308E               	movlw	high (STR_67| (0+32768))
  5907  1508  00B1               	movwf	ShowMessage@message+1
  5908  1509  3003               	movlw	3
  5909  150A  00D7               	movwf	??_CheckSW2
  5910  150B  0857               	movf	??_CheckSW2,w
  5911  150C  00B2               	movwf	ShowMessage@page
  5912  150D  319F  278E  3194   	fcall	_ShowMessage
  5913                           
  5914                           ;main.c: 215: ShowMessage("@@@@@@@@", 5);
  5915  1510  3093               	movlw	low (STR_17| (0+32768))
  5916  1511  0020               	movlb	0	; select bank0
  5917  1512  00B0               	movwf	ShowMessage@message
  5918  1513  308E               	movlw	high (STR_17| (0+32768))
  5919  1514  00B1               	movwf	ShowMessage@message+1
  5920  1515  3005               	movlw	5
  5921  1516  00D7               	movwf	??_CheckSW2
  5922  1517  0857               	movf	??_CheckSW2,w
  5923  1518  00B2               	movwf	ShowMessage@page
  5924  1519  319F  278E  3194   	fcall	_ShowMessage
  5925                           
  5926                           ;main.c: 216: ShowIcon("4", 112, 6);
  5927  151C  300A               	movlw	low (STR_21| (0+32768))
  5928  151D  0020               	movlb	0	; select bank0
  5929  151E  00B0               	movwf	ShowIcon@id
  5930  151F  308F               	movlw	high (STR_21| (0+32768))
  5931  1520  00B1               	movwf	ShowIcon@id+1
  5932  1521  3070               	movlw	112
  5933  1522  00D7               	movwf	??_CheckSW2
  5934  1523  0857               	movf	??_CheckSW2,w
  5935  1524  00B2               	movwf	ShowIcon@seg
  5936  1525  3006               	movlw	6
  5937  1526  00D8               	movwf	??_CheckSW2+1
  5938  1527  0858               	movf	??_CheckSW2+1,w
  5939  1528  00B3               	movwf	ShowIcon@page
  5940  1529  3190  2073  3194   	fcall	_ShowIcon
  5941  152C                     l602:	
  5942                           ;main.c: 217: while(1) {
  5943                           
  5944  152C  0064               	clrwdt	;# 
  5945                           
  5946                           ;main.c: 219: if(PORTBbits.RB7 == 0){
  5947  152D  0020               	movlb	0	; select bank0
  5948  152E  1B8D               	btfsc	13,7	;volatile
  5949  152F  2D5D               	goto	l5814
  5950                           
  5951                           ;main.c: 220: imgCancel=!imgCancel;
  5952  1530  0869               	movf	_imgCancel,w
  5953  1531  1D03               	btfss	3,2
  5954  1532  2D35               	goto	u6090
  5955  1533  3001               	movlw	1
  5956  1534  2D36               	goto	u6100
  5957  1535                     u6090:	
  5958  1535  3000               	movlw	0
  5959  1536                     u6100:	
  5960  1536  00D7               	movwf	??_CheckSW2
  5961  1537  0857               	movf	??_CheckSW2,w
  5962  1538  00E9               	movwf	_imgCancel
  5963                           
  5964                           ;main.c: 221: if(!imgCancel)
  5965  1539  0869               	movf	_imgCancel,w
  5966  153A  1D03               	btfss	3,2
  5967  153B  2D40               	goto	l5810
  5968                           
  5969                           ;main.c: 222: ShowIcon("4", 112, 6);
  5970  153C  300A               	movlw	low (STR_21| (0+32768))
  5971  153D  00B0               	movwf	ShowIcon@id
  5972  153E  308F               	movlw	high (STR_21| (0+32768))
  5973  153F  2D44               	goto	L1
  5974  1540                     l5810:	
  5975                           
  5976                           ;main.c: 223: else
  5977                           ;main.c: 224: ShowIcon("5", 112, 6);
  5978  1540  300C               	movlw	low (STR_52| (0+32768))
  5979  1541  0020               	movlb	0	; select bank0
  5980  1542  00B0               	movwf	ShowIcon@id
  5981  1543  308F               	movlw	high (STR_52| (0+32768))
  5982  1544                     L1:	
  5983  1544  00B1               	movwf	ShowIcon@id+1
  5984  1545  3070               	movlw	112
  5985  1546  00D7               	movwf	??_CheckSW2
  5986  1547  0857               	movf	??_CheckSW2,w
  5987  1548  00B2               	movwf	ShowIcon@seg
  5988  1549  3006               	movlw	6
  5989  154A  00D8               	movwf	??_CheckSW2+1
  5990  154B  0858               	movf	??_CheckSW2+1,w
  5991  154C  00B3               	movwf	ShowIcon@page
  5992  154D  3190  2073  3194   	fcall	_ShowIcon
  5993                           
  5994                           ;main.c: 225: _delay((unsigned long)((200)*(16000000/4000.0)));
  5995  1550  3005               	movlw	5
  5996  1551  0020               	movlb	0	; select bank0
  5997  1552  00D9               	movwf	??_CheckSW2+2
  5998  1553  300F               	movlw	15
  5999  1554  00D8               	movwf	??_CheckSW2+1
  6000  1555  30F4               	movlw	244
  6001  1556  00D7               	movwf	??_CheckSW2
  6002  1557                     u6687:	
  6003  1557  0BD7               	decfsz	??_CheckSW2,f
  6004  1558  2D57               	goto	u6687
  6005  1559  0BD8               	decfsz	??_CheckSW2+1,f
  6006  155A  2D57               	goto	u6687
  6007  155B  0BD9               	decfsz	??_CheckSW2+2,f
  6008  155C  2D57               	goto	u6687
  6009  155D                     l5814:	
  6010                           
  6011                           ;main.c: 226: }
  6012                           ;main.c: 228: if(RFID_Ok()) {
  6013  155D  3197  2766  3194   	fcall	_RFID_Ok
  6014  1560  3A00               	xorlw	0
  6015  1561  1903               	skipnz
  6016  1562  2D66               	goto	l606
  6017                           
  6018                           ;main.c: 229: SettingMenu();
  6019  1563  3181  213F         	fcall	_SettingMenu
  6020                           
  6021                           ;main.c: 230: break;
  6022  1565  0008               	return
  6023  1566                     l606:	
  6024                           
  6025                           ;main.c: 231: }
  6026                           ;main.c: 233: if(PORTBbits.RB6 == 0 && imgCancel){
  6027  1566  0020               	movlb	0	; select bank0
  6028  1567  1B0D               	btfsc	13,6	;volatile
  6029  1568  2D2C               	goto	l602
  6030  1569  0869               	movf	_imgCancel,w
  6031  156A  1903               	btfsc	3,2
  6032  156B  2D2C               	goto	l602
  6033                           
  6034                           ;main.c: 234: imgCancel=0;
  6035  156C  01E9               	clrf	_imgCancel
  6036                           
  6037                           ;main.c: 235: Reset();
  6038  156D  319E  26E4         	fcall	_Reset
  6039                           
  6040                           ;main.c: 236: break;
  6041  156F  0008               	return
  6042  1570                     __end_of_CheckSW2:	
  6043                           
  6044                           	psect	text20
  6045  013F                     __ptext20:	
  6046 ;; *************** function _SettingMenu *****************
  6047 ;; Defined at:
  6048 ;;		line 242 in file "main.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;		None
  6051 ;; Auto vars:     Size  Location     Type
  6052 ;;  phoneNumber     2   53[BANK0 ] PTR unsigned char 
  6053 ;;		 -> ReadPhoneNumber@result1(50), STR_38(1), result3(67), CheckNetwork@res(20), 
  6054 ;;		 -> CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
  6055 ;; Return value:  Size  Location     Type
  6056 ;;                  1    wreg      void 
  6057 ;; Registers used:
  6058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6059 ;; Tracked objects:
  6060 ;;		On entry : 0/0
  6061 ;;		On exit  : 0/0
  6062 ;;		Unchanged: 0/0
  6063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6066 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6067 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6068 ;;Total ram usage:        5 bytes
  6069 ;; Hardware stack levels used:    1
  6070 ;; Hardware stack levels required when called:    8
  6071 ;; This function calls:
  6072 ;;		_Oled_FillScreen
  6073 ;;		_ReadLastSMS
  6074 ;;		_Reset
  6075 ;;		_SavePhoneNumber
  6076 ;;		_ShowIcon
  6077 ;;		_ShowMessage
  6078 ;;		___delay_sec
  6079 ;;		_strlen
  6080 ;; This function is called by:
  6081 ;;		_CheckSW2
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           
  6086                           ;psect for function _SettingMenu
  6087  013F                     _SettingMenu:	
  6088                           
  6089                           ;main.c: 243: Oled_FillScreen(0x00);
  6090                           
  6091                           ;incstack = 0
  6092                           ; Regs used in _SettingMenu: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6093  013F  3000               	movlw	0
  6094  0140  3190  2000  3181   	fcall	_Oled_FillScreen
  6095                           
  6096                           ;main.c: 244: char * phoneNumber = ReadLastSMS();
  6097  0143  3180  2095  3181   	fcall	_ReadLastSMS
  6098  0146  0020               	movlb	0	; select bank0
  6099  0147  0838               	movf	?_ReadLastSMS+1,w
  6100  0148  00D6               	movwf	SettingMenu@phoneNumber+1
  6101  0149  0837               	movf	?_ReadLastSMS,w
  6102  014A  00D5               	movwf	SettingMenu@phoneNumber
  6103                           
  6104                           ;main.c: 245: ShowIcon("2", 90, 6);
  6105  014B  30D5               	movlw	low ((STR_29+4)| (0+32768))
  6106  014C  00B0               	movwf	ShowIcon@id
  6107  014D  308E               	movlw	high ((STR_29+4)| (0+32768))
  6108  014E  00B1               	movwf	ShowIcon@id+1
  6109  014F  305A               	movlw	90
  6110  0150  00D2               	movwf	??_SettingMenu
  6111  0151  0852               	movf	??_SettingMenu,w
  6112  0152  00B2               	movwf	ShowIcon@seg
  6113  0153  3006               	movlw	6
  6114  0154  00D3               	movwf	??_SettingMenu+1
  6115  0155  0853               	movf	??_SettingMenu+1,w
  6116  0156  00B3               	movwf	ShowIcon@page
  6117  0157  3190  2073  3181   	fcall	_ShowIcon
  6118                           
  6119                           ;main.c: 246: ShowIcon("4", 112, 6);
  6120  015A  300A               	movlw	low (STR_21| (0+32768))
  6121  015B  0020               	movlb	0	; select bank0
  6122  015C  00B0               	movwf	ShowIcon@id
  6123  015D  308F               	movlw	high (STR_21| (0+32768))
  6124  015E  00B1               	movwf	ShowIcon@id+1
  6125  015F  3070               	movlw	112
  6126  0160  00D2               	movwf	??_SettingMenu
  6127  0161  0852               	movf	??_SettingMenu,w
  6128  0162  00B2               	movwf	ShowIcon@seg
  6129  0163  3006               	movlw	6
  6130  0164  00D3               	movwf	??_SettingMenu+1
  6131  0165  0853               	movf	??_SettingMenu+1,w
  6132  0166  00B3               	movwf	ShowIcon@page
  6133  0167  3190  2073  3181   	fcall	_ShowIcon
  6134                           
  6135                           ;main.c: 247: _delay((unsigned long)((200)*(16000000/4000.0)));
  6136  016A  3005               	movlw	5
  6137  016B  0020               	movlb	0	; select bank0
  6138  016C  00D4               	movwf	??_SettingMenu+2
  6139  016D  300F               	movlw	15
  6140  016E  00D3               	movwf	??_SettingMenu+1
  6141  016F  30F4               	movlw	244
  6142  0170  00D2               	movwf	??_SettingMenu
  6143  0171                     u6697:	
  6144  0171  0BD2               	decfsz	??_SettingMenu,f
  6145  0172  2971               	goto	u6697
  6146  0173  0BD3               	decfsz	??_SettingMenu+1,f
  6147  0174  2971               	goto	u6697
  6148  0175  0BD4               	decfsz	??_SettingMenu+2,f
  6149  0176  2971               	goto	u6697
  6150  0177                     l613:	
  6151                           ;main.c: 248: while(1){
  6152                           
  6153  0177  0064               	clrwdt	;# 
  6154                           
  6155                           ;main.c: 250: if(PORTBbits.RB7 == 0){
  6156  0178  0020               	movlb	0	; select bank0
  6157  0179  1B8D               	btfsc	13,7	;volatile
  6158  017A  29C8               	goto	l5516
  6159                           
  6160                           ;main.c: 251: imgValidate=!imgValidate;
  6161  017B  086B               	movf	_imgValidate,w
  6162  017C  1D03               	btfss	3,2
  6163  017D  2980               	goto	u5780
  6164  017E  3001               	movlw	1
  6165  017F  2981               	goto	u5790
  6166  0180                     u5780:	
  6167  0180  3000               	movlw	0
  6168  0181                     u5790:	
  6169  0181  00D2               	movwf	??_SettingMenu
  6170  0182  0852               	movf	??_SettingMenu,w
  6171  0183  00EB               	movwf	_imgValidate
  6172                           
  6173                           ;main.c: 252: if(!imgValidate){
  6174  0184  086B               	movf	_imgValidate,w
  6175  0185  1D03               	btfss	3,2
  6176  0186  299B               	goto	l5512
  6177                           
  6178                           ;main.c: 253: ShowIcon("3", 90, 6);
  6179  0187  3008               	movlw	low (STR_20| (0+32768))
  6180  0188  00B0               	movwf	ShowIcon@id
  6181  0189  308F               	movlw	high (STR_20| (0+32768))
  6182  018A  00B1               	movwf	ShowIcon@id+1
  6183  018B  305A               	movlw	90
  6184  018C  00D2               	movwf	??_SettingMenu
  6185  018D  0852               	movf	??_SettingMenu,w
  6186  018E  00B2               	movwf	ShowIcon@seg
  6187  018F  3006               	movlw	6
  6188  0190  00D3               	movwf	??_SettingMenu+1
  6189  0191  0853               	movf	??_SettingMenu+1,w
  6190  0192  00B3               	movwf	ShowIcon@page
  6191  0193  3190  2073  3181   	fcall	_ShowIcon
  6192                           
  6193                           ;main.c: 254: ShowIcon("4", 112, 6);
  6194  0196  300A               	movlw	low (STR_21| (0+32768))
  6195  0197  0020               	movlb	0	; select bank0
  6196  0198  00B0               	movwf	ShowIcon@id
  6197  0199  308F               	movlw	high (STR_21| (0+32768))
  6198  019A  29AF               	goto	L2
  6199  019B                     l5512:	
  6200                           ;main.c: 255: }
  6201                           
  6202                           
  6203                           ;main.c: 256: else{
  6204                           ;main.c: 257: ShowIcon("2", 90, 6);
  6205  019B  30D5               	movlw	low ((STR_29+4)| (0+32768))
  6206  019C  0020               	movlb	0	; select bank0
  6207  019D  00B0               	movwf	ShowIcon@id
  6208  019E  308E               	movlw	high ((STR_29+4)| (0+32768))
  6209  019F  00B1               	movwf	ShowIcon@id+1
  6210  01A0  305A               	movlw	90
  6211  01A1  00D2               	movwf	??_SettingMenu
  6212  01A2  0852               	movf	??_SettingMenu,w
  6213  01A3  00B2               	movwf	ShowIcon@seg
  6214  01A4  3006               	movlw	6
  6215  01A5  00D3               	movwf	??_SettingMenu+1
  6216  01A6  0853               	movf	??_SettingMenu+1,w
  6217  01A7  00B3               	movwf	ShowIcon@page
  6218  01A8  3190  2073  3181   	fcall	_ShowIcon
  6219                           
  6220                           ;main.c: 258: ShowIcon("5", 112, 6);
  6221  01AB  300C               	movlw	low (STR_52| (0+32768))
  6222  01AC  0020               	movlb	0	; select bank0
  6223  01AD  00B0               	movwf	ShowIcon@id
  6224  01AE  308F               	movlw	high (STR_52| (0+32768))
  6225  01AF                     L2:	
  6226  01AF  00B1               	movwf	ShowIcon@id+1
  6227  01B0  3070               	movlw	112
  6228  01B1  00D2               	movwf	??_SettingMenu
  6229  01B2  0852               	movf	??_SettingMenu,w
  6230  01B3  00B2               	movwf	ShowIcon@seg
  6231  01B4  3006               	movlw	6
  6232  01B5  00D3               	movwf	??_SettingMenu+1
  6233  01B6  0853               	movf	??_SettingMenu+1,w
  6234  01B7  00B3               	movwf	ShowIcon@page
  6235  01B8  3190  2073  3181   	fcall	_ShowIcon
  6236                           
  6237                           ;main.c: 259: }
  6238                           ;main.c: 260: _delay((unsigned long)((200)*(16000000/4000.0)));
  6239  01BB  3005               	movlw	5
  6240  01BC  0020               	movlb	0	; select bank0
  6241  01BD  00D4               	movwf	??_SettingMenu+2
  6242  01BE  300F               	movlw	15
  6243  01BF  00D3               	movwf	??_SettingMenu+1
  6244  01C0  30F4               	movlw	244
  6245  01C1  00D2               	movwf	??_SettingMenu
  6246  01C2                     u6707:	
  6247  01C2  0BD2               	decfsz	??_SettingMenu,f
  6248  01C3  29C2               	goto	u6707
  6249  01C4  0BD3               	decfsz	??_SettingMenu+1,f
  6250  01C5  29C2               	goto	u6707
  6251  01C6  0BD4               	decfsz	??_SettingMenu+2,f
  6252  01C7  29C2               	goto	u6707
  6253  01C8                     l5516:	
  6254                           
  6255                           ;main.c: 261: }
  6256                           ;main.c: 263: if(PORTBbits.RB6 == 0 && imgValidate || strlen(phoneNumber) == 0){
  6257  01C8  0020               	movlb	0	; select bank0
  6258  01C9  1B0D               	btfsc	13,6	;volatile
  6259  01CA  29CE               	goto	l5520
  6260  01CB  086B               	movf	_imgValidate,w
  6261  01CC  1D03               	btfss	3,2
  6262  01CD  29D9               	goto	l5522
  6263  01CE                     l5520:	
  6264  01CE  0856               	movf	SettingMenu@phoneNumber+1,w
  6265  01CF  00F1               	movwf	strlen@s+1
  6266  01D0  0855               	movf	SettingMenu@phoneNumber,w
  6267  01D1  00F0               	movwf	strlen@s
  6268  01D2  319E  26C6  3181   	fcall	_strlen
  6269  01D5  0870               	movf	?_strlen,w
  6270  01D6  0471               	iorwf	?_strlen+1,w
  6271  01D7  1D03               	btfss	3,2
  6272  01D8  29DC               	goto	l5524
  6273  01D9                     l5522:	
  6274                           
  6275                           ;main.c: 264: Reset();
  6276  01D9  319E  26E4         	fcall	_Reset
  6277                           
  6278                           ;main.c: 265: break;
  6279  01DB  0008               	return
  6280  01DC                     l5524:	
  6281                           
  6282                           ;main.c: 266: }
  6283                           ;main.c: 267: if(!imgValidate && PORTBbits.RB6 == 0 ){
  6284  01DC  0020               	movlb	0	; select bank0
  6285  01DD  086B               	movf	_imgValidate,w
  6286  01DE  1903               	btfsc	3,2
  6287  01DF  1B0D               	btfsc	13,6	;volatile
  6288  01E0  2977               	goto	l613
  6289                           
  6290                           ;main.c: 268: SavePhoneNumber(phoneNumber);
  6291  01E1  0856               	movf	SettingMenu@phoneNumber+1,w
  6292  01E2  00F9               	movwf	SavePhoneNumber@myPhone+1
  6293  01E3  0855               	movf	SettingMenu@phoneNumber,w
  6294  01E4  00F8               	movwf	SavePhoneNumber@myPhone
  6295  01E5  3192  223C  3181   	fcall	_SavePhoneNumber
  6296                           
  6297                           ;main.c: 269: ShowMessage("SAVED@@@@@",6);
  6298  01E8  303E               	movlw	low (STR_78| (0+32768))
  6299  01E9  0020               	movlb	0	; select bank0
  6300  01EA  00B0               	movwf	ShowMessage@message
  6301  01EB  308E               	movlw	high (STR_78| (0+32768))
  6302  01EC  00B1               	movwf	ShowMessage@message+1
  6303  01ED  3006               	movlw	6
  6304  01EE  00D2               	movwf	??_SettingMenu
  6305  01EF  0852               	movf	??_SettingMenu,w
  6306  01F0  00B2               	movwf	ShowMessage@page
  6307  01F1  319F  278E  3181   	fcall	_ShowMessage
  6308                           
  6309                           ;main.c: 270: __delay_sec(2);
  6310  01F4  3002               	movlw	2
  6311  01F5  00F0               	movwf	___delay_sec@n
  6312  01F6  3000               	movlw	0
  6313  01F7  00F1               	movwf	___delay_sec@n+1
  6314  01F8  319D  25D9  3181   	fcall	___delay_sec
  6315                           
  6316                           ;main.c: 271: Reset();
  6317  01FB  319E  26E4         	fcall	_Reset
  6318                           
  6319                           ;main.c: 272: break;
  6320  01FD  0008               	return
  6321  01FE                     __end_of_SettingMenu:	
  6322                           
  6323                           	psect	text21
  6324  123C                     __ptext21:	
  6325 ;; *************** function _SavePhoneNumber *****************
  6326 ;; Defined at:
  6327 ;;		line 123 in file "gsm.h"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  myPhone         2    8[COMMON] PTR const unsigned char 
  6330 ;;		 -> ReadPhoneNumber@result1(50), STR_38(1), result3(67), CheckNetwork@res(20), 
  6331 ;;		 -> CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  str1           50    0[BANK1 ] unsigned char [50]
  6334 ;;  str2           50    0[BANK0 ] unsigned char [50]
  6335 ;; Return value:  Size  Location     Type
  6336 ;;                  1    wreg      void 
  6337 ;; Registers used:
  6338 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6339 ;; Tracked objects:
  6340 ;;		On entry : 0/0
  6341 ;;		On exit  : 0/0
  6342 ;;		Unchanged: 0/0
  6343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6345 ;;      Locals:         0      50      50       0       0       0       0       0       0       0       0       0       
      +0       0
  6346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6347 ;;      Totals:         2      50      50       0       0       0       0       0       0       0       0       0       
      +0       0
  6348 ;;Total ram usage:      102 bytes
  6349 ;; Hardware stack levels used:    1
  6350 ;; Hardware stack levels required when called:    3
  6351 ;; This function calls:
  6352 ;;		_SendUartCmd
  6353 ;;		_strcat
  6354 ;;		_strcpy
  6355 ;; This function is called by:
  6356 ;;		_SettingMenu
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           
  6361                           ;psect for function _SavePhoneNumber
  6362  123C                     _SavePhoneNumber:	
  6363                           
  6364                           ;gsm.h: 124: char str1[50], str2[50];
  6365                           ;gsm.h: 125: strcpy(str1,"AT+CPBW=10,");
  6366                           
  6367                           ;incstack = 0
  6368                           ; Regs used in _SavePhoneNumber: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6369  123C  30FA               	movlw	low (STR_40| (0+32768))
  6370  123D  00F0               	movwf	strcpy@from
  6371  123E  308D               	movlw	high (STR_40| (0+32768))
  6372  123F  00F1               	movwf	strcpy@from+1
  6373  1240  30A0               	movlw	(low (SavePhoneNumber@str1| 0))& (0+255)
  6374  1241  319E  263A  3192   	fcall	_strcpy
  6375                           
  6376                           ;gsm.h: 126: strcat(str1, myPhone);
  6377  1244  30A0               	movlw	low SavePhoneNumber@str1
  6378  1245  00F0               	movwf	strcat@to
  6379  1246  3000               	movlw	high SavePhoneNumber@str1
  6380  1247  00F1               	movwf	strcat@to+1
  6381  1248  0879               	movf	SavePhoneNumber@myPhone+1,w
  6382  1249  00F3               	movwf	strcat@from+1
  6383  124A  0878               	movf	SavePhoneNumber@myPhone,w
  6384  124B  00F2               	movwf	strcat@from
  6385  124C  319F  27B3  3192   	fcall	_strcat
  6386                           
  6387                           ;gsm.h: 127: strcpy(str2, ",129,\"Bike Alarm\"\n");
  6388  124F  30A2               	movlw	low (STR_41| (0+32768))
  6389  1250  00F0               	movwf	strcpy@from
  6390  1251  308D               	movlw	high (STR_41| (0+32768))
  6391  1252  00F1               	movwf	strcpy@from+1
  6392  1253  3020               	movlw	(low (SavePhoneNumber@str2| 0))& (0+255)
  6393  1254  319E  263A  3192   	fcall	_strcpy
  6394                           
  6395                           ;gsm.h: 128: strcat(str1, str2);
  6396  1257  30A0               	movlw	low SavePhoneNumber@str1
  6397  1258  00F0               	movwf	strcat@to
  6398  1259  3000               	movlw	high SavePhoneNumber@str1
  6399  125A  00F1               	movwf	strcat@to+1
  6400  125B  3020               	movlw	low SavePhoneNumber@str2
  6401  125C  00F2               	movwf	strcat@from
  6402  125D  3000               	movlw	high SavePhoneNumber@str2
  6403  125E  00F3               	movwf	strcat@from+1
  6404  125F  319F  27B3  3192   	fcall	_strcat
  6405                           
  6406                           ;gsm.h: 129: SendUartCmd("AT+CPBS=\"SM\"\n");
  6407  1262  30C6               	movlw	low (STR_42| (0+32768))
  6408  1263  00F6               	movwf	SendUartCmd@cmd
  6409  1264  308D               	movlw	high (STR_42| (0+32768))
  6410  1265  00F7               	movwf	SendUartCmd@cmd+1
  6411  1266  319C  24DB  3192   	fcall	_SendUartCmd
  6412                           
  6413                           ;gsm.h: 130: SendUartCmd(str1);
  6414  1269  30A0               	movlw	low SavePhoneNumber@str1
  6415  126A  00F6               	movwf	SendUartCmd@cmd
  6416  126B  3000               	movlw	high SavePhoneNumber@str1
  6417  126C  00F7               	movwf	SendUartCmd@cmd+1
  6418  126D  319C  24DB         	fcall	_SendUartCmd
  6419  126F  0008               	return
  6420  1270                     __end_of_SavePhoneNumber:	
  6421                           
  6422                           	psect	text22
  6423  1E3A                     __ptext22:	
  6424 ;; *************** function _strcpy *****************
  6425 ;; Defined at:
  6426 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcpy.c"
  6427 ;; Parameters:    Size  Location     Type
  6428 ;;  to              1    wreg     PTR unsigned char 
  6429 ;;		 -> SavePhoneNumber@str2(50), SavePhoneNumber@str1(50), 
  6430 ;;  from            2    0[COMMON] PTR const unsigned char 
  6431 ;;		 -> STR_41(19), STR_40(12), 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;  to              1    4[COMMON] PTR unsigned char 
  6434 ;;		 -> SavePhoneNumber@str2(50), SavePhoneNumber@str1(50), 
  6435 ;;  cp              1    3[COMMON] PTR unsigned char 
  6436 ;;		 -> SavePhoneNumber@str2(50), SavePhoneNumber@str1(50), 
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      PTR unsigned char 
  6439 ;; Registers used:
  6440 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6449 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6450 ;;Total ram usage:        5 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_SavePhoneNumber
  6456 ;; This function uses a non-reentrant model
  6457 ;;
  6458                           
  6459                           
  6460                           ;psect for function _strcpy
  6461  1E3A                     _strcpy:	
  6462                           
  6463                           ;incstack = 0
  6464                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
  6465                           ;strcpy@to stored from wreg
  6466  1E3A  00F4               	movwf	strcpy@to
  6467  1E3B  0874               	movf	strcpy@to,w
  6468  1E3C  00F2               	movwf	??_strcpy
  6469  1E3D  0872               	movf	??_strcpy,w
  6470  1E3E  00F3               	movwf	strcpy@cp
  6471  1E3F                     l4924:	
  6472  1E3F  0873               	movf	strcpy@cp,w
  6473  1E40  0086               	movwf	6
  6474  1E41  0187               	clrf	7
  6475  1E42  0870               	movf	strcpy@from,w
  6476  1E43  0084               	movwf	4
  6477  1E44  0871               	movf	strcpy@from+1,w
  6478  1E45  0085               	movwf	5
  6479  1E46  0800               	movf	0,w	;code access
  6480  1E47  3FC0               	movwi [0]fsr1
  6481  1E48  0889               	movf	9,f
  6482  1E49  1903               	btfsc	3,2
  6483  1E4A  0008               	return
  6484  1E4B  3001               	movlw	1
  6485  1E4C  00F2               	movwf	??_strcpy
  6486  1E4D  0872               	movf	??_strcpy,w
  6487  1E4E  07F3               	addwf	strcpy@cp,f
  6488  1E4F  3001               	movlw	1
  6489  1E50  07F0               	addwf	strcpy@from,f
  6490  1E51  3000               	movlw	0
  6491  1E52  3DF1               	addwfc	strcpy@from+1,f
  6492  1E53  2E3F               	goto	l4924
  6493  1E54                     __end_of_strcpy:	
  6494                           ;	Return value of _strcpy is never used
  6495                           
  6496                           
  6497                           	psect	text23
  6498  1EE4                     __ptext23:	
  6499 ;; *************** function _Reset *****************
  6500 ;; Defined at:
  6501 ;;		line 277 in file "main.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6517 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6518 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6519 ;;Total ram usage:        2 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    7
  6522 ;; This function calls:
  6523 ;;		_Oled_FillScreen
  6524 ;;		_SetAlarmOff
  6525 ;;		_ShowFlightIcon
  6526 ;;		_ShowIcon
  6527 ;; This function is called by:
  6528 ;;		_main
  6529 ;;		_CheckSW2
  6530 ;;		_SettingMenu
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           
  6535                           ;psect for function _Reset
  6536  1EE4                     _Reset:	
  6537                           
  6538                           ;main.c: 278: Oled_FillScreen(0x00);
  6539                           
  6540                           ;incstack = 0
  6541                           ; Regs used in _Reset: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6542  1EE4  3000               	movlw	0
  6543  1EE5  3190  2000  319E   	fcall	_Oled_FillScreen
  6544                           
  6545                           ;main.c: 279: SetAlarmOff();
  6546  1EE8  319D  257F  319E   	fcall	_SetAlarmOff
  6547                           
  6548                           ;main.c: 280: ShowIcon("1", 112, 6);
  6549  1EEB  30CF               	movlw	low ((STR_30+4)| (0+32768))
  6550  1EEC  0020               	movlb	0	; select bank0
  6551  1EED  00B0               	movwf	ShowIcon@id
  6552  1EEE  308E               	movlw	high ((STR_30+4)| (0+32768))
  6553  1EEF  00B1               	movwf	ShowIcon@id+1
  6554  1EF0  3070               	movlw	112
  6555  1EF1  00B8               	movwf	??_Reset
  6556  1EF2  0838               	movf	??_Reset,w
  6557  1EF3  00B2               	movwf	ShowIcon@seg
  6558  1EF4  3006               	movlw	6
  6559  1EF5  00B9               	movwf	??_Reset+1
  6560  1EF6  0839               	movf	??_Reset+1,w
  6561  1EF7  00B3               	movwf	ShowIcon@page
  6562  1EF8  3190  2073  319E   	fcall	_ShowIcon
  6563                           
  6564                           ;main.c: 281: imgSetup=0;
  6565  1EFB  0020               	movlb	0	; select bank0
  6566  1EFC  01EA               	clrf	_imgSetup
  6567                           
  6568                           ;main.c: 282: if(flightMode) ShowFlightIcon();
  6569  1EFD  0867               	movf	_flightMode,w
  6570  1EFE  1903               	btfsc	3,2
  6571  1EFF  0008               	return
  6572  1F00  319F  2703         	fcall	_ShowFlightIcon
  6573  1F02  0008               	return
  6574  1F03                     __end_of_Reset:	
  6575                           
  6576                           	psect	text24
  6577  1F03                     __ptext24:	
  6578 ;; *************** function _ShowFlightIcon *****************
  6579 ;; Defined at:
  6580 ;;		line 191 in file "gsm.h"
  6581 ;; Parameters:    Size  Location     Type
  6582 ;;		None
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  1    wreg      void 
  6587 ;; Registers used:
  6588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6596 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6597 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6598 ;;Total ram usage:        4 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    5
  6601 ;; This function calls:
  6602 ;;		_Oled_ConstText
  6603 ;;		_Oled_SetFont
  6604 ;; This function is called by:
  6605 ;;		_GsmOff
  6606 ;;		_Reset
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           
  6611                           ;psect for function _ShowFlightIcon
  6612  1F03                     _ShowFlightIcon:	
  6613                           
  6614                           ;gsm.h: 192: Oled_SetFont(FlightMode8x12, 16, 16, 48, 48);
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in _ShowFlightIcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6618  1F03  305A               	movlw	low (_FlightMode8x12| (0+32768))
  6619  1F04  0020               	movlb	0	; select bank0
  6620  1F05  00A0               	movwf	Oled_SetFont@_font
  6621  1F06  308D               	movlw	high (_FlightMode8x12| (0+32768))
  6622  1F07  00A1               	movwf	Oled_SetFont@_font+1
  6623  1F08  3010               	movlw	16
  6624  1F09  00B0               	movwf	??_ShowFlightIcon
  6625  1F0A  0830               	movf	??_ShowFlightIcon,w
  6626  1F0B  00A2               	movwf	Oled_SetFont@_width
  6627  1F0C  3010               	movlw	16
  6628  1F0D  00B1               	movwf	??_ShowFlightIcon+1
  6629  1F0E  0831               	movf	??_ShowFlightIcon+1,w
  6630  1F0F  00A3               	movwf	Oled_SetFont@_height
  6631  1F10  3030               	movlw	48
  6632  1F11  00B2               	movwf	??_ShowFlightIcon+2
  6633  1F12  0832               	movf	??_ShowFlightIcon+2,w
  6634  1F13  00A4               	movwf	Oled_SetFont@_min
  6635  1F14  3030               	movlw	48
  6636  1F15  00B3               	movwf	??_ShowFlightIcon+3
  6637  1F16  0833               	movf	??_ShowFlightIcon+3,w
  6638  1F17  00A5               	movwf	Oled_SetFont@_max
  6639  1F18  3190  204B  319F   	fcall	_Oled_SetFont
  6640                           
  6641                           ;gsm.h: 193: Oled_ConstText("0", 0, 0);
  6642  1F1B  3006               	movlw	low (STR_54| (0+32768))
  6643  1F1C  0020               	movlb	0	; select bank0
  6644  1F1D  00A9               	movwf	Oled_ConstText@buffer
  6645  1F1E  308F               	movlw	high (STR_54| (0+32768))
  6646  1F1F  00AA               	movwf	Oled_ConstText@buffer+1
  6647  1F20  01AB               	clrf	Oled_ConstText@seg
  6648  1F21  01AC               	clrf	Oled_ConstText@pag
  6649  1F22  319F  27D9         	fcall	_Oled_ConstText
  6650  1F24  0008               	return
  6651  1F25                     __end_of_ShowFlightIcon:	
  6652                           
  6653                           	psect	text25
  6654  1000                     __ptext25:	
  6655 ;; *************** function _Oled_FillScreen *****************
  6656 ;; Defined at:
  6657 ;;		line 71 in file "oled.h"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  pattern         1    wreg     unsigned char 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;  pattern         1    9[COMMON] unsigned char 
  6662 ;;  i               1   11[COMMON] unsigned char 
  6663 ;;  j               1   10[COMMON] unsigned char 
  6664 ;; Return value:  Size  Location     Type
  6665 ;;                  1    wreg      void 
  6666 ;; Registers used:
  6667 ;;		wreg, status,2, status,0, pclath, cstack
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6674 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6675 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6676 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6677 ;;Total ram usage:        4 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; Hardware stack levels required when called:    3
  6680 ;; This function calls:
  6681 ;;		_Oled_SetPointer
  6682 ;;		_Oled_WriteRam
  6683 ;; This function is called by:
  6684 ;;		_Oled_Init
  6685 ;;		_main
  6686 ;;		_SettingMenu
  6687 ;;		_Reset
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           
  6692                           ;psect for function _Oled_FillScreen
  6693  1000                     _Oled_FillScreen:	
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _Oled_FillScreen: [wreg+status,2+status,0+pclath+cstack]
  6697                           ;Oled_FillScreen@pattern stored from wreg
  6698  1000  00F9               	movwf	Oled_FillScreen@pattern
  6699                           
  6700                           ;oled.h: 72: unsigned char i,j;
  6701                           ;oled.h: 73: for(i = 0; i < 8; i++){
  6702  1001  01FB               	clrf	Oled_FillScreen@i
  6703  1002                     L3:	
  6704  1002  3008               	movlw	8
  6705  1003  027B               	subwf	Oled_FillScreen@i,w
  6706  1004  1803               	btfsc	3,0
  6707  1005  0008               	return
  6708                           
  6709                           ;oled.h: 74: Oled_SetPointer(0, i);
  6710  1006  087B               	movf	Oled_FillScreen@i,w
  6711  1007  00F8               	movwf	??_Oled_FillScreen
  6712  1008  0878               	movf	??_Oled_FillScreen,w
  6713  1009  00F2               	movwf	Oled_SetPointer@pag
  6714  100A  3000               	movlw	0
  6715  100B  3190  20EC  3190   	fcall	_Oled_SetPointer
  6716                           
  6717                           ;oled.h: 75: for(j = 0; j < 128; j++){
  6718  100E  01FA               	clrf	Oled_FillScreen@j
  6719  100F  3080               	movlw	128
  6720  1010  027A               	subwf	Oled_FillScreen@j,w
  6721  1011  1803               	btfsc	3,0
  6722  1012  281F               	goto	l4864
  6723  1013                     l4858:	
  6724                           
  6725                           ;oled.h: 76: Oled_WriteRam(pattern);
  6726  1013  0879               	movf	Oled_FillScreen@pattern,w
  6727  1014  319D  250B  3190   	fcall	_Oled_WriteRam
  6728  1017  3001               	movlw	1
  6729  1018  00F8               	movwf	??_Oled_FillScreen
  6730  1019  0878               	movf	??_Oled_FillScreen,w
  6731  101A  07FA               	addwf	Oled_FillScreen@j,f
  6732  101B  3080               	movlw	128
  6733  101C  027A               	subwf	Oled_FillScreen@j,w
  6734  101D  1C03               	skipc
  6735  101E  2813               	goto	l4858
  6736  101F                     l4864:	
  6737  101F  3001               	movlw	1
  6738  1020  00F8               	movwf	??_Oled_FillScreen
  6739  1021  0878               	movf	??_Oled_FillScreen,w
  6740  1022  07FB               	addwf	Oled_FillScreen@i,f
  6741  1023  2802               	goto	L3
  6742  1024                     __end_of_Oled_FillScreen:	
  6743                           
  6744                           	psect	text26
  6745  0095                     __ptext26:	
  6746 ;; *************** function _ReadLastSMS *****************
  6747 ;; Defined at:
  6748 ;;		line 101 in file "gsm.h"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;  phoneNbr        2   27[BANK0 ] PTR unsigned char 
  6753 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
  6754 ;;		 -> NULL(0), CheckSimCard@result(11), 
  6755 ;; Return value:  Size  Location     Type
  6756 ;;                  2   23[BANK0 ] PTR unsigned char 
  6757 ;; Registers used:
  6758 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6759 ;; Tracked objects:
  6760 ;;		On entry : 0/0
  6761 ;;		On exit  : 0/0
  6762 ;;		Unchanged: 0/0
  6763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6765 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6766 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6767 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6768 ;;Total ram usage:        5 bytes
  6769 ;; Hardware stack levels used:    1
  6770 ;; Hardware stack levels required when called:    6
  6771 ;; This function calls:
  6772 ;;		_SendUartCmd
  6773 ;;		_ShowMessage
  6774 ;;		_ShowNumber
  6775 ;;		_UART_Read_Text
  6776 ;;		___delay_sec
  6777 ;;		_strlen
  6778 ;;		_strtok
  6779 ;; This function is called by:
  6780 ;;		_SettingMenu
  6781 ;; This function uses a non-reentrant model
  6782 ;;
  6783                           
  6784                           
  6785                           ;psect for function _ReadLastSMS
  6786  0095                     _ReadLastSMS:	
  6787                           
  6788                           ;gsm.h: 102: char * phoneNbr;
  6789                           ;gsm.h: 103: SendUartCmd("AT+CMGL=\"REC UNREAD\",0\n");
  6790                           
  6791                           ;incstack = 0
  6792                           ; Regs used in _ReadLastSMS: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6793  0095  308A               	movlw	low (STR_31| (0+32768))
  6794  0096  00F6               	movwf	SendUartCmd@cmd
  6795  0097  308D               	movlw	high (STR_31| (0+32768))
  6796  0098  00F7               	movwf	SendUartCmd@cmd+1
  6797  0099  319C  24DB  3180   	fcall	_SendUartCmd
  6798                           
  6799                           ;gsm.h: 104: UART_Read_Text(result3, sizeof(result3)/sizeof(char));
  6800  009C  30A0               	movlw	low _result3
  6801  009D  00F0               	movwf	UART_Read_Text@Output
  6802  009E  3001               	movlw	high _result3
  6803  009F  00F1               	movwf	UART_Read_Text@Output+1
  6804  00A0  3043               	movlw	67
  6805  00A1  00F2               	movwf	UART_Read_Text@length
  6806  00A2  3000               	movlw	0
  6807  00A3  00F3               	movwf	UART_Read_Text@length+1
  6808  00A4  3192  22E4  3180   	fcall	_UART_Read_Text
  6809                           
  6810                           ;gsm.h: 105: strtok (result3," ,");
  6811  00A7  30A0               	movlw	low _result3
  6812  00A8  0020               	movlb	0	; select bank0
  6813  00A9  00A2               	movwf	strtok@s1
  6814  00AA  3001               	movlw	high _result3
  6815  00AB  00A3               	movwf	strtok@s1+1
  6816  00AC  30FE               	movlw	low (STR_3| (0+32768))
  6817  00AD  00A4               	movwf	strtok@s2
  6818  00AE  308E               	movlw	high (STR_3| (0+32768))
  6819  00AF  00A5               	movwf	strtok@s2+1
  6820  00B0  3193  237A  3180   	fcall	_strtok
  6821                           
  6822                           ;gsm.h: 106: strtok ((0),",");
  6823  00B3  3000               	movlw	0
  6824  00B4  0020               	movlb	0	; select bank0
  6825  00B5  00A2               	movwf	strtok@s1
  6826  00B6  3000               	movlw	0
  6827  00B7  00A3               	movwf	strtok@s1+1
  6828  00B8  30FF               	movlw	low ((STR_3+1)| (0+32768))
  6829  00B9  00A4               	movwf	strtok@s2
  6830  00BA  308E               	movlw	high ((STR_3+1)| (0+32768))
  6831  00BB  00A5               	movwf	strtok@s2+1
  6832  00BC  3193  237A  3180   	fcall	_strtok
  6833                           
  6834                           ;gsm.h: 107: strtok ((0),",");
  6835  00BF  3000               	movlw	0
  6836  00C0  0020               	movlb	0	; select bank0
  6837  00C1  00A2               	movwf	strtok@s1
  6838  00C2  3000               	movlw	0
  6839  00C3  00A3               	movwf	strtok@s1+1
  6840  00C4  30FF               	movlw	low ((STR_3+1)| (0+32768))
  6841  00C5  00A4               	movwf	strtok@s2
  6842  00C6  308E               	movlw	high ((STR_3+1)| (0+32768))
  6843  00C7  00A5               	movwf	strtok@s2+1
  6844  00C8  3193  237A  3180   	fcall	_strtok
  6845                           
  6846                           ;gsm.h: 108: strtok ((0),",");
  6847  00CB  3000               	movlw	0
  6848  00CC  0020               	movlb	0	; select bank0
  6849  00CD  00A2               	movwf	strtok@s1
  6850  00CE  3000               	movlw	0
  6851  00CF  00A3               	movwf	strtok@s1+1
  6852  00D0  30FF               	movlw	low ((STR_3+1)| (0+32768))
  6853  00D1  00A4               	movwf	strtok@s2
  6854  00D2  308E               	movlw	high ((STR_3+1)| (0+32768))
  6855  00D3  00A5               	movwf	strtok@s2+1
  6856  00D4  3193  237A  3180   	fcall	_strtok
  6857                           
  6858                           ;gsm.h: 109: phoneNbr = strtok ((0),",");
  6859  00D7  3000               	movlw	0
  6860  00D8  0020               	movlb	0	; select bank0
  6861  00D9  00A2               	movwf	strtok@s1
  6862  00DA  3000               	movlw	0
  6863  00DB  00A3               	movwf	strtok@s1+1
  6864  00DC  30FF               	movlw	low ((STR_3+1)| (0+32768))
  6865  00DD  00A4               	movwf	strtok@s2
  6866  00DE  308E               	movlw	high ((STR_3+1)| (0+32768))
  6867  00DF  00A5               	movwf	strtok@s2+1
  6868  00E0  3193  237A  3180   	fcall	_strtok
  6869  00E3  0020               	movlb	0	; select bank0
  6870  00E4  0823               	movf	?_strtok+1,w
  6871  00E5  00BC               	movwf	ReadLastSMS@phoneNbr+1
  6872  00E6  0822               	movf	?_strtok,w
  6873  00E7  00BB               	movwf	ReadLastSMS@phoneNbr
  6874                           
  6875                           ;gsm.h: 110: if(strlen(phoneNbr) == 0) {
  6876  00E8  083C               	movf	ReadLastSMS@phoneNbr+1,w
  6877  00E9  00F1               	movwf	strlen@s+1
  6878  00EA  083B               	movf	ReadLastSMS@phoneNbr,w
  6879  00EB  00F0               	movwf	strlen@s
  6880  00EC  319E  26C6  3180   	fcall	_strlen
  6881  00EF  0870               	movf	?_strlen,w
  6882  00F0  0471               	iorwf	?_strlen+1,w
  6883  00F1  1D03               	btfss	3,2
  6884  00F2  290B               	goto	l5130
  6885                           
  6886                           ;gsm.h: 111: ShowMessage("NO@SMS", 2);
  6887  00F3  30C4               	movlw	low (STR_37| (0+32768))
  6888  00F4  0020               	movlb	0	; select bank0
  6889  00F5  00B0               	movwf	ShowMessage@message
  6890  00F6  308E               	movlw	high (STR_37| (0+32768))
  6891  00F7  00B1               	movwf	ShowMessage@message+1
  6892  00F8  3002               	movlw	2
  6893  00F9  00B8               	movwf	??_ReadLastSMS
  6894  00FA  0838               	movf	??_ReadLastSMS,w
  6895  00FB  00B2               	movwf	ShowMessage@page
  6896  00FC  319F  278E  3180   	fcall	_ShowMessage
  6897                           
  6898                           ;gsm.h: 112: __delay_sec(3);
  6899  00FF  3003               	movlw	3
  6900  0100  00F0               	movwf	___delay_sec@n
  6901  0101  3000               	movlw	0
  6902  0102  00F1               	movwf	___delay_sec@n+1
  6903  0103  319D  25D9         	fcall	___delay_sec
  6904                           
  6905                           ;gsm.h: 113: return "";
  6906  0105  30D3               	movlw	low ((STR_42+13)| (0+32768))
  6907  0106  0020               	movlb	0	; select bank0
  6908  0107  00B7               	movwf	?_ReadLastSMS
  6909  0108  308D               	movlw	high ((STR_42+13)| (0+32768))
  6910  0109  00B8               	movwf	?_ReadLastSMS+1
  6911  010A  0008               	return
  6912  010B                     l5130:	
  6913                           
  6914                           ;gsm.h: 114: }
  6915                           ;gsm.h: 116: ShowMessage("SAVE@PHONE?", 0);
  6916  010B  3006               	movlw	low (STR_39| (0+32768))
  6917  010C  0020               	movlb	0	; select bank0
  6918  010D  00B0               	movwf	ShowMessage@message
  6919  010E  308E               	movlw	high (STR_39| (0+32768))
  6920  010F  00B1               	movwf	ShowMessage@message+1
  6921  0110  01B2               	clrf	ShowMessage@page
  6922  0111  319F  278E  3180   	fcall	_ShowMessage
  6923                           
  6924                           ;gsm.h: 117: if(phoneNbr[1]=='+')
  6925  0114  0020               	movlb	0	; select bank0
  6926  0115  083B               	movf	ReadLastSMS@phoneNbr,w
  6927  0116  0086               	movwf	6
  6928  0117  083C               	movf	ReadLastSMS@phoneNbr+1,w
  6929  0118  0087               	movwf	7
  6930  0119  3141               	addfsr 1,1
  6931  011A  302B               	movlw	43
  6932  011B  0601               	xorwf	1,w
  6933  011C  1D03               	btfss	3,2
  6934  011D  292D               	goto	l5136
  6935                           
  6936                           ;gsm.h: 118: ShowNumber(phoneNbr+2, 0, 3);
  6937  011E  083B               	movf	ReadLastSMS@phoneNbr,w
  6938  011F  3E02               	addlw	2
  6939  0120  00B8               	movwf	??_ReadLastSMS
  6940  0121  3000               	movlw	0
  6941  0122  3D3C               	addwfc	ReadLastSMS@phoneNbr+1,w
  6942  0123  00B9               	movwf	??_ReadLastSMS+1
  6943  0124  0838               	movf	??_ReadLastSMS,w
  6944  0125  00B0               	movwf	ShowNumber@number
  6945  0126  0839               	movf	??_ReadLastSMS+1,w
  6946  0127  00B1               	movwf	ShowNumber@number+1
  6947  0128  01B2               	clrf	ShowNumber@seg
  6948  0129  3003               	movlw	3
  6949  012A  00BA               	movwf	??_ReadLastSMS+2
  6950  012B  083A               	movf	??_ReadLastSMS+2,w
  6951  012C  2936               	goto	L4
  6952  012D                     l5136:	
  6953                           
  6954                           ;gsm.h: 119: else ShowNumber(phoneNbr, 0, 3);
  6955  012D  0020               	movlb	0	; select bank0
  6956  012E  083C               	movf	ReadLastSMS@phoneNbr+1,w
  6957  012F  00B1               	movwf	ShowNumber@number+1
  6958  0130  083B               	movf	ReadLastSMS@phoneNbr,w
  6959  0131  00B0               	movwf	ShowNumber@number
  6960  0132  01B2               	clrf	ShowNumber@seg
  6961  0133  3003               	movlw	3
  6962  0134  00B8               	movwf	??_ReadLastSMS
  6963  0135  0838               	movf	??_ReadLastSMS,w
  6964  0136                     L4:	
  6965  0136  00B3               	movwf	ShowNumber@page
  6966  0137  3190  209B         	fcall	_ShowNumber
  6967                           
  6968                           ;gsm.h: 120: return phoneNbr;
  6969  0139  0020               	movlb	0	; select bank0
  6970  013A  083C               	movf	ReadLastSMS@phoneNbr+1,w
  6971  013B  00B8               	movwf	?_ReadLastSMS+1
  6972  013C  083B               	movf	ReadLastSMS@phoneNbr,w
  6973  013D  00B7               	movwf	?_ReadLastSMS
  6974  013E  0008               	return
  6975  013F                     __end_of_ReadLastSMS:	
  6976                           
  6977                           	psect	text27
  6978  1EC6                     __ptext27:	
  6979 ;; *************** function _strlen *****************
  6980 ;; Defined at:
  6981 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strlen.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  s               2    0[COMMON] PTR const unsigned char 
  6984 ;;		 -> ReadPhoneNumber@result1(50), STR_38(1), result3(67), CheckNetwork@res(20), 
  6985 ;;		 -> CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
  6986 ;; Auto vars:     Size  Location     Type
  6987 ;;  cp              2    4[COMMON] PTR const unsigned char 
  6988 ;;		 -> ReadPhoneNumber@result1(50), STR_38(1), result3(67), CheckNetwork@res(20), 
  6989 ;;		 -> CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  2    0[COMMON] unsigned int 
  6992 ;; Registers used:
  6993 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7002 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7003 ;;Total ram usage:        6 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; This function calls:
  7006 ;;		Nothing
  7007 ;; This function is called by:
  7008 ;;		_ReadLastSMS
  7009 ;;		_ReadPhoneNumber
  7010 ;;		_SettingMenu
  7011 ;; This function uses a non-reentrant model
  7012 ;;
  7013                           
  7014                           
  7015                           ;psect for function _strlen
  7016  1EC6                     _strlen:	
  7017                           
  7018                           ;incstack = 0
  7019                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  7020  1EC6  0871               	movf	strlen@s+1,w
  7021  1EC7  00F5               	movwf	strlen@cp+1
  7022  1EC8  0870               	movf	strlen@s,w
  7023  1EC9  00F4               	movwf	strlen@cp
  7024  1ECA                     l4908:	
  7025  1ECA  0874               	movf	strlen@cp,w
  7026  1ECB  0084               	movwf	4
  7027  1ECC  0875               	movf	strlen@cp+1,w
  7028  1ECD  0085               	movwf	5
  7029  1ECE  0012               	moviw fsr0++
  7030  1ECF  1903               	btfsc	3,2
  7031  1ED0  2ED6               	goto	l4910
  7032  1ED1  3001               	movlw	1
  7033  1ED2  07F4               	addwf	strlen@cp,f
  7034  1ED3  3000               	movlw	0
  7035  1ED4  3DF5               	addwfc	strlen@cp+1,f
  7036  1ED5  2ECA               	goto	l4908
  7037  1ED6                     l4910:	
  7038  1ED6  0970               	comf	strlen@s,w
  7039  1ED7  00F2               	movwf	??_strlen
  7040  1ED8  0971               	comf	strlen@s+1,w
  7041  1ED9  00F3               	movwf	??_strlen+1
  7042  1EDA  0AF2               	incf	??_strlen,f
  7043  1EDB  1903               	skipnz
  7044  1EDC  0AF3               	incf	??_strlen+1,f
  7045  1EDD  0874               	movf	strlen@cp,w
  7046  1EDE  0772               	addwf	??_strlen,w
  7047  1EDF  00F0               	movwf	?_strlen
  7048  1EE0  0875               	movf	strlen@cp+1,w
  7049  1EE1  3D73               	addwfc	??_strlen+1,w
  7050  1EE2  00F1               	movwf	?_strlen+1
  7051  1EE3  0008               	return
  7052  1EE4                     __end_of_strlen:	
  7053                           
  7054                           	psect	text28
  7055  109B                     __ptext28:	
  7056 ;; *************** function _ShowNumber *****************
  7057 ;; Defined at:
  7058 ;;		line 186 in file "gsm.h"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  number          2   16[BANK0 ] PTR const unsigned char 
  7061 ;;		 -> buffer(20), ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), 
  7062 ;;		 -> CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
  7063 ;;  seg             1   18[BANK0 ] unsigned char 
  7064 ;;  page            1   19[BANK0 ] unsigned char 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;		None
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  1    wreg      void 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7076 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7078 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7079 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7080 ;;Total ram usage:        8 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    5
  7083 ;; This function calls:
  7084 ;;		_Oled_ConstText
  7085 ;;		_Oled_SetFont
  7086 ;; This function is called by:
  7087 ;;		_ReadLastSMS
  7088 ;;		_SetAlarmOn
  7089 ;; This function uses a non-reentrant model
  7090 ;;
  7091                           
  7092                           
  7093                           ;psect for function _ShowNumber
  7094  109B                     _ShowNumber:	
  7095                           
  7096                           ;gsm.h: 187: Oled_SetFont(Numeric12x16, 12, 16, 47, 57);
  7097                           
  7098                           ;incstack = 0
  7099                           ; Regs used in _ShowNumber: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7100  109B  30B2               	movlw	low (_Numeric12x16| (0+32768))
  7101  109C  0020               	movlb	0	; select bank0
  7102  109D  00A0               	movwf	Oled_SetFont@_font
  7103  109E  308A               	movlw	high (_Numeric12x16| (0+32768))
  7104  109F  00A1               	movwf	Oled_SetFont@_font+1
  7105  10A0  300C               	movlw	12
  7106  10A1  00B4               	movwf	??_ShowNumber
  7107  10A2  0834               	movf	??_ShowNumber,w
  7108  10A3  00A2               	movwf	Oled_SetFont@_width
  7109  10A4  3010               	movlw	16
  7110  10A5  00B5               	movwf	??_ShowNumber+1
  7111  10A6  0835               	movf	??_ShowNumber+1,w
  7112  10A7  00A3               	movwf	Oled_SetFont@_height
  7113  10A8  302F               	movlw	47
  7114  10A9  00B6               	movwf	??_ShowNumber+2
  7115  10AA  0836               	movf	??_ShowNumber+2,w
  7116  10AB  00A4               	movwf	Oled_SetFont@_min
  7117  10AC  3039               	movlw	57
  7118  10AD  00B7               	movwf	??_ShowNumber+3
  7119  10AE  0837               	movf	??_ShowNumber+3,w
  7120  10AF  00A5               	movwf	Oled_SetFont@_max
  7121  10B0  3190  204B  3190   	fcall	_Oled_SetFont
  7122                           
  7123                           ;gsm.h: 188: Oled_ConstText(number, seg, page);
  7124  10B3  0020               	movlb	0	; select bank0
  7125  10B4  0831               	movf	ShowNumber@number+1,w
  7126  10B5  00AA               	movwf	Oled_ConstText@buffer+1
  7127  10B6  0830               	movf	ShowNumber@number,w
  7128  10B7  00A9               	movwf	Oled_ConstText@buffer
  7129  10B8  0832               	movf	ShowNumber@seg,w
  7130  10B9  00B4               	movwf	??_ShowNumber
  7131  10BA  0834               	movf	??_ShowNumber,w
  7132  10BB  00AB               	movwf	Oled_ConstText@seg
  7133  10BC  0833               	movf	ShowNumber@page,w
  7134  10BD  00B5               	movwf	??_ShowNumber+1
  7135  10BE  0835               	movf	??_ShowNumber+1,w
  7136  10BF  00AC               	movwf	Oled_ConstText@pag
  7137  10C0  319F  27D9         	fcall	_Oled_ConstText
  7138  10C2  0008               	return
  7139  10C3                     __end_of_ShowNumber:	
  7140                           
  7141                           	psect	text29
  7142  1766                     __ptext29:	
  7143 ;; *************** function _RFID_Ok *****************
  7144 ;; Defined at:
  7145 ;;		line 460 in file "rc522.h"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;		None
  7148 ;; Auto vars:     Size  Location     Type
  7149 ;;  i               2   43[BANK0 ] int 
  7150 ;;  badgeSerialN   11   32[BANK0 ] unsigned char [11]
  7151 ;;  buffer          1   45[BANK0 ] unsigned char [1]
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      unsigned char 
  7154 ;; Registers used:
  7155 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7162 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7164 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7165 ;;Total ram usage:       16 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    6
  7168 ;; This function calls:
  7169 ;;		_Bip
  7170 ;;		_MFRC522_ReadCardSerial
  7171 ;;		_MFRC522_isCard
  7172 ;;		_ShowMessage
  7173 ;;		___delay_sec
  7174 ;;		_sprintf
  7175 ;;		_strcat
  7176 ;;		_strcmp
  7177 ;; This function is called by:
  7178 ;;		_CheckSW2
  7179 ;; This function uses a non-reentrant model
  7180 ;;
  7181                           
  7182                           
  7183                           ;psect for function _RFID_Ok
  7184  1766                     _RFID_Ok:	
  7185                           
  7186                           ;rc522.h: 461: if(MFRC522_isCard(&TagType)){
  7187                           
  7188                           ;incstack = 0
  7189                           ; Regs used in _RFID_Ok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7190  1766  30EC               	movlw	(low (_TagType| 0))& (0+255)
  7191  1767  319D  2590  3197   	fcall	_MFRC522_isCard
  7192  176A  3A00               	xorlw	0
  7193  176B  1903               	skipnz
  7194  176C  2FFE               	goto	l5492
  7195                           
  7196                           ;rc522.h: 462: if( MFRC522_ReadCardSerial(&UID)){
  7197  176D  303F               	movlw	(low (_UID| (0+256)))& (0+255)
  7198  176E  319D  25F0  3197   	fcall	_MFRC522_ReadCardSerial
  7199  1771  3A00               	xorlw	0
  7200  1772  1903               	skipnz
  7201  1773  2FFC               	goto	l5488
  7202                           
  7203                           ;rc522.h: 463: char buffer [1];
  7204                           ;rc522.h: 464: char badgeSerialNumber [11] = "";
  7205  1774  3020               	movlw	low RFID_Ok@F5666
  7206  1775  0086               	movwf	6
  7207  1776  3001               	movlw	high RFID_Ok@F5666
  7208  1777  0087               	movwf	7
  7209  1778  3040               	movlw	low RFID_Ok@badgeSerialNumber
  7210  1779  0084               	movwf	4
  7211  177A  3000               	movlw	high RFID_Ok@badgeSerialNumber
  7212  177B  0085               	movwf	5
  7213  177C  300B               	movlw	11
  7214  177D  0020               	movlb	0	; select bank0
  7215  177E  00BE               	movwf	??_RFID_Ok
  7216  177F                     u5730:	
  7217  177F  0016               	moviw fsr1++
  7218  1780  001A               	movwi fsr0++
  7219  1781  0BBE               	decfsz	??_RFID_Ok,f
  7220  1782  2F7F               	goto	u5730
  7221                           
  7222                           ;rc522.h: 466: for(int i=0; i < 5; i++){
  7223  1783  01CB               	clrf	RFID_Ok@i
  7224  1784  01CC               	clrf	RFID_Ok@i+1
  7225  1785  084C               	movf	RFID_Ok@i+1,w
  7226  1786  3A80               	xorlw	128
  7227  1787  00BE               	movwf	??_RFID_Ok
  7228  1788  3080               	movlw	128
  7229  1789  023E               	subwf	??_RFID_Ok,w
  7230  178A  1D03               	skipz
  7231  178B  2F8E               	goto	u5745
  7232  178C  3005               	movlw	5
  7233  178D  024B               	subwf	RFID_Ok@i,w
  7234  178E                     u5745:	
  7235  178E  1803               	btfsc	3,0
  7236  178F  2FC3               	goto	l5468
  7237  1790                     l5462:	
  7238                           
  7239                           ;rc522.h: 467: sprintf(buffer,"%X",*(UID+i));
  7240  1790  304D               	movlw	low RFID_Ok@buffer
  7241  1791  0020               	movlb	0	; select bank0
  7242  1792  00A0               	movwf	sprintf@sp
  7243  1793  3000               	movlw	high RFID_Ok@buffer
  7244  1794  00A1               	movwf	sprintf@sp+1
  7245  1795  3001               	movlw	low (STR_55| (0+32768))
  7246  1796  00A2               	movwf	sprintf@f
  7247  1797  308F               	movlw	high (STR_55| (0+32768))
  7248  1798  00A3               	movwf	sprintf@f+1
  7249  1799  084B               	movf	RFID_Ok@i,w
  7250  179A  3E3F               	addlw	(low (_UID| (0+256)))& (0+255)
  7251  179B  0086               	movwf	6
  7252  179C  3001               	movlw	1	; select bank2/3
  7253  179D  0087               	movwf	7
  7254  179E  0801               	movf	1,w
  7255  179F  00BE               	movwf	??_RFID_Ok
  7256  17A0  01BF               	clrf	??_RFID_Ok+1
  7257  17A1  083E               	movf	??_RFID_Ok,w
  7258  17A2  00A4               	movwf	?_sprintf+4
  7259  17A3  083F               	movf	??_RFID_Ok+1,w
  7260  17A4  00A5               	movwf	?_sprintf+5
  7261  17A5  3185  25E8  3197   	fcall	_sprintf
  7262                           
  7263                           ;rc522.h: 468: strcat(badgeSerialNumber,buffer);
  7264  17A8  3040               	movlw	low RFID_Ok@badgeSerialNumber
  7265  17A9  00F0               	movwf	strcat@to
  7266  17AA  3000               	movlw	high RFID_Ok@badgeSerialNumber
  7267  17AB  00F1               	movwf	strcat@to+1
  7268  17AC  304D               	movlw	low RFID_Ok@buffer
  7269  17AD  00F2               	movwf	strcat@from
  7270  17AE  3000               	movlw	high RFID_Ok@buffer
  7271  17AF  00F3               	movwf	strcat@from+1
  7272  17B0  319F  27B3  3197   	fcall	_strcat
  7273  17B3  3001               	movlw	1
  7274  17B4  0020               	movlb	0	; select bank0
  7275  17B5  07CB               	addwf	RFID_Ok@i,f
  7276  17B6  3000               	movlw	0
  7277  17B7  3DCC               	addwfc	RFID_Ok@i+1,f
  7278  17B8  084C               	movf	RFID_Ok@i+1,w
  7279  17B9  3A80               	xorlw	128
  7280  17BA  00BE               	movwf	??_RFID_Ok
  7281  17BB  3080               	movlw	128
  7282  17BC  023E               	subwf	??_RFID_Ok,w
  7283  17BD  1D03               	skipz
  7284  17BE  2FC1               	goto	u5755
  7285  17BF  3005               	movlw	5
  7286  17C0  024B               	subwf	RFID_Ok@i,w
  7287  17C1                     u5755:	
  7288  17C1  1C03               	skipc
  7289  17C2  2F90               	goto	l5462
  7290  17C3                     l5468:	
  7291                           
  7292                           ;rc522.h: 469: }
  7293                           ;rc522.h: 471: Bip(1,100);
  7294  17C3  3001               	movlw	1
  7295  17C4  00F0               	movwf	Bip@n
  7296  17C5  3000               	movlw	0
  7297  17C6  00F1               	movwf	Bip@n+1
  7298  17C7  3064               	movlw	100
  7299  17C8  00F2               	movwf	Bip@t
  7300  17C9  3000               	movlw	0
  7301  17CA  00F3               	movwf	Bip@t+1
  7302  17CB  3192  22A6  3197   	fcall	_Bip
  7303                           
  7304                           ;rc522.h: 472: if(strcmp(badgeSerialNumber, "A0BA7D593E") == 0)
  7305  17CE  306A               	movlw	low (STR_1| (0+32768))
  7306  17CF  00F0               	movwf	strcmp@s2
  7307  17D0  308E               	movlw	high (STR_1| (0+32768))
  7308  17D1  00F1               	movwf	strcmp@s2+1
  7309  17D2  3040               	movlw	(low (RFID_Ok@badgeSerialNumber| 0))& (0+255)
  7310  17D3  3190  2024  3197   	fcall	_strcmp
  7311  17D6  0870               	movf	?_strcmp,w
  7312  17D7  0471               	iorwf	?_strcmp+1,w
  7313  17D8  1D03               	btfss	3,2
  7314  17D9  2FDC               	goto	l5478
  7315                           
  7316                           ;rc522.h: 473: {
  7317                           ;rc522.h: 474: return 1;
  7318  17DA  3001               	movlw	1
  7319  17DB  0008               	return
  7320  17DC                     l5478:	
  7321                           ;rc522.h: 475: }
  7322                           
  7323                           
  7324                           ;rc522.h: 476: else{
  7325                           ;rc522.h: 477: ShowMessage("ERROR", 6);
  7326  17DC  30EF               	movlw	low (STR_57| (0+32768))
  7327  17DD  0020               	movlb	0	; select bank0
  7328  17DE  00B0               	movwf	ShowMessage@message
  7329  17DF  308E               	movlw	high (STR_57| (0+32768))
  7330  17E0  00B1               	movwf	ShowMessage@message+1
  7331  17E1  3006               	movlw	6
  7332  17E2  00BE               	movwf	??_RFID_Ok
  7333  17E3  083E               	movf	??_RFID_Ok,w
  7334  17E4  00B2               	movwf	ShowMessage@page
  7335  17E5  319F  278E  3197   	fcall	_ShowMessage
  7336                           
  7337                           ;rc522.h: 478: __delay_sec(2);
  7338  17E8  3002               	movlw	2
  7339  17E9  00F0               	movwf	___delay_sec@n
  7340  17EA  3000               	movlw	0
  7341  17EB  00F1               	movwf	___delay_sec@n+1
  7342  17EC  319D  25D9  3197   	fcall	___delay_sec
  7343                           
  7344                           ;rc522.h: 479: ShowMessage("@@@@@", 6);
  7345  17EF  3096               	movlw	low ((STR_17+3)| (0+32768))
  7346  17F0  0020               	movlb	0	; select bank0
  7347  17F1  00B0               	movwf	ShowMessage@message
  7348  17F2  308E               	movlw	high ((STR_17+3)| (0+32768))
  7349  17F3  00B1               	movwf	ShowMessage@message+1
  7350  17F4  3006               	movlw	6
  7351  17F5  00BE               	movwf	??_RFID_Ok
  7352  17F6  083E               	movf	??_RFID_Ok,w
  7353  17F7  00B2               	movwf	ShowMessage@page
  7354  17F8  319F  278E         	fcall	_ShowMessage
  7355                           
  7356                           ;rc522.h: 480: return 0;
  7357  17FA  3000               	movlw	0
  7358  17FB  0008               	return
  7359  17FC                     l5488:	
  7360                           
  7361                           ;rc522.h: 481: }
  7362                           ;rc522.h: 482: }
  7363                           ;rc522.h: 483: return 0;
  7364  17FC  3000               	movlw	0
  7365  17FD  0008               	return
  7366  17FE                     l5492:	
  7367                           
  7368                           ;rc522.h: 484: }
  7369                           ;rc522.h: 485: return 0;
  7370  17FE  3000               	movlw	0
  7371  17FF  0008               	return
  7372  1800                     __end_of_RFID_Ok:	
  7373                           
  7374                           	psect	text30
  7375  1024                     __ptext30:	
  7376 ;; *************** function _strcmp *****************
  7377 ;; Defined at:
  7378 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcmp.c"
  7379 ;; Parameters:    Size  Location     Type
  7380 ;;  s1              1    wreg     PTR const unsigned char 
  7381 ;;		 -> RFID_Ok@badgeSerialNumber(11), 
  7382 ;;  s2              2    0[COMMON] PTR const unsigned char 
  7383 ;;		 -> STR_56(11), 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;  s1              1    4[COMMON] PTR const unsigned char 
  7386 ;;		 -> RFID_Ok@badgeSerialNumber(11), 
  7387 ;;  r               1    3[COMMON] char 
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  2    0[COMMON] int 
  7390 ;; Registers used:
  7391 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7399 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7400 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7401 ;;Total ram usage:        5 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_RFID_Ok
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           
  7411                           ;psect for function _strcmp
  7412  1024                     _strcmp:	
  7413                           
  7414                           ;incstack = 0
  7415                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
  7416                           ;strcmp@s1 stored from wreg
  7417  1024  00F4               	movwf	strcmp@s1
  7418  1025  282E               	goto	l5314
  7419  1026                     l5312:	
  7420  1026  3001               	movlw	1
  7421  1027  00F2               	movwf	??_strcmp
  7422  1028  0872               	movf	??_strcmp,w
  7423  1029  07F4               	addwf	strcmp@s1,f
  7424  102A  3001               	movlw	1
  7425  102B  07F0               	addwf	strcmp@s2,f
  7426  102C  3000               	movlw	0
  7427  102D  3DF1               	addwfc	strcmp@s2+1,f
  7428  102E                     l5314:	
  7429  102E  0874               	movf	strcmp@s1,w
  7430  102F  0086               	movwf	6
  7431  1030  0187               	clrf	7
  7432  1031  0870               	movf	strcmp@s2,w
  7433  1032  0084               	movwf	4
  7434  1033  0871               	movf	strcmp@s2+1,w
  7435  1034  0085               	movwf	5
  7436  1035  0800               	movf	0,w	;code access
  7437  1036  3AFF               	xorlw	255
  7438  1037  3E01               	addlw	1
  7439  1038  0701               	addwf	1,w
  7440  1039  00F2               	movwf	??_strcmp
  7441  103A  0872               	movf	??_strcmp,w
  7442  103B  00F3               	movwf	strcmp@r
  7443  103C  0873               	movf	strcmp@r,w
  7444  103D  1D03               	btfss	3,2
  7445  103E  2845               	goto	l5318
  7446  103F  0874               	movf	strcmp@s1,w
  7447  1040  0086               	movwf	6
  7448  1041  0187               	clrf	7
  7449  1042  0801               	movf	1,w
  7450  1043  1D03               	btfss	3,2
  7451  1044  2826               	goto	l5312
  7452  1045                     l5318:	
  7453  1045  0873               	movf	strcmp@r,w
  7454  1046  00F0               	movwf	?_strcmp
  7455  1047  01F1               	clrf	?_strcmp+1
  7456  1048  1BF0               	btfsc	?_strcmp,7
  7457  1049  03F1               	decf	?_strcmp+1,f
  7458  104A  0008               	return
  7459  104B                     __end_of_strcmp:	
  7460                           
  7461                           	psect	text31
  7462  05E8                     __ptext31:	
  7463 ;; *************** function _sprintf *****************
  7464 ;; Defined at:
  7465 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  7466 ;; Parameters:    Size  Location     Type
  7467 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  7468 ;;		 -> buffer(20), RFID_Ok@buffer(1), 
  7469 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  7470 ;;		 -> STR_81(5), STR_55(3), 
  7471 ;; Auto vars:     Size  Location     Type
  7472 ;;  idx             1   10[BANK0 ] unsigned char 
  7473 ;;  tmpval          4    0        struct .
  7474 ;;  width           2   16[BANK0 ] int 
  7475 ;;  val             2   13[BANK0 ] unsigned int 
  7476 ;;  cp              2    0        PTR const unsigned char 
  7477 ;;  len             2    0        unsigned int 
  7478 ;;  c               1   18[BANK0 ] char 
  7479 ;;  flag            1   15[BANK0 ] unsigned char 
  7480 ;;  prec            1   12[BANK0 ] char 
  7481 ;;  ap              1   11[BANK0 ] PTR void [1]
  7482 ;;		 -> ?_sprintf(2), 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;                  2    0[BANK0 ] int 
  7485 ;; Registers used:
  7486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7487 ;; Tracked objects:
  7488 ;;		On entry : 0/0
  7489 ;;		On exit  : 0/0
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7492 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7493 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7494 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7495 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7496 ;;Total ram usage:       19 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    1
  7499 ;; This function calls:
  7500 ;;		___lwdiv
  7501 ;;		___lwmod
  7502 ;;		___wmul
  7503 ;;		_isdigit
  7504 ;; This function is called by:
  7505 ;;		_RFID_Ok
  7506 ;;		_SetAlarmOn
  7507 ;; This function uses a non-reentrant model
  7508 ;;
  7509                           
  7510                           
  7511                           ;psect for function _sprintf
  7512  05E8                     _sprintf:	
  7513                           
  7514                           ;doprnt.c: 494: va_list ap;
  7515                           ;doprnt.c: 499: signed char c;
  7516                           ;doprnt.c: 501: int width;
  7517                           ;doprnt.c: 506: signed char prec;
  7518                           ;doprnt.c: 508: unsigned char flag;
  7519                           ;doprnt.c: 523: union {
  7520                           ;doprnt.c: 524: unsigned long vd;
  7521                           ;doprnt.c: 525: double integ;
  7522                           ;doprnt.c: 526: } tmpval;
  7523                           ;doprnt.c: 528: unsigned int val;
  7524                           ;doprnt.c: 529: unsigned len;
  7525                           ;doprnt.c: 530: const char * cp;
  7526                           ;doprnt.c: 533: *ap = __va_start();
  7527                           
  7528                           ;incstack = 0
  7529                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7530  05E8  3024               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
  7531  05E9  0020               	movlb	0	; select bank0
  7532  05EA  00A6               	movwf	??_sprintf
  7533  05EB  0826               	movf	??_sprintf,w
  7534  05EC  00AB               	movwf	sprintf@ap
  7535  05ED                     l5304:	
  7536                           ;doprnt.c: 536: while(c = *f++) {
  7537                           
  7538  05ED  0823               	movf	sprintf@f+1,w
  7539  05EE  00A7               	movwf	??_sprintf+1
  7540  05EF  0822               	movf	sprintf@f,w
  7541  05F0  00A6               	movwf	??_sprintf
  7542  05F1  0AA2               	incf	sprintf@f,f
  7543  05F2  1903               	skipnz
  7544  05F3  0AA3               	incf	sprintf@f+1,f
  7545  05F4  0826               	movf	??_sprintf,w
  7546  05F5  0084               	movwf	4
  7547  05F6  0827               	movf	??_sprintf+1,w
  7548  05F7  0085               	movwf	5
  7549  05F8  0800               	movf	0,w	;code access
  7550  05F9  00A8               	movwf	??_sprintf+2
  7551  05FA  0828               	movf	??_sprintf+2,w
  7552  05FB  00B2               	movwf	sprintf@c
  7553  05FC  0832               	movf	sprintf@c,w
  7554  05FD  1903               	btfsc	3,2
  7555  05FE  2FD0               	goto	l5306
  7556                           
  7557                           ;doprnt.c: 538: if(c != '%')
  7558  05FF  3025               	movlw	37
  7559  0600  0632               	xorwf	sprintf@c,w
  7560  0601  1903               	btfsc	3,2
  7561  0602  2E0E               	goto	l5184
  7562                           
  7563                           ;doprnt.c: 540: {
  7564                           ;doprnt.c: 541: ((*sp++ = (c)));
  7565  0603  0820               	movf	sprintf@sp,w
  7566  0604  0086               	movwf	6
  7567  0605  0821               	movf	sprintf@sp+1,w
  7568  0606  0087               	movwf	7
  7569  0607  0832               	movf	sprintf@c,w
  7570  0608  0081               	movwf	1
  7571  0609  3001               	movlw	1
  7572  060A  07A0               	addwf	sprintf@sp,f
  7573  060B  3000               	movlw	0
  7574  060C  3DA1               	addwfc	sprintf@sp+1,f
  7575                           
  7576                           ;doprnt.c: 542: continue;
  7577  060D  2DED               	goto	l5304
  7578  060E                     l5184:	
  7579                           
  7580                           ;doprnt.c: 543: }
  7581                           ;doprnt.c: 546: width = 0;
  7582  060E  01B0               	clrf	sprintf@width
  7583  060F  01B1               	clrf	sprintf@width+1
  7584                           
  7585                           ;doprnt.c: 548: flag = 0;
  7586  0610  01AF               	clrf	sprintf@flag
  7587                           
  7588                           ;doprnt.c: 551: switch(*f) {
  7589                           
  7590                           ;doprnt.c: 550: for(;;) {
  7591  0611  2E17               	goto	l5190
  7592  0612                     l663:	
  7593                           ;doprnt.c: 579: case '0':
  7594                           
  7595                           
  7596                           ;doprnt.c: 580: flag |= 0x04;
  7597  0612  152F               	bsf	sprintf@flag,2
  7598                           
  7599                           ;doprnt.c: 581: f++;
  7600  0613  3001               	movlw	1
  7601  0614  07A2               	addwf	sprintf@f,f
  7602  0615  3000               	movlw	0
  7603  0616  3DA3               	addwfc	sprintf@f+1,f
  7604  0617                     l5190:	
  7605                           ;doprnt.c: 584: }
  7606                           
  7607                           ;doprnt.c: 582: continue;
  7608                           
  7609  0617  0822               	movf	sprintf@f,w
  7610  0618  0084               	movwf	4
  7611  0619  0823               	movf	sprintf@f+1,w
  7612  061A  0085               	movwf	5
  7613  061B  0800               	movf	0,w	;code access
  7614                           
  7615                           ; Switch size 1, requested type "space"
  7616                           ; Number of cases is 1, Range of values is 48 to 48
  7617                           ; switch strategies available:
  7618                           ; Name         Instructions Cycles
  7619                           ; simple_byte            4     3 (average)
  7620                           ; direct_byte           11     9 (fixed)
  7621                           ; jumptable            263     9 (fixed)
  7622                           ;	Chosen strategy is simple_byte
  7623  061C  3A30               	xorlw	48	; case 48
  7624  061D  1903               	skipnz
  7625  061E  2E12               	goto	l663
  7626  061F  2E20               	goto	l5192
  7627  0620                     l5192:	
  7628                           ;doprnt.c: 586: }
  7629                           
  7630                           ;doprnt.c: 585: break;
  7631                           
  7632                           
  7633                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  7634  0620  0822               	movf	sprintf@f,w
  7635  0621  0084               	movwf	4
  7636  0622  0823               	movf	sprintf@f+1,w
  7637  0623  0085               	movwf	5
  7638  0624  0800               	movf	0,w	;code access
  7639  0625  319D  2545  3185   	fcall	_isdigit
  7640  0628  1C03               	btfss	3,0
  7641  0629  2E5F               	goto	l5206
  7642                           
  7643                           ;doprnt.c: 598: width = 0;
  7644  062A  0020               	movlb	0	; select bank0
  7645  062B  01B0               	clrf	sprintf@width
  7646  062C  01B1               	clrf	sprintf@width+1
  7647  062D                     l5196:	
  7648                           ;doprnt.c: 599: do {
  7649                           
  7650                           
  7651                           ;doprnt.c: 600: width *= 10;
  7652  062D  300A               	movlw	10
  7653  062E  00F0               	movwf	___wmul@multiplier
  7654  062F  3000               	movlw	0
  7655  0630  00F1               	movwf	___wmul@multiplier+1
  7656  0631  0020               	movlb	0	; select bank0
  7657  0632  0831               	movf	sprintf@width+1,w
  7658  0633  00F3               	movwf	___wmul@multiplicand+1
  7659  0634  0830               	movf	sprintf@width,w
  7660  0635  00F2               	movwf	___wmul@multiplicand
  7661  0636  319E  2654  3185   	fcall	___wmul
  7662  0639  0871               	movf	?___wmul+1,w
  7663  063A  0020               	movlb	0	; select bank0
  7664  063B  00B1               	movwf	sprintf@width+1
  7665  063C  0870               	movf	?___wmul,w
  7666  063D  00B0               	movwf	sprintf@width
  7667                           
  7668                           ;doprnt.c: 601: width += *f++ - '0';
  7669  063E  0822               	movf	sprintf@f,w
  7670  063F  0084               	movwf	4
  7671  0640  0823               	movf	sprintf@f+1,w
  7672  0641  0085               	movwf	5
  7673  0642  0800               	movf	0,w	;code access
  7674  0643  3ED0               	addlw	208
  7675  0644  00A6               	movwf	??_sprintf
  7676  0645  30FF               	movlw	255
  7677  0646  1803               	skipnc
  7678  0647  3000               	movlw	0
  7679  0648  00A7               	movwf	??_sprintf+1
  7680  0649  0826               	movf	??_sprintf,w
  7681  064A  07B0               	addwf	sprintf@width,f
  7682  064B  0827               	movf	??_sprintf+1,w
  7683  064C  3DB1               	addwfc	sprintf@width+1,f
  7684  064D  3001               	movlw	1
  7685  064E  07A2               	addwf	sprintf@f,f
  7686  064F  3000               	movlw	0
  7687  0650  3DA3               	addwfc	sprintf@f+1,f
  7688                           
  7689                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  7690  0651  0822               	movf	sprintf@f,w
  7691  0652  0084               	movwf	4
  7692  0653  0823               	movf	sprintf@f+1,w
  7693  0654  0085               	movwf	5
  7694  0655  0800               	movf	0,w	;code access
  7695  0656  319D  2545  3185   	fcall	_isdigit
  7696  0659  1C03               	btfss	3,0
  7697  065A  2E5F               	goto	l5206
  7698  065B  2E2D               	goto	l5196
  7699  065C                     l677:	
  7700                           ;doprnt.c: 712: case 'X':
  7701                           
  7702                           ;doprnt.c: 698: case 'i':
  7703                           ;doprnt.c: 699: break;
  7704                           
  7705                           ;doprnt.c: 697: case 'd':
  7706                           
  7707                           ;doprnt.c: 638: goto alldone;
  7708                           
  7709                           ;doprnt.c: 637: case 0:
  7710                           
  7711                           ;doprnt.c: 608: }
  7712                           ;doprnt.c: 635: switch(c = *f++) {
  7713                           
  7714                           
  7715                           ;doprnt.c: 718: case 'x':
  7716                           ;doprnt.c: 721: flag |= 0x80;
  7717  065C  0020               	movlb	0	; select bank0
  7718  065D  17AF               	bsf	sprintf@flag,7
  7719                           
  7720                           ;doprnt.c: 723: break;
  7721  065E  2E7D               	goto	l675
  7722  065F                     l5206:	
  7723                           ;doprnt.c: 822: }
  7724                           
  7725                           ;doprnt.c: 813: continue;
  7726                           
  7727                           ;doprnt.c: 802: default:
  7728                           
  7729  065F  0020               	movlb	0	; select bank0
  7730  0660  0823               	movf	sprintf@f+1,w
  7731  0661  00A7               	movwf	??_sprintf+1
  7732  0662  0822               	movf	sprintf@f,w
  7733  0663  00A6               	movwf	??_sprintf
  7734  0664  0AA2               	incf	sprintf@f,f
  7735  0665  1903               	skipnz
  7736  0666  0AA3               	incf	sprintf@f+1,f
  7737  0667  0826               	movf	??_sprintf,w
  7738  0668  0084               	movwf	4
  7739  0669  0827               	movf	??_sprintf+1,w
  7740  066A  0085               	movwf	5
  7741  066B  0800               	movf	0,w	;code access
  7742  066C  00B2               	movwf	sprintf@c
  7743                           
  7744                           ; Switch size 1, requested type "space"
  7745                           ; Number of cases is 5, Range of values is 0 to 120
  7746                           ; switch strategies available:
  7747                           ; Name         Instructions Cycles
  7748                           ; simple_byte           16     9 (average)
  7749                           ; direct_byte          248     6 (fixed)
  7750                           ; jumptable            260     6 (fixed)
  7751                           ;	Chosen strategy is simple_byte
  7752  066D  3A00               	xorlw	0	; case 0
  7753  066E  1903               	skipnz
  7754  066F  2FD0               	goto	l5306
  7755  0670  3A58               	xorlw	88	; case 88
  7756  0671  1903               	skipnz
  7757  0672  2E5C               	goto	l677
  7758  0673  3A3C               	xorlw	60	; case 100
  7759  0674  1903               	skipnz
  7760  0675  2E7D               	goto	l675
  7761  0676  3A0D               	xorlw	13	; case 105
  7762  0677  1903               	skipnz
  7763  0678  2E7D               	goto	l675
  7764  0679  3A11               	xorlw	17	; case 120
  7765  067A  1903               	skipnz
  7766  067B  2E5C               	goto	l677
  7767  067C  2DED               	goto	l5304
  7768  067D                     l675:	
  7769                           
  7770                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  7771  067D  0020               	movlb	0	; select bank0
  7772  067E  1BAF               	btfsc	sprintf@flag,7
  7773  067F  2E97               	goto	l5218
  7774                           
  7775                           ;doprnt.c: 1253: {
  7776                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  7777  0680  082B               	movf	sprintf@ap,w
  7778  0681  0086               	movwf	6
  7779  0682  0187               	clrf	7
  7780  0683  3F40               	moviw [0]fsr1
  7781  0684  00AD               	movwf	sprintf@val
  7782  0685  3F41               	moviw [1]fsr1
  7783  0686  00AE               	movwf	sprintf@val+1
  7784  0687  3002               	movlw	2
  7785  0688  00A6               	movwf	??_sprintf
  7786  0689  0826               	movf	??_sprintf,w
  7787  068A  07AB               	addwf	sprintf@ap,f
  7788                           
  7789                           ;doprnt.c: 1261: if((int)val < 0) {
  7790  068B  1FAE               	btfss	sprintf@val+1,7
  7791  068C  2EE7               	goto	l5244
  7792                           
  7793                           ;doprnt.c: 1262: flag |= 0x03;
  7794  068D  3003               	movlw	3
  7795  068E  00A6               	movwf	??_sprintf
  7796  068F  0826               	movf	??_sprintf,w
  7797  0690  04AF               	iorwf	sprintf@flag,f
  7798                           
  7799                           ;doprnt.c: 1263: val = -val;
  7800  0691  09AD               	comf	sprintf@val,f
  7801  0692  09AE               	comf	sprintf@val+1,f
  7802  0693  0AAD               	incf	sprintf@val,f
  7803  0694  1903               	skipnz
  7804  0695  0AAE               	incf	sprintf@val+1,f
  7805                           
  7806                           ;doprnt.c: 1264: }
  7807                           ;doprnt.c: 1266: }
  7808  0696  2EE7               	goto	l5244
  7809  0697                     l5218:	
  7810                           
  7811                           ;doprnt.c: 1268: else
  7812                           ;doprnt.c: 1273: {
  7813                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  7814  0697  082B               	movf	sprintf@ap,w
  7815  0698  0086               	movwf	6
  7816  0699  0187               	clrf	7
  7817  069A  3F40               	moviw [0]fsr1
  7818  069B  00AD               	movwf	sprintf@val
  7819  069C  3F41               	moviw [1]fsr1
  7820  069D  00AE               	movwf	sprintf@val+1
  7821  069E  3002               	movlw	2
  7822  069F  00A6               	movwf	??_sprintf
  7823  06A0  0826               	movf	??_sprintf,w
  7824  06A1  07AB               	addwf	sprintf@ap,f
  7825                           
  7826                           ;doprnt.c: 1287: }
  7827                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  7828  06A2  2EE7               	goto	l5244
  7829  06A3                     l683:	
  7830                           ;doprnt.c: 1299: case 0x00:
  7831                           
  7832                           
  7833                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7834  06A3  01B2               	clrf	sprintf@c
  7835  06A4  0AB2               	incf	sprintf@c,f
  7836  06A5                     L7:	
  7837  06A5  3005               	movlw	5
  7838  06A6  0632               	xorwf	sprintf@c,w
  7839  06A7  1903               	btfsc	3,2
  7840  06A8  2EF0               	goto	l5246
  7841                           
  7842                           ;doprnt.c: 1306: if(val < dpowers[c])
  7843  06A9  0832               	movf	sprintf@c,w
  7844  06AA  00A6               	movwf	??_sprintf
  7845  06AB  01A7               	clrf	??_sprintf+1
  7846  06AC  35A6               	lslf	??_sprintf,f
  7847  06AD  0DA7               	rlf	??_sprintf+1,f
  7848  06AE  3000               	movlw	low (_dpowers| (0+32768))
  7849  06AF  0726               	addwf	??_sprintf,w
  7850  06B0  0084               	movwf	4
  7851  06B1  3088               	movlw	high (_dpowers| (0+32768))
  7852  06B2  3D27               	addwfc	??_sprintf+1,w
  7853  06B3  0085               	movwf	5
  7854  06B4  3F00               	moviw [0]fsr0
  7855  06B5  00A8               	movwf	??_sprintf+2
  7856  06B6  3F01               	moviw [1]fsr0
  7857  06B7  00A9               	movwf	??_sprintf+3
  7858  06B8  0829               	movf	??_sprintf+3,w
  7859  06B9  022E               	subwf	sprintf@val+1,w
  7860  06BA  1D03               	skipz
  7861  06BB  2EBE               	goto	u5405
  7862  06BC  0828               	movf	??_sprintf+2,w
  7863  06BD  022D               	subwf	sprintf@val,w
  7864  06BE                     u5405:	
  7865  06BE  1C03               	btfss	3,0
  7866  06BF  2EF0               	goto	l5246
  7867                           
  7868                           ;doprnt.c: 1307: break;
  7869  06C0  3001               	movlw	1
  7870  06C1  00A6               	movwf	??_sprintf
  7871  06C2  0826               	movf	??_sprintf,w
  7872  06C3  07B2               	addwf	sprintf@c,f
  7873  06C4  2EA5               	goto	L7
  7874  06C5                     l688:	
  7875                           ;doprnt.c: 1314: case 0x80:
  7876                           
  7877                           ;doprnt.c: 1309: break;
  7878                           
  7879                           
  7880                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  7881  06C5  01B2               	clrf	sprintf@c
  7882  06C6  0AB2               	incf	sprintf@c,f
  7883  06C7                     L8:	
  7884  06C7  3004               	movlw	4
  7885  06C8  0632               	xorwf	sprintf@c,w
  7886  06C9  1903               	btfsc	3,2
  7887  06CA  2EF0               	goto	l5246
  7888                           
  7889                           ;doprnt.c: 1317: if(val < hexpowers[c])
  7890  06CB  0832               	movf	sprintf@c,w
  7891  06CC  00A6               	movwf	??_sprintf
  7892  06CD  01A7               	clrf	??_sprintf+1
  7893  06CE  35A6               	lslf	??_sprintf,f
  7894  06CF  0DA7               	rlf	??_sprintf+1,f
  7895  06D0  300A               	movlw	low (_hexpowers| (0+32768))
  7896  06D1  0726               	addwf	??_sprintf,w
  7897  06D2  0084               	movwf	4
  7898  06D3  3088               	movlw	high (_hexpowers| (0+32768))
  7899  06D4  3D27               	addwfc	??_sprintf+1,w
  7900  06D5  0085               	movwf	5
  7901  06D6  3F00               	moviw [0]fsr0
  7902  06D7  00A8               	movwf	??_sprintf+2
  7903  06D8  3F01               	moviw [1]fsr0
  7904  06D9  00A9               	movwf	??_sprintf+3
  7905  06DA  0829               	movf	??_sprintf+3,w
  7906  06DB  022E               	subwf	sprintf@val+1,w
  7907  06DC  1D03               	skipz
  7908  06DD  2EE0               	goto	u5435
  7909  06DE  0828               	movf	??_sprintf+2,w
  7910  06DF  022D               	subwf	sprintf@val,w
  7911  06E0                     u5435:	
  7912  06E0  1C03               	btfss	3,0
  7913  06E1  2EF0               	goto	l5246
  7914                           
  7915                           ;doprnt.c: 1318: break;
  7916  06E2  3001               	movlw	1
  7917  06E3  00A6               	movwf	??_sprintf
  7918  06E4  0826               	movf	??_sprintf,w
  7919  06E5  07B2               	addwf	sprintf@c,f
  7920  06E6  2EC7               	goto	L8
  7921  06E7                     l5244:	
  7922                           ;doprnt.c: 1336: }
  7923                           
  7924                           ;doprnt.c: 1320: break;
  7925                           
  7926  06E7  082F               	movf	sprintf@flag,w
  7927  06E8  3980               	andlw	128
  7928                           
  7929                           ; Switch size 1, requested type "space"
  7930                           ; Number of cases is 2, Range of values is 0 to 128
  7931                           ; switch strategies available:
  7932                           ; Name         Instructions Cycles
  7933                           ; simple_byte            7     4 (average)
  7934                           ; jumptable            260     6 (fixed)
  7935                           ;	Chosen strategy is simple_byte
  7936  06E9  3A00               	xorlw	0	; case 0
  7937  06EA  1903               	skipnz
  7938  06EB  2EA3               	goto	l683
  7939  06EC  3A80               	xorlw	128	; case 128
  7940  06ED  1903               	skipnz
  7941  06EE  2EC5               	goto	l688
  7942  06EF  2EF0               	goto	l5246
  7943  06F0                     l5246:	
  7944                           
  7945                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7946  06F0  0830               	movf	sprintf@width,w
  7947  06F1  0431               	iorwf	sprintf@width+1,w
  7948  06F2  1903               	btfsc	3,2
  7949  06F3  2EFC               	goto	l692
  7950  06F4  082F               	movf	sprintf@flag,w
  7951  06F5  3903               	andlw	3
  7952  06F6  1903               	btfsc	3,2
  7953  06F7  2EFC               	goto	l692
  7954                           
  7955                           ;doprnt.c: 1346: width--;
  7956  06F8  30FF               	movlw	255
  7957  06F9  07B0               	addwf	sprintf@width,f
  7958  06FA  30FF               	movlw	255
  7959  06FB  3DB1               	addwfc	sprintf@width+1,f
  7960  06FC                     l692:	
  7961                           
  7962                           ;doprnt.c: 1381: if(width > c)
  7963  06FC  0832               	movf	sprintf@c,w
  7964  06FD  00A6               	movwf	??_sprintf
  7965  06FE  01A7               	clrf	??_sprintf+1
  7966  06FF  1BA6               	btfsc	??_sprintf,7
  7967  0700  03A7               	decf	??_sprintf+1,f
  7968  0701  0827               	movf	??_sprintf+1,w
  7969  0702  3A80               	xorlw	128
  7970  0703  00A8               	movwf	??_sprintf+2
  7971  0704  0831               	movf	sprintf@width+1,w
  7972  0705  3A80               	xorlw	128
  7973  0706  0228               	subwf	??_sprintf+2,w
  7974  0707  1D03               	skipz
  7975  0708  2F0B               	goto	u5475
  7976  0709  0830               	movf	sprintf@width,w
  7977  070A  0226               	subwf	??_sprintf,w
  7978  070B                     u5475:	
  7979  070B  1803               	skipnc
  7980  070C  2F18               	goto	l5254
  7981                           
  7982                           ;doprnt.c: 1382: width -= c;
  7983  070D  0020               	movlb	0	; select bank0
  7984  070E  0832               	movf	sprintf@c,w
  7985  070F  00A6               	movwf	??_sprintf
  7986  0710  01A7               	clrf	??_sprintf+1
  7987  0711  1BA6               	btfsc	??_sprintf,7
  7988  0712  03A7               	decf	??_sprintf+1,f
  7989  0713  0826               	movf	??_sprintf,w
  7990  0714  02B0               	subwf	sprintf@width,f
  7991  0715  0827               	movf	??_sprintf+1,w
  7992  0716  3BB1               	subwfb	sprintf@width+1,f
  7993  0717  2F1B               	goto	l5256
  7994  0718                     l5254:	
  7995                           
  7996                           ;doprnt.c: 1383: else
  7997                           ;doprnt.c: 1384: width = 0;
  7998  0718  0020               	movlb	0	; select bank0
  7999  0719  01B0               	clrf	sprintf@width
  8000  071A  01B1               	clrf	sprintf@width+1
  8001  071B                     l5256:	
  8002                           
  8003                           ;doprnt.c: 1387: if(flag & 0x04) {
  8004  071B  1D2F               	btfss	sprintf@flag,2
  8005  071C  2F3E               	goto	l5272
  8006                           
  8007                           ;doprnt.c: 1392: if(flag & 0x03)
  8008  071D  082F               	movf	sprintf@flag,w
  8009  071E  3903               	andlw	3
  8010  071F  1903               	btfsc	3,2
  8011  0720  2F2B               	goto	l5264
  8012                           
  8013                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  8014  0721  0820               	movf	sprintf@sp,w
  8015  0722  0086               	movwf	6
  8016  0723  0821               	movf	sprintf@sp+1,w
  8017  0724  0087               	movwf	7
  8018  0725  302D               	movlw	45
  8019  0726  0081               	movwf	1
  8020  0727  3001               	movlw	1
  8021  0728  07A0               	addwf	sprintf@sp,f
  8022  0729  3000               	movlw	0
  8023  072A  3DA1               	addwfc	sprintf@sp+1,f
  8024  072B                     l5264:	
  8025                           
  8026                           ;doprnt.c: 1415: if(width)
  8027  072B  0830               	movf	sprintf@width,w
  8028  072C  0431               	iorwf	sprintf@width+1,w
  8029  072D  1903               	btfsc	3,2
  8030  072E  2F62               	goto	l5286
  8031                           
  8032                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8033                           
  8034                           ;doprnt.c: 1416: do
  8035  072F  0820               	movf	sprintf@sp,w
  8036  0730  0086               	movwf	6
  8037  0731  0821               	movf	sprintf@sp+1,w
  8038  0732  0087               	movwf	7
  8039  0733  3030               	movlw	48
  8040  0734  0081               	movwf	1
  8041  0735  3001               	movlw	1
  8042  0736  07A0               	addwf	sprintf@sp,f
  8043  0737  3000               	movlw	0
  8044  0738  3DA1               	addwfc	sprintf@sp+1,f
  8045                           
  8046                           ;doprnt.c: 1418: while(--width);
  8047  0739  30FF               	movlw	255
  8048  073A  07B0               	addwf	sprintf@width,f
  8049  073B  30FF               	movlw	255
  8050  073C  3DB1               	addwfc	sprintf@width+1,f
  8051  073D  2F2B               	goto	l5264
  8052  073E                     l5272:	
  8053                           ;doprnt.c: 1420: } else
  8054                           
  8055                           
  8056                           ;doprnt.c: 1422: {
  8057                           ;doprnt.c: 1424: if(width
  8058                           ;doprnt.c: 1428: )
  8059  073E  0830               	movf	sprintf@width,w
  8060  073F  0431               	iorwf	sprintf@width+1,w
  8061  0740  1903               	btfsc	3,2
  8062  0741  2F54               	goto	l5280
  8063  0742                     l5274:	
  8064                           ;doprnt.c: 1429: do
  8065                           
  8066                           
  8067                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8068  0742  0820               	movf	sprintf@sp,w
  8069  0743  0086               	movwf	6
  8070  0744  0821               	movf	sprintf@sp+1,w
  8071  0745  0087               	movwf	7
  8072  0746  3020               	movlw	32
  8073  0747  0081               	movwf	1
  8074  0748  3001               	movlw	1
  8075  0749  07A0               	addwf	sprintf@sp,f
  8076  074A  3000               	movlw	0
  8077  074B  3DA1               	addwfc	sprintf@sp+1,f
  8078                           
  8079                           ;doprnt.c: 1431: while(--width);
  8080  074C  30FF               	movlw	255
  8081  074D  07B0               	addwf	sprintf@width,f
  8082  074E  30FF               	movlw	255
  8083  074F  3DB1               	addwfc	sprintf@width+1,f
  8084  0750  0830               	movf	sprintf@width,w
  8085  0751  0431               	iorwf	sprintf@width+1,w
  8086  0752  1D03               	btfss	3,2
  8087  0753  2F42               	goto	l5274
  8088  0754                     l5280:	
  8089                           
  8090                           ;doprnt.c: 1438: if(flag & 0x03)
  8091  0754  082F               	movf	sprintf@flag,w
  8092  0755  3903               	andlw	3
  8093  0756  1903               	btfsc	3,2
  8094  0757  2F62               	goto	l5286
  8095                           
  8096                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8097  0758  0820               	movf	sprintf@sp,w
  8098  0759  0086               	movwf	6
  8099  075A  0821               	movf	sprintf@sp+1,w
  8100  075B  0087               	movwf	7
  8101  075C  302D               	movlw	45
  8102  075D  0081               	movwf	1
  8103  075E  3001               	movlw	1
  8104  075F  07A0               	addwf	sprintf@sp,f
  8105  0760  3000               	movlw	0
  8106  0761  3DA1               	addwfc	sprintf@sp+1,f
  8107  0762                     l5286:	
  8108                           
  8109                           ;doprnt.c: 1469: }
  8110                           ;doprnt.c: 1472: prec = c;
  8111  0762  0832               	movf	sprintf@c,w
  8112  0763  00A6               	movwf	??_sprintf
  8113  0764  0826               	movf	??_sprintf,w
  8114  0765  00AC               	movwf	sprintf@prec
  8115                           
  8116                           ;doprnt.c: 1474: while(prec--) {
  8117  0766  2FBF               	goto	l5302
  8118  0767                     l5288:	
  8119                           ;doprnt.c: 1478: {
  8120                           ;doprnt.c: 1483: case 0x00:
  8121                           
  8122                           ;doprnt.c: 1476: switch((unsigned char)(flag & 0x80))
  8123                           
  8124                           
  8125                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8126  0767  300A               	movlw	10
  8127  0768  00F8               	movwf	___lwmod@divisor
  8128  0769  3000               	movlw	0
  8129  076A  00F9               	movwf	___lwmod@divisor+1
  8130  076B  082C               	movf	sprintf@prec,w
  8131  076C  00A6               	movwf	??_sprintf
  8132  076D  01A7               	clrf	??_sprintf+1
  8133  076E  35A6               	lslf	??_sprintf,f
  8134  076F  0DA7               	rlf	??_sprintf+1,f
  8135  0770  3000               	movlw	low (_dpowers| (0+32768))
  8136  0771  0726               	addwf	??_sprintf,w
  8137  0772  0084               	movwf	4
  8138  0773  3088               	movlw	high (_dpowers| (0+32768))
  8139  0774  3D27               	addwfc	??_sprintf+1,w
  8140  0775  0085               	movwf	5
  8141  0776  3F00               	moviw [0]fsr0
  8142  0777  00F0               	movwf	___lwdiv@divisor
  8143  0778  3F01               	moviw [1]fsr0
  8144  0779  00F1               	movwf	___lwdiv@divisor+1
  8145  077A  082E               	movf	sprintf@val+1,w
  8146  077B  00F3               	movwf	___lwdiv@dividend+1
  8147  077C  082D               	movf	sprintf@val,w
  8148  077D  00F2               	movwf	___lwdiv@dividend
  8149  077E  3192  2208  3185   	fcall	___lwdiv
  8150  0781  0871               	movf	?___lwdiv+1,w
  8151  0782  00FB               	movwf	___lwmod@dividend+1
  8152  0783  0870               	movf	?___lwdiv,w
  8153  0784  00FA               	movwf	___lwmod@dividend
  8154  0785  3191  2118  3185   	fcall	___lwmod
  8155  0788  0878               	movf	?___lwmod,w
  8156  0789  3E30               	addlw	48
  8157  078A  0020               	movlb	0	; select bank0
  8158  078B  00A8               	movwf	??_sprintf+2
  8159  078C  0828               	movf	??_sprintf+2,w
  8160  078D  2FB4               	goto	L6
  8161  078E                     l5290:	
  8162                           ;doprnt.c: 1497: case 0x80:
  8163                           
  8164                           ;doprnt.c: 1491: break;
  8165                           
  8166                           
  8167                           ;doprnt.c: 1499: {
  8168                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  8169  078E  082C               	movf	sprintf@prec,w
  8170  078F  00A6               	movwf	??_sprintf
  8171  0790  01A7               	clrf	??_sprintf+1
  8172  0791  35A6               	lslf	??_sprintf,f
  8173  0792  0DA7               	rlf	??_sprintf+1,f
  8174  0793  300A               	movlw	low (_hexpowers| (0+32768))
  8175  0794  0726               	addwf	??_sprintf,w
  8176  0795  0084               	movwf	4
  8177  0796  3088               	movlw	high (_hexpowers| (0+32768))
  8178  0797  3D27               	addwfc	??_sprintf+1,w
  8179  0798  0085               	movwf	5
  8180  0799  3F00               	moviw [0]fsr0
  8181  079A  00F0               	movwf	___lwdiv@divisor
  8182  079B  3F01               	moviw [1]fsr0
  8183  079C  00F1               	movwf	___lwdiv@divisor+1
  8184  079D  082E               	movf	sprintf@val+1,w
  8185  079E  00F3               	movwf	___lwdiv@dividend+1
  8186  079F  082D               	movf	sprintf@val,w
  8187  07A0  00F2               	movwf	___lwdiv@dividend
  8188  07A1  3192  2208  3185   	fcall	___lwdiv
  8189  07A4  0870               	movf	?___lwdiv,w
  8190  07A5  390F               	andlw	15
  8191  07A6  0020               	movlb	0	; select bank0
  8192  07A7  00A8               	movwf	??_sprintf+2
  8193  07A8  0828               	movf	??_sprintf+2,w
  8194  07A9  00AA               	movwf	sprintf@idx
  8195                           
  8196                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  8197  07AA  082A               	movf	sprintf@idx,w
  8198  07AB  3EB5               	addlw	low (STR_85| (0+32768))
  8199  07AC  0084               	movwf	4
  8200  07AD  308D               	movlw	high (STR_85| (0+32768))
  8201  07AE  1803               	skipnc
  8202  07AF  3E01               	addlw	1
  8203  07B0  0085               	movwf	5
  8204  07B1  0800               	movf	0,w	;code access
  8205  07B2  00A6               	movwf	??_sprintf
  8206  07B3  0826               	movf	??_sprintf,w
  8207  07B4                     L6:	
  8208  07B4  00B2               	movwf	sprintf@c
  8209  07B5                     l5298:	
  8210                           ;doprnt.c: 1523: }
  8211                           
  8212                           ;doprnt.c: 1508: }
  8213                           ;doprnt.c: 1510: break;
  8214                           
  8215                           
  8216                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8217  07B5  0820               	movf	sprintf@sp,w
  8218  07B6  0086               	movwf	6
  8219  07B7  0821               	movf	sprintf@sp+1,w
  8220  07B8  0087               	movwf	7
  8221  07B9  0832               	movf	sprintf@c,w
  8222  07BA  0081               	movwf	1
  8223  07BB  3001               	movlw	1
  8224  07BC  07A0               	addwf	sprintf@sp,f
  8225  07BD  3000               	movlw	0
  8226  07BE  3DA1               	addwfc	sprintf@sp+1,f
  8227  07BF                     l5302:	
  8228  07BF  30FF               	movlw	255
  8229  07C0  00A6               	movwf	??_sprintf
  8230  07C1  0826               	movf	??_sprintf,w
  8231  07C2  07AC               	addwf	sprintf@prec,f
  8232  07C3  0A2C               	incf	sprintf@prec,w
  8233  07C4  1903               	btfsc	3,2
  8234  07C5  2DED               	goto	l5304
  8235  07C6  082F               	movf	sprintf@flag,w
  8236  07C7  3980               	andlw	128
  8237                           
  8238                           ; Switch size 1, requested type "space"
  8239                           ; Number of cases is 2, Range of values is 0 to 128
  8240                           ; switch strategies available:
  8241                           ; Name         Instructions Cycles
  8242                           ; simple_byte            7     4 (average)
  8243                           ; jumptable            260     6 (fixed)
  8244                           ;	Chosen strategy is simple_byte
  8245  07C8  3A00               	xorlw	0	; case 0
  8246  07C9  1903               	skipnz
  8247  07CA  2F67               	goto	l5288
  8248  07CB  3A80               	xorlw	128	; case 128
  8249  07CC  1903               	skipnz
  8250  07CD  2F8E               	goto	l5290
  8251  07CE  2FB5               	goto	l5298
  8252  07CF  2FB5               	goto	l5298
  8253  07D0                     l5306:	
  8254                           ;doprnt.c: 1525: }
  8255                           ;doprnt.c: 1533: }
  8256                           ;doprnt.c: 1535: alldone:
  8257                           
  8258                           
  8259                           ;doprnt.c: 1538: *sp = 0;
  8260  07D0  0020               	movlb	0	; select bank0
  8261  07D1  0820               	movf	sprintf@sp,w
  8262  07D2  0086               	movwf	6
  8263  07D3  0821               	movf	sprintf@sp+1,w
  8264  07D4  0087               	movwf	7
  8265  07D5  0181               	clrf	1
  8266  07D6  0008               	return
  8267  07D7                     __end_of_sprintf:	
  8268                           ;doprnt.c: 1540: return 0;
  8269                           ;	Return value of _sprintf is never used
  8270                           
  8271                           
  8272                           	psect	text32
  8273  1118                     __ptext32:	
  8274 ;; *************** function ___lwmod *****************
  8275 ;; Defined at:
  8276 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
  8277 ;; Parameters:    Size  Location     Type
  8278 ;;  divisor         2    8[COMMON] unsigned int 
  8279 ;;  dividend        2   10[COMMON] unsigned int 
  8280 ;; Auto vars:     Size  Location     Type
  8281 ;;  counter         1   13[COMMON] unsigned char 
  8282 ;; Return value:  Size  Location     Type
  8283 ;;                  2    8[COMMON] unsigned int 
  8284 ;; Registers used:
  8285 ;;		wreg, status,2, status,0
  8286 ;; Tracked objects:
  8287 ;;		On entry : 0/0
  8288 ;;		On exit  : 0/0
  8289 ;;		Unchanged: 0/0
  8290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8291 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8292 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8294 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8295 ;;Total ram usage:        6 bytes
  8296 ;; Hardware stack levels used:    1
  8297 ;; This function calls:
  8298 ;;		Nothing
  8299 ;; This function is called by:
  8300 ;;		_sprintf
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           
  8305                           ;psect for function ___lwmod
  8306  1118                     ___lwmod:	
  8307                           
  8308                           ;incstack = 0
  8309                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8310  1118  0878               	movf	___lwmod@divisor,w
  8311  1119  0479               	iorwf	___lwmod@divisor+1,w
  8312  111A  1903               	btfsc	3,2
  8313  111B  293F               	goto	l5048
  8314  111C  01FD               	clrf	___lwmod@counter
  8315  111D  0AFD               	incf	___lwmod@counter,f
  8316  111E                     l5038:	
  8317  111E  1BF9               	btfsc	___lwmod@divisor+1,7
  8318  111F  292A               	goto	l5040
  8319  1120  3001               	movlw	1
  8320  1121                     u5175:	
  8321  1121  35F8               	lslf	___lwmod@divisor,f
  8322  1122  0DF9               	rlf	___lwmod@divisor+1,f
  8323  1123  0B89               	decfsz	9,f
  8324  1124  2921               	goto	u5175
  8325  1125  3001               	movlw	1
  8326  1126  00FC               	movwf	??___lwmod
  8327  1127  087C               	movf	??___lwmod,w
  8328  1128  07FD               	addwf	___lwmod@counter,f
  8329  1129  291E               	goto	l5038
  8330  112A                     l5040:	
  8331  112A  0879               	movf	___lwmod@divisor+1,w
  8332  112B  027B               	subwf	___lwmod@dividend+1,w
  8333  112C  1D03               	skipz
  8334  112D  2930               	goto	u5195
  8335  112E  0878               	movf	___lwmod@divisor,w
  8336  112F  027A               	subwf	___lwmod@dividend,w
  8337  1130                     u5195:	
  8338  1130  1C03               	skipc
  8339  1131  2936               	goto	l5044
  8340  1132  0878               	movf	___lwmod@divisor,w
  8341  1133  02FA               	subwf	___lwmod@dividend,f
  8342  1134  0879               	movf	___lwmod@divisor+1,w
  8343  1135  3BFB               	subwfb	___lwmod@dividend+1,f
  8344  1136                     l5044:	
  8345  1136  3001               	movlw	1
  8346  1137                     u5205:	
  8347  1137  36F9               	lsrf	___lwmod@divisor+1,f
  8348  1138  0CF8               	rrf	___lwmod@divisor,f
  8349  1139  0B89               	decfsz	9,f
  8350  113A  2937               	goto	u5205
  8351  113B  3001               	movlw	1
  8352  113C  02FD               	subwf	___lwmod@counter,f
  8353  113D  1D03               	btfss	3,2
  8354  113E  292A               	goto	l5040
  8355  113F                     l5048:	
  8356  113F  087B               	movf	___lwmod@dividend+1,w
  8357  1140  00F9               	movwf	?___lwmod+1
  8358  1141  087A               	movf	___lwmod@dividend,w
  8359  1142  00F8               	movwf	?___lwmod
  8360  1143  0008               	return
  8361  1144                     __end_of___lwmod:	
  8362                           
  8363                           	psect	text33
  8364  1208                     __ptext33:	
  8365 ;; *************** function ___lwdiv *****************
  8366 ;; Defined at:
  8367 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  divisor         2    0[COMMON] unsigned int 
  8370 ;;  dividend        2    2[COMMON] unsigned int 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  quotient        2    6[COMMON] unsigned int 
  8373 ;;  counter         1    5[COMMON] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  2    0[COMMON] unsigned int 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8384 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8385 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8386 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8387 ;;Total ram usage:        8 bytes
  8388 ;; Hardware stack levels used:    1
  8389 ;; This function calls:
  8390 ;;		Nothing
  8391 ;; This function is called by:
  8392 ;;		_sprintf
  8393 ;; This function uses a non-reentrant model
  8394 ;;
  8395                           
  8396                           
  8397                           ;psect for function ___lwdiv
  8398  1208                     ___lwdiv:	
  8399                           
  8400                           ;incstack = 0
  8401                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8402  1208  01F6               	clrf	___lwdiv@quotient
  8403  1209  01F7               	clrf	___lwdiv@quotient+1
  8404  120A  0870               	movf	___lwdiv@divisor,w
  8405  120B  0471               	iorwf	___lwdiv@divisor+1,w
  8406  120C  1903               	btfsc	3,2
  8407  120D  2A37               	goto	l5026
  8408  120E  01F5               	clrf	___lwdiv@counter
  8409  120F  0AF5               	incf	___lwdiv@counter,f
  8410  1210                     l5014:	
  8411  1210  1BF1               	btfsc	___lwdiv@divisor+1,7
  8412  1211  2A1C               	goto	l5016
  8413  1212  3001               	movlw	1
  8414  1213                     u5105:	
  8415  1213  35F0               	lslf	___lwdiv@divisor,f
  8416  1214  0DF1               	rlf	___lwdiv@divisor+1,f
  8417  1215  0B89               	decfsz	9,f
  8418  1216  2A13               	goto	u5105
  8419  1217  3001               	movlw	1
  8420  1218  00F4               	movwf	??___lwdiv
  8421  1219  0874               	movf	??___lwdiv,w
  8422  121A  07F5               	addwf	___lwdiv@counter,f
  8423  121B  2A10               	goto	l5014
  8424  121C                     l5016:	
  8425  121C  3001               	movlw	1
  8426  121D                     u5125:	
  8427  121D  35F6               	lslf	___lwdiv@quotient,f
  8428  121E  0DF7               	rlf	___lwdiv@quotient+1,f
  8429  121F  0B89               	decfsz	9,f
  8430  1220  2A1D               	goto	u5125
  8431  1221  0871               	movf	___lwdiv@divisor+1,w
  8432  1222  0273               	subwf	___lwdiv@dividend+1,w
  8433  1223  1D03               	skipz
  8434  1224  2A27               	goto	u5135
  8435  1225  0870               	movf	___lwdiv@divisor,w
  8436  1226  0272               	subwf	___lwdiv@dividend,w
  8437  1227                     u5135:	
  8438  1227  1C03               	skipc
  8439  1228  2A2E               	goto	l5022
  8440  1229  0870               	movf	___lwdiv@divisor,w
  8441  122A  02F2               	subwf	___lwdiv@dividend,f
  8442  122B  0871               	movf	___lwdiv@divisor+1,w
  8443  122C  3BF3               	subwfb	___lwdiv@dividend+1,f
  8444  122D  1476               	bsf	___lwdiv@quotient,0
  8445  122E                     l5022:	
  8446  122E  3001               	movlw	1
  8447  122F                     u5145:	
  8448  122F  36F1               	lsrf	___lwdiv@divisor+1,f
  8449  1230  0CF0               	rrf	___lwdiv@divisor,f
  8450  1231  0B89               	decfsz	9,f
  8451  1232  2A2F               	goto	u5145
  8452  1233  3001               	movlw	1
  8453  1234  02F5               	subwf	___lwdiv@counter,f
  8454  1235  1D03               	btfss	3,2
  8455  1236  2A1C               	goto	l5016
  8456  1237                     l5026:	
  8457  1237  0877               	movf	___lwdiv@quotient+1,w
  8458  1238  00F1               	movwf	?___lwdiv+1
  8459  1239  0876               	movf	___lwdiv@quotient,w
  8460  123A  00F0               	movwf	?___lwdiv
  8461  123B  0008               	return
  8462  123C                     __end_of___lwdiv:	
  8463                           
  8464                           	psect	text34
  8465  1D90                     __ptext34:	
  8466 ;; *************** function _MFRC522_isCard *****************
  8467 ;; Defined at:
  8468 ;;		line 432 in file "rc522.h"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;  TagType         1    wreg     PTR unsigned char 
  8471 ;;		 -> TagType(2), 
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;  TagType         1   13[COMMON] PTR unsigned char 
  8474 ;;		 -> TagType(2), 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      unsigned char 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8488 ;;Total ram usage:        2 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    5
  8491 ;; This function calls:
  8492 ;;		_MFRC522_Request
  8493 ;; This function is called by:
  8494 ;;		_RFID_Ok
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           
  8499                           ;psect for function _MFRC522_isCard
  8500  1D90                     _MFRC522_isCard:	
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in _MFRC522_isCard: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8504                           ;MFRC522_isCard@TagType stored from wreg
  8505  1D90  00FD               	movwf	MFRC522_isCard@TagType
  8506                           
  8507                           ;rc522.h: 434: if (MFRC522_Request( 0x26, TagType ) == 0)
  8508  1D91  087D               	movf	MFRC522_isCard@TagType,w
  8509  1D92  00FC               	movwf	??_MFRC522_isCard
  8510  1D93  087C               	movf	??_MFRC522_isCard,w
  8511  1D94  0020               	movlb	0	; select bank0
  8512  1D95  00B6               	movwf	MFRC522_Request@TagType
  8513  1D96  3026               	movlw	38
  8514  1D97  3192  2270  319D   	fcall	_MFRC522_Request
  8515  1D9A  3A00               	xorlw	0
  8516  1D9B  1D03               	skipz
  8517  1D9C  2D9F               	goto	l5156
  8518                           
  8519                           ;rc522.h: 435: {
  8520                           ;rc522.h: 436: return 1;
  8521  1D9D  3001               	movlw	1
  8522                           
  8523                           ;rc522.h: 437: }
  8524  1D9E  0008               	return
  8525  1D9F                     l5156:	
  8526                           
  8527                           ;rc522.h: 438: else
  8528                           ;rc522.h: 439: {
  8529                           ;rc522.h: 440: return 0;
  8530  1D9F  3000               	movlw	0
  8531  1DA0  0008               	return
  8532  1DA1                     __end_of_MFRC522_isCard:	
  8533                           
  8534                           	psect	text35
  8535  1270                     __ptext35:	
  8536 ;; *************** function _MFRC522_Request *****************
  8537 ;; Defined at:
  8538 ;;		line 237 in file "rc522.h"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  reqMode         1    wreg     unsigned char 
  8541 ;;  TagType         1   22[BANK0 ] PTR unsigned char 
  8542 ;;		 -> TagType(2), 
  8543 ;; Auto vars:     Size  Location     Type
  8544 ;;  reqMode         1   23[BANK0 ] unsigned char 
  8545 ;;  backBits        2   25[BANK0 ] unsigned int 
  8546 ;;  _status         1   24[BANK0 ] unsigned char 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      unsigned char 
  8549 ;; Registers used:
  8550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8556 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8557 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8559 ;;      Totals:         2       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8560 ;;Total ram usage:        7 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:    4
  8563 ;; This function calls:
  8564 ;;		_MFRC522_ToCard
  8565 ;;		_MFRC522_Wr
  8566 ;; This function is called by:
  8567 ;;		_MFRC522_isCard
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           
  8572                           ;psect for function _MFRC522_Request
  8573  1270                     _MFRC522_Request:	
  8574                           
  8575                           ;incstack = 0
  8576                           ; Regs used in _MFRC522_Request: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8577                           ;MFRC522_Request@reqMode stored from wreg
  8578  1270  0020               	movlb	0	; select bank0
  8579  1271  00B7               	movwf	MFRC522_Request@reqMode
  8580                           
  8581                           ;rc522.h: 239: char _status;
  8582                           ;rc522.h: 240: unsigned backBits;
  8583                           ;rc522.h: 241: MFRC522_Wr( 0x0D, 0x07 );
  8584  1272  3007               	movlw	7
  8585  1273  00FA               	movwf	??_MFRC522_Request
  8586  1274  087A               	movf	??_MFRC522_Request,w
  8587  1275  00F4               	movwf	MFRC522_Wr@value
  8588  1276  300D               	movlw	13
  8589  1277  319D  2553  3192   	fcall	_MFRC522_Wr
  8590                           
  8591                           ;rc522.h: 242: TagType[0] = reqMode;
  8592  127A  0020               	movlb	0	; select bank0
  8593  127B  0837               	movf	MFRC522_Request@reqMode,w
  8594  127C  00FA               	movwf	??_MFRC522_Request
  8595  127D  0836               	movf	MFRC522_Request@TagType,w
  8596  127E  0086               	movwf	6
  8597  127F  0187               	clrf	7
  8598  1280  087A               	movf	??_MFRC522_Request,w
  8599  1281  0081               	movwf	1
  8600                           
  8601                           ;rc522.h: 243: _status = MFRC522_ToCard( 0x0C, TagType, 1, TagType, &backBits );
  8602  1282  0836               	movf	MFRC522_Request@TagType,w
  8603  1283  00A0               	movwf	MFRC522_ToCard@sendData
  8604  1284  3000               	movlw	0
  8605  1285  00A1               	movwf	MFRC522_ToCard@sendData+1
  8606  1286  01A2               	clrf	MFRC522_ToCard@sendLen
  8607  1287  0AA2               	incf	MFRC522_ToCard@sendLen,f
  8608  1288  0836               	movf	MFRC522_Request@TagType,w
  8609  1289  00A3               	movwf	MFRC522_ToCard@backData
  8610  128A  3000               	movlw	0
  8611  128B  00A4               	movwf	MFRC522_ToCard@backData+1
  8612  128C  3039               	movlw	(low (MFRC522_Request@backBits| 0))& (0+255)
  8613  128D  00FA               	movwf	??_MFRC522_Request
  8614  128E  087A               	movf	??_MFRC522_Request,w
  8615  128F  00A5               	movwf	MFRC522_ToCard@backLen
  8616  1290  300C               	movlw	12
  8617  1291  3184  24B2  3192   	fcall	_MFRC522_ToCard
  8618  1294  00FB               	movwf	??_MFRC522_Request+1
  8619  1295  087B               	movf	??_MFRC522_Request+1,w
  8620  1296  0020               	movlb	0	; select bank0
  8621  1297  00B8               	movwf	MFRC522_Request@_status
  8622                           
  8623                           ;rc522.h: 244: if ( (_status != 0) || (backBits != 0x10) )
  8624  1298  0838               	movf	MFRC522_Request@_status,w
  8625  1299  1D03               	btfss	3,2
  8626  129A  2AA0               	goto	l4950
  8627  129B  3010               	movlw	16
  8628  129C  0639               	xorwf	MFRC522_Request@backBits,w
  8629  129D  043A               	iorwf	MFRC522_Request@backBits+1,w
  8630  129E  1903               	btfsc	3,2
  8631  129F  2AA4               	goto	l474
  8632  12A0                     l4950:	
  8633                           
  8634                           ;rc522.h: 245: {
  8635                           ;rc522.h: 246: _status = 2;
  8636  12A0  3002               	movlw	2
  8637  12A1  00FA               	movwf	??_MFRC522_Request
  8638  12A2  087A               	movf	??_MFRC522_Request,w
  8639  12A3  00B8               	movwf	MFRC522_Request@_status
  8640  12A4                     l474:	
  8641                           
  8642                           ;rc522.h: 247: }
  8643                           ;rc522.h: 248: return _status;
  8644  12A4  0838               	movf	MFRC522_Request@_status,w
  8645  12A5  0008               	return
  8646  12A6                     __end_of_MFRC522_Request:	
  8647                           
  8648                           	psect	text36
  8649  1DF0                     __ptext36:	
  8650 ;; *************** function _MFRC522_ReadCardSerial *****************
  8651 ;; Defined at:
  8652 ;;		line 444 in file "rc522.h"
  8653 ;; Parameters:    Size  Location     Type
  8654 ;;  str             1    wreg     PTR unsigned char 
  8655 ;;		 -> UID(6), 
  8656 ;; Auto vars:     Size  Location     Type
  8657 ;;  str             1   29[BANK0 ] PTR unsigned char 
  8658 ;;		 -> UID(6), 
  8659 ;;  _status         1   28[BANK0 ] unsigned char 
  8660 ;; Return value:  Size  Location     Type
  8661 ;;                  1    wreg      unsigned char 
  8662 ;; Registers used:
  8663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8664 ;; Tracked objects:
  8665 ;;		On entry : 0/0
  8666 ;;		On exit  : 0/0
  8667 ;;		Unchanged: 0/0
  8668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8670 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8671 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8672 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8673 ;;Total ram usage:        3 bytes
  8674 ;; Hardware stack levels used:    1
  8675 ;; Hardware stack levels required when called:    5
  8676 ;; This function calls:
  8677 ;;		_MFRC522_AntiColl
  8678 ;; This function is called by:
  8679 ;;		_RFID_Ok
  8680 ;; This function uses a non-reentrant model
  8681 ;;
  8682                           
  8683                           
  8684                           ;psect for function _MFRC522_ReadCardSerial
  8685  1DF0                     _MFRC522_ReadCardSerial:	
  8686                           
  8687                           ;incstack = 0
  8688                           ; Regs used in _MFRC522_ReadCardSerial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8689                           ;MFRC522_ReadCardSerial@str stored from wreg
  8690  1DF0  0020               	movlb	0	; select bank0
  8691  1DF1  00BD               	movwf	MFRC522_ReadCardSerial@str
  8692                           
  8693                           ;rc522.h: 446: char _status;
  8694                           ;rc522.h: 447: _status = MFRC522_AntiColl( str );
  8695  1DF2  083D               	movf	MFRC522_ReadCardSerial@str,w
  8696  1DF3  3194  242B  319D   	fcall	_MFRC522_AntiColl
  8697  1DF6  00FD               	movwf	??_MFRC522_ReadCardSerial
  8698  1DF7  087D               	movf	??_MFRC522_ReadCardSerial,w
  8699  1DF8  0020               	movlb	0	; select bank0
  8700  1DF9  00BC               	movwf	MFRC522_ReadCardSerial@_status
  8701                           
  8702                           ;rc522.h: 448: str[5] = 0;
  8703  1DFA  083D               	movf	MFRC522_ReadCardSerial@str,w
  8704  1DFB  3E05               	addlw	5
  8705  1DFC  0086               	movwf	6
  8706  1DFD  3001               	movlw	1	; select bank2/3
  8707  1DFE  0087               	movwf	7
  8708  1DFF  0181               	clrf	1
  8709                           
  8710                           ;rc522.h: 449: if (_status == 0)
  8711  1E00  083C               	movf	MFRC522_ReadCardSerial@_status,w
  8712  1E01  1D03               	btfss	3,2
  8713  1E02  2E05               	goto	l5172
  8714                           
  8715                           ;rc522.h: 450: return 1;
  8716  1E03  3001               	movlw	1
  8717  1E04  0008               	return
  8718  1E05                     l5172:	
  8719                           
  8720                           ;rc522.h: 451: else
  8721                           ;rc522.h: 452: return 0;
  8722  1E05  3000               	movlw	0
  8723  1E06  0008               	return
  8724  1E07                     __end_of_MFRC522_ReadCardSerial:	
  8725                           
  8726                           	psect	text37
  8727  142B                     __ptext37:	
  8728 ;; *************** function _MFRC522_AntiColl *****************
  8729 ;; Defined at:
  8730 ;;		line 402 in file "rc522.h"
  8731 ;; Parameters:    Size  Location     Type
  8732 ;;  serNum          1    wreg     PTR unsigned char 
  8733 ;;		 -> UID(6), 
  8734 ;; Auto vars:     Size  Location     Type
  8735 ;;  serNum          1   27[BANK0 ] PTR unsigned char 
  8736 ;;		 -> UID(6), 
  8737 ;;  unLen           2   23[BANK0 ] unsigned int 
  8738 ;;  i               1   26[BANK0 ] unsigned char 
  8739 ;;  _status         1   25[BANK0 ] unsigned char 
  8740 ;;  serNumCheck     1   22[BANK0 ] unsigned char 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      unsigned char 
  8743 ;; Registers used:
  8744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8751 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8752 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8753 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8754 ;;Total ram usage:        9 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    4
  8757 ;; This function calls:
  8758 ;;		_MFRC522_Clear_Bit
  8759 ;;		_MFRC522_ToCard
  8760 ;;		_MFRC522_Wr
  8761 ;; This function is called by:
  8762 ;;		_MFRC522_ReadCardSerial
  8763 ;; This function uses a non-reentrant model
  8764 ;;
  8765                           
  8766                           
  8767                           ;psect for function _MFRC522_AntiColl
  8768  142B                     _MFRC522_AntiColl:	
  8769                           
  8770                           ;incstack = 0
  8771                           ; Regs used in _MFRC522_AntiColl: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8772                           ;MFRC522_AntiColl@serNum stored from wreg
  8773  142B  0020               	movlb	0	; select bank0
  8774  142C  00BB               	movwf	MFRC522_AntiColl@serNum
  8775                           
  8776                           ;rc522.h: 404: char _status;
  8777                           ;rc522.h: 405: char i;
  8778                           ;rc522.h: 406: char serNumCheck = 0;
  8779  142D  01B6               	clrf	MFRC522_AntiColl@serNumCheck
  8780                           
  8781                           ;rc522.h: 407: unsigned unLen;
  8782                           ;rc522.h: 408: MFRC522_Wr( 0x0D, 0x00 );
  8783  142E  01F4               	clrf	MFRC522_Wr@value
  8784  142F  300D               	movlw	13
  8785  1430  319D  2553  3194   	fcall	_MFRC522_Wr
  8786                           
  8787                           ;rc522.h: 409: serNum[0] = 0x93;
  8788  1433  3093               	movlw	147
  8789  1434  00FA               	movwf	??_MFRC522_AntiColl
  8790  1435  0020               	movlb	0	; select bank0
  8791  1436  083B               	movf	MFRC522_AntiColl@serNum,w
  8792  1437  0086               	movwf	6
  8793  1438  3001               	movlw	1	; select bank2/3
  8794  1439  0087               	movwf	7
  8795  143A  087A               	movf	??_MFRC522_AntiColl,w
  8796  143B  0081               	movwf	1
  8797                           
  8798                           ;rc522.h: 410: serNum[1] = 0x20;
  8799  143C  3020               	movlw	32
  8800  143D  00FA               	movwf	??_MFRC522_AntiColl
  8801  143E  0A3B               	incf	MFRC522_AntiColl@serNum,w
  8802  143F  0086               	movwf	6
  8803  1440  3001               	movlw	1	; select bank2/3
  8804  1441  0087               	movwf	7
  8805  1442  087A               	movf	??_MFRC522_AntiColl,w
  8806  1443  0081               	movwf	1
  8807                           
  8808                           ;rc522.h: 411: MFRC522_Clear_Bit( 0x08, 0x08 );
  8809  1444  3008               	movlw	8
  8810  1445  00FA               	movwf	??_MFRC522_AntiColl
  8811  1446  087A               	movf	??_MFRC522_AntiColl,w
  8812  1447  00F6               	movwf	MFRC522_Clear_Bit@mask
  8813  1448  3008               	movlw	8
  8814  1449  319D  2561  3194   	fcall	_MFRC522_Clear_Bit
  8815                           
  8816                           ;rc522.h: 412: _status = MFRC522_ToCard( 0x0C, serNum, 2, serNum, &unLen );
  8817  144C  0020               	movlb	0	; select bank0
  8818  144D  083B               	movf	MFRC522_AntiColl@serNum,w
  8819  144E  00A0               	movwf	MFRC522_ToCard@sendData
  8820  144F  3001               	movlw	1
  8821  1450  00A1               	movwf	MFRC522_ToCard@sendData+1
  8822  1451  3002               	movlw	2
  8823  1452  00FA               	movwf	??_MFRC522_AntiColl
  8824  1453  087A               	movf	??_MFRC522_AntiColl,w
  8825  1454  00A2               	movwf	MFRC522_ToCard@sendLen
  8826  1455  083B               	movf	MFRC522_AntiColl@serNum,w
  8827  1456  00A3               	movwf	MFRC522_ToCard@backData
  8828  1457  3001               	movlw	1
  8829  1458  00A4               	movwf	MFRC522_ToCard@backData+1
  8830  1459  3037               	movlw	(low (MFRC522_AntiColl@unLen| 0))& (0+255)
  8831  145A  00FB               	movwf	??_MFRC522_AntiColl+1
  8832  145B  087B               	movf	??_MFRC522_AntiColl+1,w
  8833  145C  00A5               	movwf	MFRC522_ToCard@backLen
  8834  145D  300C               	movlw	12
  8835  145E  3184  24B2  3194   	fcall	_MFRC522_ToCard
  8836  1461  00FC               	movwf	??_MFRC522_AntiColl+2
  8837  1462  087C               	movf	??_MFRC522_AntiColl+2,w
  8838  1463  0020               	movlb	0	; select bank0
  8839  1464  00B9               	movwf	MFRC522_AntiColl@_status
  8840                           
  8841                           ;rc522.h: 413: if (_status == 0)
  8842  1465  0839               	movf	MFRC522_AntiColl@_status,w
  8843  1466  1D03               	btfss	3,2
  8844  1467  2C8D               	goto	l528
  8845                           
  8846                           ;rc522.h: 414: {
  8847                           ;rc522.h: 415: for ( i=0; i < 4; i++ )
  8848  1468  01BA               	clrf	MFRC522_AntiColl@i
  8849  1469  3004               	movlw	4
  8850  146A  023A               	subwf	MFRC522_AntiColl@i,w
  8851  146B  1803               	btfsc	3,0
  8852  146C  2C80               	goto	l4980
  8853  146D                     l4974:	
  8854                           
  8855                           ;rc522.h: 416: {
  8856                           ;rc522.h: 417: serNumCheck ^= serNum[i];
  8857  146D  083A               	movf	MFRC522_AntiColl@i,w
  8858  146E  073B               	addwf	MFRC522_AntiColl@serNum,w
  8859  146F  00FA               	movwf	??_MFRC522_AntiColl
  8860  1470  087A               	movf	??_MFRC522_AntiColl,w
  8861  1471  0086               	movwf	6
  8862  1472  3001               	movlw	1	; select bank2/3
  8863  1473  0087               	movwf	7
  8864  1474  0801               	movf	1,w
  8865  1475  00FB               	movwf	??_MFRC522_AntiColl+1
  8866  1476  087B               	movf	??_MFRC522_AntiColl+1,w
  8867  1477  06B6               	xorwf	MFRC522_AntiColl@serNumCheck,f
  8868  1478  3001               	movlw	1
  8869  1479  00FA               	movwf	??_MFRC522_AntiColl
  8870  147A  087A               	movf	??_MFRC522_AntiColl,w
  8871  147B  07BA               	addwf	MFRC522_AntiColl@i,f
  8872  147C  3004               	movlw	4
  8873  147D  023A               	subwf	MFRC522_AntiColl@i,w
  8874  147E  1C03               	skipc
  8875  147F  2C6D               	goto	l4974
  8876  1480                     l4980:	
  8877                           
  8878                           ;rc522.h: 418: }
  8879                           ;rc522.h: 420: if ( serNumCheck != serNum[4] )
  8880  1480  083B               	movf	MFRC522_AntiColl@serNum,w
  8881  1481  3E04               	addlw	4
  8882  1482  0086               	movwf	6
  8883  1483  3001               	movlw	1	; select bank2/3
  8884  1484  0087               	movwf	7
  8885  1485  0801               	movf	1,w
  8886  1486  0636               	xorwf	MFRC522_AntiColl@serNumCheck,w
  8887  1487  1903               	skipnz
  8888  1488  2C8D               	goto	l528
  8889                           
  8890                           ;rc522.h: 421: {
  8891                           ;rc522.h: 422: _status = 2;
  8892  1489  3002               	movlw	2
  8893  148A  00FA               	movwf	??_MFRC522_AntiColl
  8894  148B  087A               	movf	??_MFRC522_AntiColl,w
  8895  148C  00B9               	movwf	MFRC522_AntiColl@_status
  8896  148D                     l528:	
  8897                           
  8898                           ;rc522.h: 423: }
  8899                           ;rc522.h: 424: }
  8900                           ;rc522.h: 425: return _status;
  8901  148D  0839               	movf	MFRC522_AntiColl@_status,w
  8902  148E  0008               	return
  8903  148F                     __end_of_MFRC522_AntiColl:	
  8904                           
  8905                           	psect	text38
  8906  04B2                     __ptext38:	
  8907 ;; *************** function _MFRC522_ToCard *****************
  8908 ;; Defined at:
  8909 ;;		line 134 in file "rc522.h"
  8910 ;; Parameters:    Size  Location     Type
  8911 ;;  command         1    wreg     unsigned char 
  8912 ;;  sendData        2    0[BANK0 ] PTR unsigned char 
  8913 ;;		 -> UID(6), TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  8914 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  8915 ;;  sendLen         1    2[BANK0 ] unsigned char 
  8916 ;;  backData        2    3[BANK0 ] PTR unsigned char 
  8917 ;;		 -> UID(6), TagType(2), MFRC522_Write@buff(18), MFRC522_Auth@buff(12), 
  8918 ;;		 -> MFRC522_Halt@buff(4), MFRC522_SelectTag@buffer(9), 
  8919 ;;  backLen         1    5[BANK0 ] PTR unsigned int 
  8920 ;;		 -> MFRC522_AntiColl@unLen(2), MFRC522_Read@unLen(2), MFRC522_Write@recvBits(2), MFRC522_Auth@recvBits(2), 
  8921 ;;		 -> MFRC522_Halt@unLen(2), MFRC522_SelectTag@recvBits(2), MFRC522_Request@backBits(2), 
  8922 ;; Auto vars:     Size  Location     Type
  8923 ;;  command         1   18[BANK0 ] unsigned char 
  8924 ;;  i               2   19[BANK0 ] unsigned int 
  8925 ;;  n               1   21[BANK0 ] unsigned char 
  8926 ;;  irqEn           1   17[BANK0 ] unsigned char 
  8927 ;;  lastBits        1   16[BANK0 ] unsigned char 
  8928 ;;  _status         1   15[BANK0 ] unsigned char 
  8929 ;;  waitIRq         1   14[BANK0 ] unsigned char 
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1    wreg      unsigned char 
  8932 ;; Registers used:
  8933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8934 ;; Tracked objects:
  8935 ;;		On entry : 0/0
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8939 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8940 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;Total ram usage:       22 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:    3
  8946 ;; This function calls:
  8947 ;;		_MFRC522_Clear_Bit
  8948 ;;		_MFRC522_Rd
  8949 ;;		_MFRC522_Set_Bit
  8950 ;;		_MFRC522_Wr
  8951 ;; This function is called by:
  8952 ;;		_MFRC522_Request
  8953 ;;		_MFRC522_AntiColl
  8954 ;;		_MFRC522_SelectTag
  8955 ;;		_MFRC522_Halt
  8956 ;;		_MFRC522_Auth
  8957 ;;		_MFRC522_Write
  8958 ;;		_MFRC522_Read
  8959 ;; This function uses a non-reentrant model
  8960 ;;
  8961                           
  8962                           
  8963                           ;psect for function _MFRC522_ToCard
  8964  04B2                     _MFRC522_ToCard:	
  8965                           
  8966                           ;incstack = 0
  8967                           ; Regs used in _MFRC522_ToCard: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8968                           ;MFRC522_ToCard@command stored from wreg
  8969  04B2  0020               	movlb	0	; select bank0
  8970  04B3  00B2               	movwf	MFRC522_ToCard@command
  8971                           
  8972                           ;rc522.h: 136: char _status = 2;
  8973  04B4  3002               	movlw	2
  8974  04B5  00A6               	movwf	??_MFRC522_ToCard
  8975  04B6  0826               	movf	??_MFRC522_ToCard,w
  8976  04B7  00AF               	movwf	MFRC522_ToCard@_status
  8977                           
  8978                           ;rc522.h: 137: char irqEn = 0x00;
  8979  04B8  01B1               	clrf	MFRC522_ToCard@irqEn
  8980                           
  8981                           ;rc522.h: 138: char waitIRq = 0x00;
  8982  04B9  01AE               	clrf	MFRC522_ToCard@waitIRq
  8983                           
  8984                           ;rc522.h: 139: char lastBits;
  8985                           ;rc522.h: 140: char n;
  8986                           ;rc522.h: 141: unsigned i;
  8987                           ;rc522.h: 143: switch (command)
  8988  04BA  2CCA               	goto	l4724
  8989  04BB                     l4718:	
  8990                           ;rc522.h: 144: {
  8991                           ;rc522.h: 145: case 0x0E:
  8992                           
  8993                           
  8994                           ;rc522.h: 146: {
  8995                           ;rc522.h: 147: irqEn = 0x12;
  8996  04BB  3012               	movlw	18
  8997  04BC  00A6               	movwf	??_MFRC522_ToCard
  8998  04BD  0826               	movf	??_MFRC522_ToCard,w
  8999  04BE  00B1               	movwf	MFRC522_ToCard@irqEn
  9000                           
  9001                           ;rc522.h: 148: waitIRq = 0x10;
  9002  04BF  3010               	movlw	16
  9003  04C0  2CC6               	goto	L9
  9004  04C1                     l4720:	
  9005                           ;rc522.h: 150: }
  9006                           ;rc522.h: 151: case 0x0C:
  9007                           
  9008                           ;rc522.h: 149: break;
  9009                           
  9010                           
  9011                           ;rc522.h: 152: {
  9012                           ;rc522.h: 153: irqEn = 0x77;
  9013  04C1  3077               	movlw	119
  9014  04C2  00A6               	movwf	??_MFRC522_ToCard
  9015  04C3  0826               	movf	??_MFRC522_ToCard,w
  9016  04C4  00B1               	movwf	MFRC522_ToCard@irqEn
  9017                           
  9018                           ;rc522.h: 154: waitIRq = 0x30;
  9019  04C5  3030               	movlw	48
  9020  04C6                     L9:	
  9021  04C6  00A6               	movwf	??_MFRC522_ToCard
  9022  04C7  0826               	movf	??_MFRC522_ToCard,w
  9023  04C8  00AE               	movwf	MFRC522_ToCard@waitIRq
  9024                           
  9025                           ;rc522.h: 159: }
  9026                           
  9027                           ;rc522.h: 158: break;
  9028                           
  9029                           ;rc522.h: 156: }
  9030                           ;rc522.h: 157: default:
  9031                           
  9032                           ;rc522.h: 155: break;
  9033  04C9  2CD2               	goto	l4726
  9034  04CA                     l4724:	
  9035  04CA  0832               	movf	MFRC522_ToCard@command,w
  9036                           
  9037                           ; Switch size 1, requested type "space"
  9038                           ; Number of cases is 2, Range of values is 12 to 14
  9039                           ; switch strategies available:
  9040                           ; Name         Instructions Cycles
  9041                           ; simple_byte            7     4 (average)
  9042                           ; direct_byte           15     9 (fixed)
  9043                           ; jumptable            263     9 (fixed)
  9044                           ;	Chosen strategy is simple_byte
  9045  04CB  3A0C               	xorlw	12	; case 12
  9046  04CC  1903               	skipnz
  9047  04CD  2CC1               	goto	l4720
  9048  04CE  3A02               	xorlw	2	; case 14
  9049  04CF  1903               	skipnz
  9050  04D0  2CBB               	goto	l4718
  9051  04D1  2CD2               	goto	l4726
  9052  04D2                     l4726:	
  9053                           
  9054                           ;rc522.h: 160: MFRC522_Wr( 0x02, irqEn | 0x80 );
  9055  04D2  0831               	movf	MFRC522_ToCard@irqEn,w
  9056  04D3  3880               	iorlw	128
  9057  04D4  00A6               	movwf	??_MFRC522_ToCard
  9058  04D5  0826               	movf	??_MFRC522_ToCard,w
  9059  04D6  00F4               	movwf	MFRC522_Wr@value
  9060  04D7  3002               	movlw	2
  9061  04D8  319D  2553  3184   	fcall	_MFRC522_Wr
  9062                           
  9063                           ;rc522.h: 161: MFRC522_Clear_Bit( 0x04, 0x80 );
  9064  04DB  3080               	movlw	128
  9065  04DC  0020               	movlb	0	; select bank0
  9066  04DD  00A6               	movwf	??_MFRC522_ToCard
  9067  04DE  0826               	movf	??_MFRC522_ToCard,w
  9068  04DF  00F6               	movwf	MFRC522_Clear_Bit@mask
  9069  04E0  3004               	movlw	4
  9070  04E1  319D  2561  3184   	fcall	_MFRC522_Clear_Bit
  9071                           
  9072                           ;rc522.h: 162: MFRC522_Set_Bit( 0x0A, 0x80 );
  9073  04E4  3080               	movlw	128
  9074  04E5  0020               	movlb	0	; select bank0
  9075  04E6  00A6               	movwf	??_MFRC522_ToCard
  9076  04E7  0826               	movf	??_MFRC522_ToCard,w
  9077  04E8  00F6               	movwf	MFRC522_Set_Bit@mask
  9078  04E9  300A               	movlw	10
  9079  04EA  319D  2538  3184   	fcall	_MFRC522_Set_Bit
  9080                           
  9081                           ;rc522.h: 163: MFRC522_Wr( 0x01, 0x00 );
  9082  04ED  01F4               	clrf	MFRC522_Wr@value
  9083  04EE  3001               	movlw	1
  9084  04EF  319D  2553  3184   	fcall	_MFRC522_Wr
  9085                           
  9086                           ;rc522.h: 168: for ( i=0; i < sendLen; i++ )
  9087  04F2  0020               	movlb	0	; select bank0
  9088  04F3  01B3               	clrf	MFRC522_ToCard@i
  9089  04F4  01B4               	clrf	MFRC522_ToCard@i+1
  9090  04F5                     l4734:	
  9091  04F5  0822               	movf	MFRC522_ToCard@sendLen,w
  9092  04F6  00A6               	movwf	??_MFRC522_ToCard
  9093  04F7  01A7               	clrf	??_MFRC522_ToCard+1
  9094  04F8  0827               	movf	??_MFRC522_ToCard+1,w
  9095  04F9  0234               	subwf	MFRC522_ToCard@i+1,w
  9096  04FA  1D03               	skipz
  9097  04FB  2CFE               	goto	u4685
  9098  04FC  0826               	movf	??_MFRC522_ToCard,w
  9099  04FD  0233               	subwf	MFRC522_ToCard@i,w
  9100  04FE                     u4685:	
  9101  04FE  1803               	btfsc	3,0
  9102  04FF  2D14               	goto	l4736
  9103                           
  9104                           ;rc522.h: 169: {
  9105                           ;rc522.h: 170: MFRC522_Wr( 0x09, sendData[i] );
  9106  0500  0833               	movf	MFRC522_ToCard@i,w
  9107  0501  0720               	addwf	MFRC522_ToCard@sendData,w
  9108  0502  0086               	movwf	6
  9109  0503  0834               	movf	MFRC522_ToCard@i+1,w
  9110  0504  3D21               	addwfc	MFRC522_ToCard@sendData+1,w
  9111  0505  0087               	movwf	7
  9112  0506  0801               	movf	1,w
  9113  0507  00A6               	movwf	??_MFRC522_ToCard
  9114  0508  0826               	movf	??_MFRC522_ToCard,w
  9115  0509  00F4               	movwf	MFRC522_Wr@value
  9116  050A  3009               	movlw	9
  9117  050B  319D  2553  3184   	fcall	_MFRC522_Wr
  9118  050E  3001               	movlw	1
  9119  050F  0020               	movlb	0	; select bank0
  9120  0510  07B3               	addwf	MFRC522_ToCard@i,f
  9121  0511  3000               	movlw	0
  9122  0512  3DB4               	addwfc	MFRC522_ToCard@i+1,f
  9123  0513  2CF5               	goto	l4734
  9124  0514                     l4736:	
  9125                           
  9126                           ;rc522.h: 171: }
  9127                           ;rc522.h: 173: MFRC522_Wr( 0x01, command );
  9128  0514  0832               	movf	MFRC522_ToCard@command,w
  9129  0515  00A6               	movwf	??_MFRC522_ToCard
  9130  0516  0826               	movf	??_MFRC522_ToCard,w
  9131  0517  00F4               	movwf	MFRC522_Wr@value
  9132  0518  3001               	movlw	1
  9133  0519  319D  2553  3184   	fcall	_MFRC522_Wr
  9134                           
  9135                           ;rc522.h: 174: if (command == 0x0C )
  9136  051C  300C               	movlw	12
  9137  051D  0020               	movlb	0	; select bank0
  9138  051E  0632               	xorwf	MFRC522_ToCard@command,w
  9139  051F  1D03               	btfss	3,2
  9140  0520  2D29               	goto	l4742
  9141                           
  9142                           ;rc522.h: 175: {
  9143                           ;rc522.h: 176: MFRC522_Set_Bit( 0x0D, 0x80 );
  9144  0521  3080               	movlw	128
  9145  0522  00A6               	movwf	??_MFRC522_ToCard
  9146  0523  0826               	movf	??_MFRC522_ToCard,w
  9147  0524  00F6               	movwf	MFRC522_Set_Bit@mask
  9148  0525  300D               	movlw	13
  9149  0526  319D  2538  3184   	fcall	_MFRC522_Set_Bit
  9150  0529                     l4742:	
  9151                           
  9152                           ;rc522.h: 177: }
  9153                           ;rc522.h: 180: i = 0xFFFF;
  9154  0529  30FF               	movlw	255
  9155  052A  0020               	movlb	0	; select bank0
  9156  052B  00B3               	movwf	MFRC522_ToCard@i
  9157  052C  30FF               	movlw	255
  9158  052D  00B4               	movwf	MFRC522_ToCard@i+1
  9159  052E                     l4744:	
  9160                           ;rc522.h: 181: do
  9161                           
  9162                           
  9163                           ;rc522.h: 182: {
  9164                           ;rc522.h: 185: n = MFRC522_Rd( 0x04 );
  9165  052E  3004               	movlw	4
  9166  052F  319D  25C4  3184   	fcall	_MFRC522_Rd
  9167  0532  0020               	movlb	0	; select bank0
  9168  0533  00A6               	movwf	??_MFRC522_ToCard
  9169  0534  0826               	movf	??_MFRC522_ToCard,w
  9170  0535  00B5               	movwf	MFRC522_ToCard@n
  9171                           
  9172                           ;rc522.h: 186: i--;
  9173  0536  3001               	movlw	1
  9174  0537  02B3               	subwf	MFRC522_ToCard@i,f
  9175  0538  3000               	movlw	0
  9176  0539  3BB4               	subwfb	MFRC522_ToCard@i+1,f
  9177                           
  9178                           ;rc522.h: 187: }
  9179                           ;rc522.h: 188: while ( i && !(n & 0x01) && !( n & waitIRq ) );
  9180  053A  0833               	movf	MFRC522_ToCard@i,w
  9181  053B  0434               	iorwf	MFRC522_ToCard@i+1,w
  9182  053C  1D03               	btfss	3,2
  9183  053D  1835               	btfsc	MFRC522_ToCard@n,0
  9184  053E  2D43               	goto	l4752
  9185  053F  0835               	movf	MFRC522_ToCard@n,w
  9186  0540  052E               	andwf	MFRC522_ToCard@waitIRq,w
  9187  0541  1903               	btfsc	3,2
  9188  0542  2D2E               	goto	l4744
  9189  0543                     l4752:	
  9190                           
  9191                           ;rc522.h: 189: MFRC522_Clear_Bit( 0x0D, 0x80 );
  9192  0543  3080               	movlw	128
  9193  0544  00A6               	movwf	??_MFRC522_ToCard
  9194  0545  0826               	movf	??_MFRC522_ToCard,w
  9195  0546  00F6               	movwf	MFRC522_Clear_Bit@mask
  9196  0547  300D               	movlw	13
  9197  0548  319D  2561  3184   	fcall	_MFRC522_Clear_Bit
  9198                           
  9199                           ;rc522.h: 190: if (i != 0)
  9200  054B  0020               	movlb	0	; select bank0
  9201  054C  0833               	movf	MFRC522_ToCard@i,w
  9202  054D  0434               	iorwf	MFRC522_ToCard@i+1,w
  9203  054E  1903               	btfsc	3,2
  9204  054F  2DE6               	goto	l459
  9205                           
  9206                           ;rc522.h: 191: {
  9207                           ;rc522.h: 192: if( !( MFRC522_Rd( 0x06 ) & 0x1B ) )
  9208  0550  3006               	movlw	6
  9209  0551  319D  25C4  3184   	fcall	_MFRC522_Rd
  9210  0554  391B               	andlw	27
  9211  0555  1D03               	btfss	3,2
  9212  0556  2DE1               	goto	l4792
  9213                           
  9214                           ;rc522.h: 193: {
  9215                           ;rc522.h: 194: _status = 0;
  9216  0557  0020               	movlb	0	; select bank0
  9217  0558  01AF               	clrf	MFRC522_ToCard@_status
  9218                           
  9219                           ;rc522.h: 195: if ( n & irqEn & 0x01 )
  9220  0559  0831               	movf	MFRC522_ToCard@irqEn,w
  9221  055A  0535               	andwf	MFRC522_ToCard@n,w
  9222  055B  00A6               	movwf	??_MFRC522_ToCard
  9223  055C  1C26               	btfss	??_MFRC522_ToCard,0
  9224  055D  2D60               	goto	l4764
  9225                           
  9226                           ;rc522.h: 196: {
  9227                           ;rc522.h: 197: _status = 1;
  9228  055E  01AF               	clrf	MFRC522_ToCard@_status
  9229  055F  0AAF               	incf	MFRC522_ToCard@_status,f
  9230  0560                     l4764:	
  9231                           
  9232                           ;rc522.h: 198: }
  9233                           ;rc522.h: 199: if ( command == 0x0C )
  9234  0560  300C               	movlw	12
  9235  0561  0632               	xorwf	MFRC522_ToCard@command,w
  9236  0562  1D03               	btfss	3,2
  9237  0563  2DE6               	goto	l459
  9238                           
  9239                           ;rc522.h: 200: {
  9240                           ;rc522.h: 201: n = MFRC522_Rd( 0x0A );
  9241  0564  300A               	movlw	10
  9242  0565  319D  25C4  3184   	fcall	_MFRC522_Rd
  9243  0568  0020               	movlb	0	; select bank0
  9244  0569  00A6               	movwf	??_MFRC522_ToCard
  9245  056A  0826               	movf	??_MFRC522_ToCard,w
  9246  056B  00B5               	movwf	MFRC522_ToCard@n
  9247                           
  9248                           ;rc522.h: 202: lastBits = MFRC522_Rd( 0x0C ) & 0x07;
  9249  056C  300C               	movlw	12
  9250  056D  319D  25C4  3184   	fcall	_MFRC522_Rd
  9251  0570  3907               	andlw	7
  9252  0571  0020               	movlb	0	; select bank0
  9253  0572  00A6               	movwf	??_MFRC522_ToCard
  9254  0573  0826               	movf	??_MFRC522_ToCard,w
  9255  0574  00B0               	movwf	MFRC522_ToCard@lastBits
  9256                           
  9257                           ;rc522.h: 203: if (lastBits)
  9258  0575  0830               	movf	MFRC522_ToCard@lastBits,w
  9259  0576  1903               	btfsc	3,2
  9260  0577  2D98               	goto	l4772
  9261                           
  9262                           ;rc522.h: 204: {
  9263                           ;rc522.h: 205: *backLen = (n-1) * 8 + lastBits;
  9264  0578  0830               	movf	MFRC522_ToCard@lastBits,w
  9265  0579  00A6               	movwf	??_MFRC522_ToCard
  9266  057A  01A7               	clrf	??_MFRC522_ToCard+1
  9267  057B  0835               	movf	MFRC522_ToCard@n,w
  9268  057C  00A8               	movwf	??_MFRC522_ToCard+2
  9269  057D  01A9               	clrf	??_MFRC522_ToCard+3
  9270  057E  35A8               	lslf	??_MFRC522_ToCard+2,f
  9271  057F  0DA9               	rlf	??_MFRC522_ToCard+3,f
  9272  0580  35A8               	lslf	??_MFRC522_ToCard+2,f
  9273  0581  0DA9               	rlf	??_MFRC522_ToCard+3,f
  9274  0582  35A8               	lslf	??_MFRC522_ToCard+2,f
  9275  0583  0DA9               	rlf	??_MFRC522_ToCard+3,f
  9276  0584  0826               	movf	??_MFRC522_ToCard,w
  9277  0585  0728               	addwf	??_MFRC522_ToCard+2,w
  9278  0586  00AA               	movwf	??_MFRC522_ToCard+4
  9279  0587  0827               	movf	??_MFRC522_ToCard+1,w
  9280  0588  3D29               	addwfc	??_MFRC522_ToCard+3,w
  9281  0589  00AB               	movwf	??_MFRC522_ToCard+5
  9282  058A  082A               	movf	??_MFRC522_ToCard+4,w
  9283  058B  3EF8               	addlw	248
  9284  058C  00AC               	movwf	??_MFRC522_ToCard+6
  9285  058D  30FF               	movlw	255
  9286  058E  3D2B               	addwfc	??_MFRC522_ToCard+5,w
  9287  058F  00AD               	movwf	??_MFRC522_ToCard+7
  9288  0590  0825               	movf	MFRC522_ToCard@backLen,w
  9289  0591  0086               	movwf	6
  9290  0592  0187               	clrf	7
  9291  0593  082C               	movf	??_MFRC522_ToCard+6,w
  9292  0594  3FC0               	movwi [0]fsr1
  9293  0595  082D               	movf	??_MFRC522_ToCard+7,w
  9294  0596  3FC1               	movwi [1]fsr1
  9295                           
  9296                           ;rc522.h: 206: }
  9297  0597  2DA8               	goto	l4774
  9298  0598                     l4772:	
  9299                           
  9300                           ;rc522.h: 207: else
  9301                           ;rc522.h: 208: {
  9302                           ;rc522.h: 209: *backLen = n * 8;
  9303  0598  0835               	movf	MFRC522_ToCard@n,w
  9304  0599  00A6               	movwf	??_MFRC522_ToCard
  9305  059A  01A7               	clrf	??_MFRC522_ToCard+1
  9306  059B  35A6               	lslf	??_MFRC522_ToCard,f
  9307  059C  0DA7               	rlf	??_MFRC522_ToCard+1,f
  9308  059D  35A6               	lslf	??_MFRC522_ToCard,f
  9309  059E  0DA7               	rlf	??_MFRC522_ToCard+1,f
  9310  059F  35A6               	lslf	??_MFRC522_ToCard,f
  9311  05A0  0DA7               	rlf	??_MFRC522_ToCard+1,f
  9312  05A1  0825               	movf	MFRC522_ToCard@backLen,w
  9313  05A2  0086               	movwf	6
  9314  05A3  0187               	clrf	7
  9315  05A4  0826               	movf	??_MFRC522_ToCard,w
  9316  05A5  3FC0               	movwi [0]fsr1
  9317  05A6  0827               	movf	??_MFRC522_ToCard+1,w
  9318  05A7  3FC1               	movwi [1]fsr1
  9319  05A8                     l4774:	
  9320                           
  9321                           ;rc522.h: 210: }
  9322                           ;rc522.h: 211: if (n == 0)
  9323  05A8  0835               	movf	MFRC522_ToCard@n,w
  9324  05A9  1D03               	btfss	3,2
  9325  05AA  2DAD               	goto	l4778
  9326                           
  9327                           ;rc522.h: 212: {
  9328                           ;rc522.h: 213: n = 1;
  9329  05AB  01B5               	clrf	MFRC522_ToCard@n
  9330  05AC  0AB5               	incf	MFRC522_ToCard@n,f
  9331  05AD                     l4778:	
  9332                           
  9333                           ;rc522.h: 214: }
  9334                           ;rc522.h: 215: if (n > 16)
  9335  05AD  3011               	movlw	17
  9336  05AE  0235               	subwf	MFRC522_ToCard@n,w
  9337  05AF  1C03               	skipc
  9338  05B0  2DB5               	goto	l4782
  9339                           
  9340                           ;rc522.h: 216: {
  9341                           ;rc522.h: 217: n = 16;
  9342  05B1  3010               	movlw	16
  9343  05B2  00A6               	movwf	??_MFRC522_ToCard
  9344  05B3  0826               	movf	??_MFRC522_ToCard,w
  9345  05B4  00B5               	movwf	MFRC522_ToCard@n
  9346  05B5                     l4782:	
  9347                           
  9348                           ;rc522.h: 218: }
  9349                           ;rc522.h: 220: for (i=0; i < n; i++)
  9350  05B5  01B3               	clrf	MFRC522_ToCard@i
  9351  05B6  01B4               	clrf	MFRC522_ToCard@i+1
  9352  05B7                     l4788:	
  9353  05B7  0835               	movf	MFRC522_ToCard@n,w
  9354  05B8  00A6               	movwf	??_MFRC522_ToCard
  9355  05B9  01A7               	clrf	??_MFRC522_ToCard+1
  9356  05BA  0827               	movf	??_MFRC522_ToCard+1,w
  9357  05BB  0234               	subwf	MFRC522_ToCard@i+1,w
  9358  05BC  1D03               	skipz
  9359  05BD  2DC0               	goto	u4805
  9360  05BE  0826               	movf	??_MFRC522_ToCard,w
  9361  05BF  0233               	subwf	MFRC522_ToCard@i,w
  9362  05C0                     u4805:	
  9363  05C0  1803               	btfsc	3,0
  9364  05C1  2DD9               	goto	l4790
  9365                           
  9366                           ;rc522.h: 221: {
  9367                           ;rc522.h: 222: backData[i] = MFRC522_Rd( 0x09 );
  9368  05C2  3009               	movlw	9
  9369  05C3  319D  25C4  3184   	fcall	_MFRC522_Rd
  9370  05C6  0020               	movlb	0	; select bank0
  9371  05C7  00A6               	movwf	??_MFRC522_ToCard
  9372  05C8  0833               	movf	MFRC522_ToCard@i,w
  9373  05C9  0723               	addwf	MFRC522_ToCard@backData,w
  9374  05CA  00A7               	movwf	??_MFRC522_ToCard+1
  9375  05CB  0834               	movf	MFRC522_ToCard@i+1,w
  9376  05CC  3D24               	addwfc	MFRC522_ToCard@backData+1,w
  9377  05CD  00A8               	movwf	??_MFRC522_ToCard+2
  9378  05CE  0827               	movf	??_MFRC522_ToCard+1,w
  9379  05CF  0086               	movwf	6
  9380  05D0  0828               	movf	??_MFRC522_ToCard+2,w
  9381  05D1  0087               	movwf	7
  9382  05D2  0826               	movf	??_MFRC522_ToCard,w
  9383  05D3  0081               	movwf	1
  9384  05D4  3001               	movlw	1
  9385  05D5  07B3               	addwf	MFRC522_ToCard@i,f
  9386  05D6  3000               	movlw	0
  9387  05D7  3DB4               	addwfc	MFRC522_ToCard@i+1,f
  9388  05D8  2DB7               	goto	l4788
  9389  05D9                     l4790:	
  9390                           
  9391                           ;rc522.h: 223: }
  9392                           ;rc522.h: 225: backData[i] = 0;
  9393  05D9  0833               	movf	MFRC522_ToCard@i,w
  9394  05DA  0723               	addwf	MFRC522_ToCard@backData,w
  9395  05DB  0086               	movwf	6
  9396  05DC  0834               	movf	MFRC522_ToCard@i+1,w
  9397  05DD  3D24               	addwfc	MFRC522_ToCard@backData+1,w
  9398  05DE  0087               	movwf	7
  9399  05DF  0181               	clrf	1
  9400                           
  9401                           ;rc522.h: 226: }
  9402                           ;rc522.h: 227: }
  9403  05E0  2DE6               	goto	l459
  9404  05E1                     l4792:	
  9405                           
  9406                           ;rc522.h: 228: else
  9407                           ;rc522.h: 229: {
  9408                           ;rc522.h: 230: _status = 2;
  9409  05E1  3002               	movlw	2
  9410  05E2  0020               	movlb	0	; select bank0
  9411  05E3  00A6               	movwf	??_MFRC522_ToCard
  9412  05E4  0826               	movf	??_MFRC522_ToCard,w
  9413  05E5  00AF               	movwf	MFRC522_ToCard@_status
  9414  05E6                     l459:	
  9415                           
  9416                           ;rc522.h: 231: }
  9417                           ;rc522.h: 232: }
  9418                           ;rc522.h: 235: return _status;
  9419  05E6  082F               	movf	MFRC522_ToCard@_status,w
  9420  05E7  0008               	return
  9421  05E8                     __end_of_MFRC522_ToCard:	
  9422                           
  9423                           	psect	text39
  9424  1D38                     __ptext39:	
  9425 ;; *************** function _MFRC522_Set_Bit *****************
  9426 ;; Defined at:
  9427 ;;		line 96 in file "rc522.h"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  addr            1    wreg     unsigned char 
  9430 ;;  mask            1    6[COMMON] unsigned char 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  addr            1    8[COMMON] unsigned char 
  9433 ;; Return value:  Size  Location     Type
  9434 ;;                  1    wreg      void 
  9435 ;; Registers used:
  9436 ;;		wreg, status,2, status,0, pclath, cstack
  9437 ;; Tracked objects:
  9438 ;;		On entry : 0/0
  9439 ;;		On exit  : 0/0
  9440 ;;		Unchanged: 0/0
  9441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9442 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9443 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9444 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9445 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9446 ;;Total ram usage:        3 bytes
  9447 ;; Hardware stack levels used:    1
  9448 ;; Hardware stack levels required when called:    2
  9449 ;; This function calls:
  9450 ;;		_MFRC522_Rd
  9451 ;;		_MFRC522_Wr
  9452 ;; This function is called by:
  9453 ;;		_MFRC522_ToCard
  9454 ;;		_RfidOn
  9455 ;;		_RFID_Init
  9456 ;;		_MFRC522_CRC
  9457 ;; This function uses a non-reentrant model
  9458 ;;
  9459                           
  9460                           
  9461                           ;psect for function _MFRC522_Set_Bit
  9462  1D38                     _MFRC522_Set_Bit:	
  9463                           
  9464                           ;incstack = 0
  9465                           ; Regs used in _MFRC522_Set_Bit: [wreg+status,2+status,0+pclath+cstack]
  9466                           ;MFRC522_Set_Bit@addr stored from wreg
  9467  1D38  00F8               	movwf	MFRC522_Set_Bit@addr
  9468                           
  9469                           ;rc522.h: 98: MFRC522_Wr( addr, MFRC522_Rd( addr ) | mask );
  9470  1D39  0878               	movf	MFRC522_Set_Bit@addr,w
  9471  1D3A  319D  25C4  319D   	fcall	_MFRC522_Rd
  9472  1D3D  0476               	iorwf	MFRC522_Set_Bit@mask,w
  9473  1D3E  00F7               	movwf	??_MFRC522_Set_Bit
  9474  1D3F  0877               	movf	??_MFRC522_Set_Bit,w
  9475  1D40  00F4               	movwf	MFRC522_Wr@value
  9476  1D41  0878               	movf	MFRC522_Set_Bit@addr,w
  9477  1D42  319D  2553         	fcall	_MFRC522_Wr
  9478  1D44  0008               	return
  9479  1D45                     __end_of_MFRC522_Set_Bit:	
  9480                           
  9481                           	psect	text40
  9482  1D61                     __ptext40:	
  9483 ;; *************** function _MFRC522_Clear_Bit *****************
  9484 ;; Defined at:
  9485 ;;		line 92 in file "rc522.h"
  9486 ;; Parameters:    Size  Location     Type
  9487 ;;  addr            1    wreg     unsigned char 
  9488 ;;  mask            1    6[COMMON] unsigned char 
  9489 ;; Auto vars:     Size  Location     Type
  9490 ;;  addr            1    9[COMMON] unsigned char 
  9491 ;; Return value:  Size  Location     Type
  9492 ;;                  1    wreg      void 
  9493 ;; Registers used:
  9494 ;;		wreg, status,2, status,0, pclath, cstack
  9495 ;; Tracked objects:
  9496 ;;		On entry : 0/0
  9497 ;;		On exit  : 0/0
  9498 ;;		Unchanged: 0/0
  9499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9500 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;Total ram usage:        4 bytes
  9505 ;; Hardware stack levels used:    1
  9506 ;; Hardware stack levels required when called:    2
  9507 ;; This function calls:
  9508 ;;		_MFRC522_Rd
  9509 ;;		_MFRC522_Wr
  9510 ;; This function is called by:
  9511 ;;		_MFRC522_ToCard
  9512 ;;		_MFRC522_AntiColl
  9513 ;;		_RfidOff
  9514 ;;		_MFRC522_CRC
  9515 ;;		_MFRC522_Halt
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           
  9520                           ;psect for function _MFRC522_Clear_Bit
  9521  1D61                     _MFRC522_Clear_Bit:	
  9522                           
  9523                           ;incstack = 0
  9524                           ; Regs used in _MFRC522_Clear_Bit: [wreg+status,2+status,0+pclath+cstack]
  9525                           ;MFRC522_Clear_Bit@addr stored from wreg
  9526  1D61  00F9               	movwf	MFRC522_Clear_Bit@addr
  9527                           
  9528                           ;rc522.h: 94: MFRC522_Wr( addr, MFRC522_Rd( addr ) & (~mask) );
  9529  1D62  0976               	comf	MFRC522_Clear_Bit@mask,w
  9530  1D63  00F7               	movwf	??_MFRC522_Clear_Bit
  9531  1D64  0879               	movf	MFRC522_Clear_Bit@addr,w
  9532  1D65  319D  25C4  319D   	fcall	_MFRC522_Rd
  9533  1D68  0577               	andwf	??_MFRC522_Clear_Bit,w
  9534  1D69  00F8               	movwf	??_MFRC522_Clear_Bit+1
  9535  1D6A  0878               	movf	??_MFRC522_Clear_Bit+1,w
  9536  1D6B  00F4               	movwf	MFRC522_Wr@value
  9537  1D6C  0879               	movf	MFRC522_Clear_Bit@addr,w
  9538  1D6D  319D  2553         	fcall	_MFRC522_Wr
  9539  1D6F  0008               	return
  9540  1D70                     __end_of_MFRC522_Clear_Bit:	
  9541                           
  9542                           	psect	text41
  9543  1D53                     __ptext41:	
  9544 ;; *************** function _MFRC522_Wr *****************
  9545 ;; Defined at:
  9546 ;;		line 73 in file "rc522.h"
  9547 ;; Parameters:    Size  Location     Type
  9548 ;;  addr            1    wreg     unsigned char 
  9549 ;;  value           1    4[COMMON] unsigned char 
  9550 ;; Auto vars:     Size  Location     Type
  9551 ;;  addr            1    5[COMMON] unsigned char 
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      void 
  9554 ;; Registers used:
  9555 ;;		wreg, status,2, status,0, pclath, cstack
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9561 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9562 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9564 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9565 ;;Total ram usage:        2 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:    1
  9568 ;; This function calls:
  9569 ;;		_SPI_Write
  9570 ;; This function is called by:
  9571 ;;		_MFRC522_Clear_Bit
  9572 ;;		_MFRC522_Set_Bit
  9573 ;;		_MFRC522_ToCard
  9574 ;;		_MFRC522_Request
  9575 ;;		_MFRC522_AntiColl
  9576 ;;		_MFRC522_Reset
  9577 ;;		_RFID_Init
  9578 ;;		_MFRC522_CRC
  9579 ;; This function uses a non-reentrant model
  9580 ;;
  9581                           
  9582                           
  9583                           ;psect for function _MFRC522_Wr
  9584  1D53                     _MFRC522_Wr:	
  9585                           
  9586                           ;incstack = 0
  9587                           ; Regs used in _MFRC522_Wr: [wreg+status,2+status,0+pclath+cstack]
  9588                           ;MFRC522_Wr@addr stored from wreg
  9589  1D53  00F5               	movwf	MFRC522_Wr@addr
  9590                           
  9591                           ;rc522.h: 75: PORTCbits.RC7 = 0;
  9592  1D54  0020               	movlb	0	; select bank0
  9593  1D55  138E               	bcf	14,7	;volatile
  9594                           
  9595                           ;rc522.h: 76: SPI_Write(( addr << 1 ) & 0x7E);
  9596  1D56  3575               	lslf	MFRC522_Wr@addr,w
  9597  1D57  397E               	andlw	126
  9598  1D58  319C  24F8  319D   	fcall	_SPI_Write
  9599                           
  9600                           ;rc522.h: 77: SPI_Write(value);
  9601  1D5B  0874               	movf	MFRC522_Wr@value,w
  9602  1D5C  319C  24F8         	fcall	_SPI_Write
  9603                           
  9604                           ;rc522.h: 78: PORTCbits.RC7 = 1;
  9605  1D5E  0020               	movlb	0	; select bank0
  9606  1D5F  178E               	bsf	14,7	;volatile
  9607  1D60  0008               	return
  9608  1D61                     __end_of_MFRC522_Wr:	
  9609                           
  9610                           	psect	text42
  9611  1DC4                     __ptext42:	
  9612 ;; *************** function _MFRC522_Rd *****************
  9613 ;; Defined at:
  9614 ;;		line 81 in file "rc522.h"
  9615 ;; Parameters:    Size  Location     Type
  9616 ;;  addr            1    wreg     unsigned char 
  9617 ;; Auto vars:     Size  Location     Type
  9618 ;;  addr            1    2[COMMON] unsigned char 
  9619 ;;  val             1    3[COMMON] unsigned char 
  9620 ;; Return value:  Size  Location     Type
  9621 ;;                  1    wreg      unsigned char 
  9622 ;; Registers used:
  9623 ;;		wreg, status,2, status,0, pclath, cstack
  9624 ;; Tracked objects:
  9625 ;;		On entry : 0/0
  9626 ;;		On exit  : 0/0
  9627 ;;		Unchanged: 0/0
  9628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9630 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9632 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9633 ;;Total ram usage:        3 bytes
  9634 ;; Hardware stack levels used:    1
  9635 ;; Hardware stack levels required when called:    1
  9636 ;; This function calls:
  9637 ;;		_SPI_Write
  9638 ;; This function is called by:
  9639 ;;		_MFRC522_Clear_Bit
  9640 ;;		_MFRC522_Set_Bit
  9641 ;;		_MFRC522_ToCard
  9642 ;;		_MFRC522_CRC
  9643 ;;		_MFRC522_Auth
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           
  9648                           ;psect for function _MFRC522_Rd
  9649  1DC4                     _MFRC522_Rd:	
  9650                           
  9651                           ;incstack = 0
  9652                           ; Regs used in _MFRC522_Rd: [wreg+status,2+status,0+pclath+cstack]
  9653                           ;MFRC522_Rd@addr stored from wreg
  9654  1DC4  00F2               	movwf	MFRC522_Rd@addr
  9655                           
  9656                           ;rc522.h: 83: PORTCbits.RC7 = 0;
  9657  1DC5  0020               	movlb	0	; select bank0
  9658  1DC6  138E               	bcf	14,7	;volatile
  9659                           
  9660                           ;rc522.h: 84: SPI_Write((( addr << 1 ) & 0x7E) | 0x80);
  9661  1DC7  3572               	lslf	MFRC522_Rd@addr,w
  9662  1DC8  397E               	andlw	126
  9663  1DC9  3880               	iorlw	128
  9664  1DCA  319C  24F8  319D   	fcall	_SPI_Write
  9665                           
  9666                           ;rc522.h: 85: CKP = 0;
  9667  1DCD  0024               	movlb	4	; select bank4
  9668  1DCE  1215               	bcf	21,4	;volatile
  9669                           
  9670                           ;rc522.h: 86: char val = SPI_Write(0x00);
  9671  1DCF  3000               	movlw	0
  9672  1DD0  319C  24F8         	fcall	_SPI_Write
  9673  1DD2  00F1               	movwf	??_MFRC522_Rd
  9674  1DD3  0871               	movf	??_MFRC522_Rd,w
  9675  1DD4  00F3               	movwf	MFRC522_Rd@val
  9676                           
  9677                           ;rc522.h: 87: PORTCbits.RC7 = 1;
  9678  1DD5  0020               	movlb	0	; select bank0
  9679  1DD6  178E               	bsf	14,7	;volatile
  9680                           
  9681                           ;rc522.h: 89: return val;
  9682  1DD7  0873               	movf	MFRC522_Rd@val,w
  9683  1DD8  0008               	return
  9684  1DD9                     __end_of_MFRC522_Rd:	
  9685                           
  9686                           	psect	text43
  9687  12A6                     __ptext43:	
  9688 ;; *************** function _Bip *****************
  9689 ;; Defined at:
  9690 ;;		line 14 in file "misc.h"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  n               2    0[COMMON] int 
  9693 ;;  t               2    2[COMMON] int 
  9694 ;; Auto vars:     Size  Location     Type
  9695 ;;  j               2    8[COMMON] int 
  9696 ;;  i               2    6[COMMON] int 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		wreg, status,2
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9707 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9708 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9709 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9710 ;;Total ram usage:       10 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; This function calls:
  9713 ;;		Nothing
  9714 ;; This function is called by:
  9715 ;;		_RFID_Ok
  9716 ;;		_main
  9717 ;;		_SetAlarmOn
  9718 ;; This function uses a non-reentrant model
  9719 ;;
  9720                           
  9721                           
  9722                           ;psect for function _Bip
  9723  12A6                     _Bip:	
  9724                           
  9725                           ;misc.h: 15: for(int i=0;i<n;i++){
  9726                           
  9727                           ;incstack = 0
  9728                           ; Regs used in _Bip: [wreg+status,2]
  9729  12A6  01F6               	clrf	Bip@i
  9730  12A7  01F7               	clrf	Bip@i+1
  9731  12A8                     l189:	
  9732  12A8  0877               	movf	Bip@i+1,w
  9733  12A9  3A80               	xorlw	128
  9734  12AA  00F4               	movwf	??_Bip
  9735  12AB  0871               	movf	Bip@n+1,w
  9736  12AC  3A80               	xorlw	128
  9737  12AD  0274               	subwf	??_Bip,w
  9738  12AE  1D03               	skipz
  9739  12AF  2AB2               	goto	u5235
  9740  12B0  0870               	movf	Bip@n,w
  9741  12B1  0276               	subwf	Bip@i,w
  9742  12B2                     u5235:	
  9743  12B2  1803               	btfsc	3,0
  9744  12B3  2AE1               	goto	l194
  9745                           
  9746                           ;misc.h: 16: for (int j=0;j<t;j++){
  9747  12B4  01F8               	clrf	Bip@j
  9748  12B5  01F9               	clrf	Bip@j+1
  9749  12B6                     l191:	
  9750  12B6  0879               	movf	Bip@j+1,w
  9751  12B7  3A80               	xorlw	128
  9752  12B8  00F4               	movwf	??_Bip
  9753  12B9  0873               	movf	Bip@t+1,w
  9754  12BA  3A80               	xorlw	128
  9755  12BB  0274               	subwf	??_Bip,w
  9756  12BC  1D03               	skipz
  9757  12BD  2AC0               	goto	u5225
  9758  12BE  0872               	movf	Bip@t,w
  9759  12BF  0278               	subwf	Bip@j,w
  9760  12C0                     u5225:	
  9761  12C0  1803               	btfsc	3,0
  9762  12C1  2AD3               	goto	l5060
  9763                           
  9764                           ;misc.h: 17: PORTCbits.RC0 = 1;
  9765  12C2  0020               	movlb	0	; select bank0
  9766  12C3  140E               	bsf	14,0	;volatile
  9767                           
  9768                           ;misc.h: 18: _delay((unsigned long)((130)*(16000000/4000000.0)));
  9769  12C4  30AD               	movlw	173
  9770  12C5  00F4               	movwf	??_Bip
  9771  12C6                     u6717:	
  9772  12C6  0BF4               	decfsz	??_Bip,f
  9773  12C7  2AC6               	goto	u6717
  9774                           
  9775                           ;misc.h: 19: PORTCbits.RC0 = 0;
  9776  12C8  0020               	movlb	0	; select bank0
  9777  12C9  100E               	bcf	14,0	;volatile
  9778                           
  9779                           ;misc.h: 20: _delay((unsigned long)((130)*(16000000/4000000.0)));
  9780  12CA  30AD               	movlw	173
  9781  12CB  00F4               	movwf	??_Bip
  9782  12CC                     u6727:	
  9783  12CC  0BF4               	decfsz	??_Bip,f
  9784  12CD  2ACC               	goto	u6727
  9785  12CE  3001               	movlw	1
  9786  12CF  07F8               	addwf	Bip@j,f
  9787  12D0  3000               	movlw	0
  9788  12D1  3DF9               	addwfc	Bip@j+1,f
  9789  12D2  2AB6               	goto	l191
  9790  12D3                     l5060:	
  9791                           
  9792                           ;misc.h: 21: }
  9793                           ;misc.h: 22: _delay((unsigned long)((20)*(16000000/4000.0)));
  9794  12D3  3068               	movlw	104
  9795  12D4  00F5               	movwf	??_Bip+1
  9796  12D5  30E4               	movlw	228
  9797  12D6  00F4               	movwf	??_Bip
  9798  12D7                     u6737:	
  9799  12D7  0BF4               	decfsz	??_Bip,f
  9800  12D8  2AD7               	goto	u6737
  9801  12D9  0BF5               	decfsz	??_Bip+1,f
  9802  12DA  2AD7               	goto	u6737
  9803  12DB  0000               	nop
  9804  12DC  3001               	movlw	1
  9805  12DD  07F6               	addwf	Bip@i,f
  9806  12DE  3000               	movlw	0
  9807  12DF  3DF7               	addwfc	Bip@i+1,f
  9808  12E0  2AA8               	goto	l189
  9809  12E1                     l194:	
  9810                           
  9811                           ;misc.h: 23: }
  9812                           ;misc.h: 24: PORTCbits.RC0 = 1;
  9813  12E1  0020               	movlb	0	; select bank0
  9814  12E2  140E               	bsf	14,0	;volatile
  9815  12E3  0008               	return
  9816  12E4                     __end_of_Bip:	
  9817                           
  9818                           	psect	text44
  9819  15E8                     __ptext44:	
  9820 ;; *************** function _CheckSW1 *****************
  9821 ;; Defined at:
  9822 ;;		line 184 in file "main.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;		None
  9825 ;; Auto vars:     Size  Location     Type
  9826 ;;		None
  9827 ;; Return value:  Size  Location     Type
  9828 ;;                  1    wreg      void 
  9829 ;; Registers used:
  9830 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9831 ;; Tracked objects:
  9832 ;;		On entry : 0/0
  9833 ;;		On exit  : 0/0
  9834 ;;		Unchanged: 0/0
  9835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9838 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9839 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9840 ;;Total ram usage:        3 bytes
  9841 ;; Hardware stack levels used:    1
  9842 ;; Hardware stack levels required when called:    7
  9843 ;; This function calls:
  9844 ;;		_Deactivate_Scroll
  9845 ;;		_GsmWakeUp
  9846 ;;		_Left_HorizontalScroll
  9847 ;;		_ResetScreenTimer
  9848 ;;		_ScreenOn
  9849 ;;		_SetAlarmOff
  9850 ;;		_ShowIcon
  9851 ;;		_ShowMessage
  9852 ;;		___delay_sec
  9853 ;; This function is called by:
  9854 ;;		_main
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           
  9859                           ;psect for function _CheckSW1
  9860  15E8                     _CheckSW1:	
  9861                           
  9862                           ;main.c: 185: if(PORTBbits.RB7 == 0){
  9863                           
  9864                           ;incstack = 0
  9865                           ; Regs used in _CheckSW1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9866  15E8  0020               	movlb	0	; select bank0
  9867  15E9  1B8D               	btfsc	13,7	;volatile
  9868  15EA  0008               	return
  9869                           
  9870                           ;main.c: 186: if(!alarmOn && sleepMode){
  9871  15EB  0866               	movf	_alarmOn,w
  9872  15EC  1D03               	btfss	3,2
  9873  15ED  2E31               	goto	l5780
  9874  15EE  086E               	movf	_sleepMode,w
  9875  15EF  1903               	btfsc	3,2
  9876  15F0  2E31               	goto	l5780
  9877                           
  9878                           ;main.c: 187: sleepMode = 0;
  9879  15F1  01EE               	clrf	_sleepMode
  9880                           
  9881                           ;main.c: 188: ScreenOn();
  9882  15F2  319C  24CD  3195   	fcall	_ScreenOn
  9883                           
  9884                           ;main.c: 189: GsmWakeUp();
  9885  15F5  319C  24E2  3195   	fcall	_GsmWakeUp
  9886                           
  9887                           ;main.c: 190: ShowMessage("WELCOME@@", 3);
  9888  15F8  307F               	movlw	low (STR_63| (0+32768))
  9889  15F9  0020               	movlb	0	; select bank0
  9890  15FA  00B0               	movwf	ShowMessage@message
  9891  15FB  308E               	movlw	high (STR_63| (0+32768))
  9892  15FC  00B1               	movwf	ShowMessage@message+1
  9893  15FD  3003               	movlw	3
  9894  15FE  00B8               	movwf	??_CheckSW1
  9895  15FF  0838               	movf	??_CheckSW1,w
  9896  1600  00B2               	movwf	ShowMessage@page
  9897  1601  319F  278E  3195   	fcall	_ShowMessage
  9898                           
  9899                           ;main.c: 191: Left_HorizontalScroll(3, 4, 4);
  9900  1604  3004               	movlw	4
  9901  1605  0020               	movlb	0	; select bank0
  9902  1606  00B8               	movwf	??_CheckSW1
  9903  1607  0838               	movf	??_CheckSW1,w
  9904  1608  00F2               	movwf	Left_HorizontalScroll@end_page
  9905  1609  3004               	movlw	4
  9906  160A  00B9               	movwf	??_CheckSW1+1
  9907  160B  0839               	movf	??_CheckSW1+1,w
  9908  160C  00F3               	movwf	Left_HorizontalScroll@set_time
  9909  160D  3003               	movlw	3
  9910  160E  319F  2747  3195   	fcall	_Left_HorizontalScroll
  9911                           
  9912                           ;main.c: 192: __delay_sec (4);
  9913  1611  3004               	movlw	4
  9914  1612  00F0               	movwf	___delay_sec@n
  9915  1613  3000               	movlw	0
  9916  1614  00F1               	movwf	___delay_sec@n+1
  9917  1615  319D  25D9  3195   	fcall	___delay_sec
  9918                           
  9919                           ;main.c: 193: Deactivate_Scroll();
  9920  1618  319C  24C9  3195   	fcall	_Deactivate_Scroll
  9921                           
  9922                           ;main.c: 194: SetAlarmOff();
  9923  161B  319D  257F  3195   	fcall	_SetAlarmOff
  9924                           
  9925                           ;main.c: 198: ShowIcon("1", 112, 6);
  9926  161E  30CF               	movlw	low ((STR_30+4)| (0+32768))
  9927  161F  0020               	movlb	0	; select bank0
  9928  1620  00B0               	movwf	ShowIcon@id
  9929  1621  308E               	movlw	high ((STR_30+4)| (0+32768))
  9930  1622  00B1               	movwf	ShowIcon@id+1
  9931  1623  3070               	movlw	112
  9932  1624  00B8               	movwf	??_CheckSW1
  9933  1625  0838               	movf	??_CheckSW1,w
  9934  1626  00B2               	movwf	ShowIcon@seg
  9935  1627  3006               	movlw	6
  9936  1628  00B9               	movwf	??_CheckSW1+1
  9937  1629  0839               	movf	??_CheckSW1+1,w
  9938  162A  00B3               	movwf	ShowIcon@page
  9939  162B  3190  2073  3195   	fcall	_ShowIcon
  9940                           
  9941                           ;main.c: 199: imgSetup=1;
  9942  162E  0020               	movlb	0	; select bank0
  9943  162F  01EA               	clrf	_imgSetup
  9944  1630  0AEA               	incf	_imgSetup,f
  9945  1631                     l5780:	
  9946                           
  9947                           ;main.c: 200: }
  9948                           ;main.c: 201: ResetScreenTimer();
  9949  1631  319C  24D5  3195   	fcall	_ResetScreenTimer
  9950                           
  9951                           ;main.c: 202: imgSetup=!imgSetup;
  9952  1634  0020               	movlb	0	; select bank0
  9953  1635  086A               	movf	_imgSetup,w
  9954  1636  1D03               	btfss	3,2
  9955  1637  2E3A               	goto	u6030
  9956  1638  3001               	movlw	1
  9957  1639  2E3B               	goto	u6040
  9958  163A                     u6030:	
  9959  163A  3000               	movlw	0
  9960  163B                     u6040:	
  9961  163B  00B8               	movwf	??_CheckSW1
  9962  163C  0838               	movf	??_CheckSW1,w
  9963  163D  00EA               	movwf	_imgSetup
  9964                           
  9965                           ;main.c: 203: if(imgSetup)
  9966  163E  086A               	movf	_imgSetup,w
  9967  163F  1903               	btfsc	3,2
  9968  1640  2E45               	goto	l5788
  9969                           
  9970                           ;main.c: 204: ShowIcon("0", 112, 6);
  9971  1641  3006               	movlw	low (STR_54| (0+32768))
  9972  1642  00B0               	movwf	ShowIcon@id
  9973  1643  308F               	movlw	high (STR_54| (0+32768))
  9974  1644  2E49               	goto	L10
  9975  1645                     l5788:	
  9976                           
  9977                           ;main.c: 205: else
  9978                           ;main.c: 206: ShowIcon("1", 112, 6);
  9979  1645  30CF               	movlw	low ((STR_30+4)| (0+32768))
  9980  1646  0020               	movlb	0	; select bank0
  9981  1647  00B0               	movwf	ShowIcon@id
  9982  1648  308E               	movlw	high ((STR_30+4)| (0+32768))
  9983  1649                     L10:	
  9984  1649  00B1               	movwf	ShowIcon@id+1
  9985  164A  3070               	movlw	112
  9986  164B  00B8               	movwf	??_CheckSW1
  9987  164C  0838               	movf	??_CheckSW1,w
  9988  164D  00B2               	movwf	ShowIcon@seg
  9989  164E  3006               	movlw	6
  9990  164F  00B9               	movwf	??_CheckSW1+1
  9991  1650  0839               	movf	??_CheckSW1+1,w
  9992  1651  00B3               	movwf	ShowIcon@page
  9993  1652  3190  2073  3195   	fcall	_ShowIcon
  9994                           
  9995                           ;main.c: 207: _delay((unsigned long)((200)*(16000000/4000.0)));
  9996  1655  3005               	movlw	5
  9997  1656  0020               	movlb	0	; select bank0
  9998  1657  00BA               	movwf	??_CheckSW1+2
  9999  1658  300F               	movlw	15
 10000  1659  00B9               	movwf	??_CheckSW1+1
 10001  165A  30F4               	movlw	244
 10002  165B  00B8               	movwf	??_CheckSW1
 10003  165C                     u6747:	
 10004  165C  0BB8               	decfsz	??_CheckSW1,f
 10005  165D  2E5C               	goto	u6747
 10006  165E  0BB9               	decfsz	??_CheckSW1+1,f
 10007  165F  2E5C               	goto	u6747
 10008  1660  0BBA               	decfsz	??_CheckSW1+2,f
 10009  1661  2E5C               	goto	u6747
 10010  1662  0008               	return
 10011  1663                     __end_of_CheckSW1:	
 10012                           
 10013                           	psect	text45
 10014  1DD9                     __ptext45:	
 10015 ;; *************** function ___delay_sec *****************
 10016 ;; Defined at:
 10017 ;;		line 10 in file "misc.h"
 10018 ;; Parameters:    Size  Location     Type
 10019 ;;  n               2    0[COMMON] int 
 10020 ;; Auto vars:     Size  Location     Type
 10021 ;;		None
 10022 ;; Return value:  Size  Location     Type
 10023 ;;                  1    wreg      void 
 10024 ;; Registers used:
 10025 ;;		wreg, status,2, status,0
 10026 ;; Tracked objects:
 10027 ;;		On entry : 0/0
 10028 ;;		On exit  : 0/0
 10029 ;;		Unchanged: 0/0
 10030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10031 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10033 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10034 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10035 ;;Total ram usage:        5 bytes
 10036 ;; Hardware stack levels used:    1
 10037 ;; This function calls:
 10038 ;;		Nothing
 10039 ;; This function is called by:
 10040 ;;		_ReadLastSMS
 10041 ;;		_ReadPhoneNumber
 10042 ;;		_RFID_Ok
 10043 ;;		_main
 10044 ;;		_CheckSW1
 10045 ;;		_SettingMenu
 10046 ;;		_RaiseAlarm
 10047 ;; This function uses a non-reentrant model
 10048 ;;
 10049                           
 10050                           
 10051                           ;psect for function ___delay_sec
 10052  1DD9                     ___delay_sec:	
 10053  1DD9                     l4826:	
 10054                           ;misc.h: 11: while(n--) _delay((unsigned long)((1000)*(16000000/4000.0)));
 10055                           
 10056                           ;incstack = 0
 10057                           ; Regs used in ___delay_sec: [wreg+status,2+status,0]
 10058                           
 10059  1DD9  30FF               	movlw	255
 10060  1DDA  07F0               	addwf	___delay_sec@n,f
 10061  1DDB  30FF               	movlw	255
 10062  1DDC  3DF1               	addwfc	___delay_sec@n+1,f
 10063  1DDD  0A70               	incf	___delay_sec@n,w
 10064  1DDE  1903               	btfsc	3,2
 10065  1DDF  0A71               	incf	___delay_sec@n+1,w
 10066  1DE0  1903               	btfsc	3,2
 10067  1DE1  0008               	return
 10068  1DE2  3015               	movlw	21
 10069  1DE3  00F4               	movwf	??___delay_sec+2
 10070  1DE4  304B               	movlw	75
 10071  1DE5  00F3               	movwf	??___delay_sec+1
 10072  1DE6  30D1               	movlw	209
 10073  1DE7  00F2               	movwf	??___delay_sec
 10074  1DE8                     u6757:	
 10075  1DE8  0BF2               	decfsz	??___delay_sec,f
 10076  1DE9  2DE8               	goto	u6757
 10077  1DEA  0BF3               	decfsz	??___delay_sec+1,f
 10078  1DEB  2DE8               	goto	u6757
 10079  1DEC  0BF4               	decfsz	??___delay_sec+2,f
 10080  1DED  2DE8               	goto	u6757
 10081  1DEE  0000               	nop
 10082  1DEF  2DD9               	goto	l4826
 10083  1DF0                     __end_of___delay_sec:	
 10084                           
 10085                           	psect	text46
 10086  1073                     __ptext46:	
 10087 ;; *************** function _ShowIcon *****************
 10088 ;; Defined at:
 10089 ;;		line 196 in file "gsm.h"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  id              2   16[BANK0 ] PTR const unsigned char 
 10092 ;;		 -> STR_79(2), STR_77(2), STR_76(2), STR_75(2), 
 10093 ;;		 -> STR_74(2), STR_73(2), STR_72(2), STR_71(2), 
 10094 ;;		 -> STR_70(2), STR_69(2), STR_66(2), STR_65(2), 
 10095 ;;		 -> STR_64(2), 
 10096 ;;  seg             1   18[BANK0 ] unsigned char 
 10097 ;;  page            1   19[BANK0 ] unsigned char 
 10098 ;; Auto vars:     Size  Location     Type
 10099 ;;		None
 10100 ;; Return value:  Size  Location     Type
 10101 ;;                  1    wreg      void 
 10102 ;; Registers used:
 10103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10104 ;; Tracked objects:
 10105 ;;		On entry : 0/0
 10106 ;;		On exit  : 0/0
 10107 ;;		Unchanged: 0/0
 10108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10109 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10111 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10112 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10113 ;;Total ram usage:        8 bytes
 10114 ;; Hardware stack levels used:    1
 10115 ;; Hardware stack levels required when called:    5
 10116 ;; This function calls:
 10117 ;;		_Oled_ConstText
 10118 ;;		_Oled_SetFont
 10119 ;; This function is called by:
 10120 ;;		_CheckSW1
 10121 ;;		_CheckSW2
 10122 ;;		_SettingMenu
 10123 ;;		_Reset
 10124 ;; This function uses a non-reentrant model
 10125 ;;
 10126                           
 10127                           
 10128                           ;psect for function _ShowIcon
 10129  1073                     _ShowIcon:	
 10130                           
 10131                           ;gsm.h: 197: Oled_SetFont(Icon16x16, 16, 16, 48, 49);
 10132                           
 10133                           ;incstack = 0
 10134                           ; Regs used in _ShowIcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10135  1073  30BA               	movlw	low (_Icon16x16| (0+32768))
 10136  1074  0020               	movlb	0	; select bank0
 10137  1075  00A0               	movwf	Oled_SetFont@_font
 10138  1076  308B               	movlw	high (_Icon16x16| (0+32768))
 10139  1077  00A1               	movwf	Oled_SetFont@_font+1
 10140  1078  3010               	movlw	16
 10141  1079  00B4               	movwf	??_ShowIcon
 10142  107A  0834               	movf	??_ShowIcon,w
 10143  107B  00A2               	movwf	Oled_SetFont@_width
 10144  107C  3010               	movlw	16
 10145  107D  00B5               	movwf	??_ShowIcon+1
 10146  107E  0835               	movf	??_ShowIcon+1,w
 10147  107F  00A3               	movwf	Oled_SetFont@_height
 10148  1080  3030               	movlw	48
 10149  1081  00B6               	movwf	??_ShowIcon+2
 10150  1082  0836               	movf	??_ShowIcon+2,w
 10151  1083  00A4               	movwf	Oled_SetFont@_min
 10152  1084  3031               	movlw	49
 10153  1085  00B7               	movwf	??_ShowIcon+3
 10154  1086  0837               	movf	??_ShowIcon+3,w
 10155  1087  00A5               	movwf	Oled_SetFont@_max
 10156  1088  3190  204B  3190   	fcall	_Oled_SetFont
 10157                           
 10158                           ;gsm.h: 198: Oled_ConstText(id, seg, page);
 10159  108B  0020               	movlb	0	; select bank0
 10160  108C  0831               	movf	ShowIcon@id+1,w
 10161  108D  00AA               	movwf	Oled_ConstText@buffer+1
 10162  108E  0830               	movf	ShowIcon@id,w
 10163  108F  00A9               	movwf	Oled_ConstText@buffer
 10164  1090  0832               	movf	ShowIcon@seg,w
 10165  1091  00B4               	movwf	??_ShowIcon
 10166  1092  0834               	movf	??_ShowIcon,w
 10167  1093  00AB               	movwf	Oled_ConstText@seg
 10168  1094  0833               	movf	ShowIcon@page,w
 10169  1095  00B5               	movwf	??_ShowIcon+1
 10170  1096  0835               	movf	??_ShowIcon+1,w
 10171  1097  00AC               	movwf	Oled_ConstText@pag
 10172  1098  319F  27D9         	fcall	_Oled_ConstText
 10173  109A  0008               	return
 10174  109B                     __end_of_ShowIcon:	
 10175                           
 10176                           	psect	text47
 10177  1D7F                     __ptext47:	
 10178 ;; *************** function _SetAlarmOff *****************
 10179 ;; Defined at:
 10180 ;;		line 285 in file "main.c"
 10181 ;; Parameters:    Size  Location     Type
 10182 ;;		None
 10183 ;; Auto vars:     Size  Location     Type
 10184 ;;		None
 10185 ;; Return value:  Size  Location     Type
 10186 ;;                  1    wreg      void 
 10187 ;; Registers used:
 10188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10189 ;; Tracked objects:
 10190 ;;		On entry : 0/0
 10191 ;;		On exit  : 0/0
 10192 ;;		Unchanged: 0/0
 10193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10198 ;;Total ram usage:        1 bytes
 10199 ;; Hardware stack levels used:    1
 10200 ;; Hardware stack levels required when called:    6
 10201 ;; This function calls:
 10202 ;;		_ResetScreenTimer
 10203 ;;		_ShowMessage
 10204 ;; This function is called by:
 10205 ;;		_main
 10206 ;;		_CheckSW1
 10207 ;;		_Reset
 10208 ;;		_SetAlarmOn
 10209 ;;		_RaiseAlarm
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           
 10214                           ;psect for function _SetAlarmOff
 10215  1D7F                     _SetAlarmOff:	
 10216                           
 10217                           ;main.c: 286: alarmOn = 0;
 10218                           
 10219                           ;incstack = 0
 10220                           ; Regs used in _SetAlarmOff: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10221  1D7F  0020               	movlb	0	; select bank0
 10222  1D80  01E6               	clrf	_alarmOn
 10223                           
 10224                           ;main.c: 287: ResetScreenTimer();
 10225  1D81  319C  24D5  319D   	fcall	_ResetScreenTimer
 10226                           
 10227                           ;main.c: 288: ShowMessage("ALARM@OFF@", 3);
 10228  1D84  305F               	movlw	low (STR_80| (0+32768))
 10229  1D85  0020               	movlb	0	; select bank0
 10230  1D86  00B0               	movwf	ShowMessage@message
 10231  1D87  308E               	movlw	high (STR_80| (0+32768))
 10232  1D88  00B1               	movwf	ShowMessage@message+1
 10233  1D89  3003               	movlw	3
 10234  1D8A  00B7               	movwf	??_SetAlarmOff
 10235  1D8B  0837               	movf	??_SetAlarmOff,w
 10236  1D8C  00B2               	movwf	ShowMessage@page
 10237  1D8D  319F  278E         	fcall	_ShowMessage
 10238  1D8F  0008               	return
 10239  1D90                     __end_of_SetAlarmOff:	
 10240                           
 10241                           	psect	text48
 10242  1CD5                     __ptext48:	
 10243 ;; *************** function _ResetScreenTimer *****************
 10244 ;; Defined at:
 10245 ;;		line 166 in file "main.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;		None
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;		None
 10250 ;; Return value:  Size  Location     Type
 10251 ;;                  1    wreg      void 
 10252 ;; Registers used:
 10253 ;;		wreg
 10254 ;; Tracked objects:
 10255 ;;		On entry : 0/0
 10256 ;;		On exit  : 0/0
 10257 ;;		Unchanged: 0/0
 10258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;Total ram usage:        0 bytes
 10264 ;; Hardware stack levels used:    1
 10265 ;; This function calls:
 10266 ;;		Nothing
 10267 ;; This function is called by:
 10268 ;;		_main
 10269 ;;		_OnOff
 10270 ;;		_CheckSW1
 10271 ;;		_CheckSW2
 10272 ;;		_SetAlarmOff
 10273 ;;		_SetAlarmOn
 10274 ;;		_RaiseAlarm
 10275 ;; This function uses a non-reentrant model
 10276 ;;
 10277                           
 10278                           
 10279                           ;psect for function _ResetScreenTimer
 10280  1CD5                     _ResetScreenTimer:	
 10281                           
 10282                           ;main.c: 167: screenTimer=400;
 10283                           
 10284                           ;incstack = 0
 10285                           ; Regs used in _ResetScreenTimer: [wreg]
 10286  1CD5  3090               	movlw	144
 10287  1CD6  0020               	movlb	0	; select bank0
 10288  1CD7  00E0               	movwf	_screenTimer
 10289  1CD8  3001               	movlw	1
 10290  1CD9  00E1               	movwf	_screenTimer+1
 10291  1CDA  0008               	return
 10292  1CDB                     __end_of_ResetScreenTimer:	
 10293                           
 10294                           	psect	text49
 10295  1CCD                     __ptext49:	
 10296 ;; *************** function _ScreenOn *****************
 10297 ;; Defined at:
 10298 ;;		line 115 in file "oled.h"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;		None
 10301 ;; Auto vars:     Size  Location     Type
 10302 ;;		None
 10303 ;; Return value:  Size  Location     Type
 10304 ;;                  1    wreg      void 
 10305 ;; Registers used:
 10306 ;;		wreg, status,2, status,0, pclath, cstack
 10307 ;; Tracked objects:
 10308 ;;		On entry : 0/0
 10309 ;;		On exit  : 0/0
 10310 ;;		Unchanged: 0/0
 10311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10316 ;;Total ram usage:        0 bytes
 10317 ;; Hardware stack levels used:    1
 10318 ;; Hardware stack levels required when called:    2
 10319 ;; This function calls:
 10320 ;;		_Oled_WriteCmd
 10321 ;; This function is called by:
 10322 ;;		_CheckSW1
 10323 ;;		_RaiseAlarm
 10324 ;; This function uses a non-reentrant model
 10325 ;;
 10326                           
 10327                           
 10328                           ;psect for function _ScreenOn
 10329  1CCD                     _ScreenOn:	
 10330                           
 10331                           ;oled.h: 116: Oled_WriteCmd(0xAF);
 10332                           
 10333                           ;incstack = 0
 10334                           ; Regs used in _ScreenOn: [wreg+status,2+status,0+pclath+cstack]
 10335  1CCD  30AF               	movlw	175
 10336  1CCE  319D  2501         	fcall	_Oled_WriteCmd
 10337  1CD0  0008               	return
 10338  1CD1                     __end_of_ScreenOn:	
 10339                           
 10340                           	psect	text50
 10341  1F47                     __ptext50:	
 10342 ;; *************** function _Left_HorizontalScroll *****************
 10343 ;; Defined at:
 10344 ;;		line 199 in file "oled.h"
 10345 ;; Parameters:    Size  Location     Type
 10346 ;;  start_page      1    wreg     unsigned char 
 10347 ;;  end_page        1    2[COMMON] unsigned char 
 10348 ;;  set_time        1    3[COMMON] unsigned char 
 10349 ;; Auto vars:     Size  Location     Type
 10350 ;;  start_page      1    4[COMMON] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0, pclath, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10363 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;Total ram usage:        3 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    3
 10367 ;; This function calls:
 10368 ;;		_Activate_Scroll
 10369 ;;		_Deactivate_Scroll
 10370 ;;		_Oled_WriteCmd
 10371 ;; This function is called by:
 10372 ;;		_main
 10373 ;;		_CheckSW1
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           
 10378                           ;psect for function _Left_HorizontalScroll
 10379  1F47                     _Left_HorizontalScroll:	
 10380                           
 10381                           ;incstack = 0
 10382                           ; Regs used in _Left_HorizontalScroll: [wreg+status,2+status,0+pclath+cstack]
 10383                           ;Left_HorizontalScroll@start_page stored from wreg
 10384  1F47  00F4               	movwf	Left_HorizontalScroll@start_page
 10385                           
 10386                           ;oled.h: 200: Deactivate_Scroll();
 10387  1F48  319C  24C9  319F   	fcall	_Deactivate_Scroll
 10388                           
 10389                           ;oled.h: 201: Oled_WriteCmd(0x27);
 10390  1F4B  3027               	movlw	39
 10391  1F4C  319D  2501  319F   	fcall	_Oled_WriteCmd
 10392                           
 10393                           ;oled.h: 202: Oled_WriteCmd(0x00);
 10394  1F4F  3000               	movlw	0
 10395  1F50  319D  2501  319F   	fcall	_Oled_WriteCmd
 10396                           
 10397                           ;oled.h: 203: Oled_WriteCmd(start_page);
 10398  1F53  0874               	movf	Left_HorizontalScroll@start_page,w
 10399  1F54  319D  2501  319F   	fcall	_Oled_WriteCmd
 10400                           
 10401                           ;oled.h: 204: Oled_WriteCmd(set_time);
 10402  1F57  0873               	movf	Left_HorizontalScroll@set_time,w
 10403  1F58  319D  2501  319F   	fcall	_Oled_WriteCmd
 10404                           
 10405                           ;oled.h: 205: Oled_WriteCmd(end_page);
 10406  1F5B  0872               	movf	Left_HorizontalScroll@end_page,w
 10407  1F5C  319D  2501  319F   	fcall	_Oled_WriteCmd
 10408                           
 10409                           ;oled.h: 206: Oled_WriteCmd(0x00);
 10410  1F5F  3000               	movlw	0
 10411  1F60  319D  2501  319F   	fcall	_Oled_WriteCmd
 10412                           
 10413                           ;oled.h: 207: Oled_WriteCmd(0xFF);
 10414  1F63  30FF               	movlw	255
 10415  1F64  319D  2501  319F   	fcall	_Oled_WriteCmd
 10416                           
 10417                           ;oled.h: 208: Activate_Scroll();
 10418  1F67  319C  24C5         	fcall	_Activate_Scroll
 10419  1F69  0008               	return
 10420  1F6A                     __end_of_Left_HorizontalScroll:	
 10421                           
 10422                           	psect	text51
 10423  1CC9                     __ptext51:	
 10424 ;; *************** function _Deactivate_Scroll *****************
 10425 ;; Defined at:
 10426 ;;		line 191 in file "oled.h"
 10427 ;; Parameters:    Size  Location     Type
 10428 ;;		None
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;		None
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      void 
 10433 ;; Registers used:
 10434 ;;		wreg, status,2, status,0, pclath, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10444 ;;Total ram usage:        0 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    2
 10447 ;; This function calls:
 10448 ;;		_Oled_WriteCmd
 10449 ;; This function is called by:
 10450 ;;		_Left_HorizontalScroll
 10451 ;;		_main
 10452 ;;		_CheckSW1
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           
 10457                           ;psect for function _Deactivate_Scroll
 10458  1CC9                     _Deactivate_Scroll:	
 10459                           
 10460                           ;oled.h: 192: Oled_WriteCmd(0x2E);
 10461                           
 10462                           ;incstack = 0
 10463                           ; Regs used in _Deactivate_Scroll: [wreg+status,2+status,0+pclath+cstack]
 10464  1CC9  302E               	movlw	46
 10465  1CCA  319D  2501         	fcall	_Oled_WriteCmd
 10466  1CCC  0008               	return
 10467  1CCD                     __end_of_Deactivate_Scroll:	
 10468                           
 10469                           	psect	text52
 10470  1CC5                     __ptext52:	
 10471 ;; *************** function _Activate_Scroll *****************
 10472 ;; Defined at:
 10473 ;;		line 195 in file "oled.h"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;		None
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;		None
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		wreg, status,2, status,0, pclath, cstack
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10491 ;;Total ram usage:        0 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; Hardware stack levels required when called:    2
 10494 ;; This function calls:
 10495 ;;		_Oled_WriteCmd
 10496 ;; This function is called by:
 10497 ;;		_Left_HorizontalScroll
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           
 10502                           ;psect for function _Activate_Scroll
 10503  1CC5                     _Activate_Scroll:	
 10504                           
 10505                           ;oled.h: 196: Oled_WriteCmd(0x2F);
 10506                           
 10507                           ;incstack = 0
 10508                           ; Regs used in _Activate_Scroll: [wreg+status,2+status,0+pclath+cstack]
 10509  1CC5  302F               	movlw	47
 10510  1CC6  319D  2501         	fcall	_Oled_WriteCmd
 10511  1CC8  0008               	return
 10512  1CC9                     __end_of_Activate_Scroll:	
 10513                           
 10514                           	psect	text53
 10515  1CE2                     __ptext53:	
 10516 ;; *************** function _GsmWakeUp *****************
 10517 ;; Defined at:
 10518 ;;		line 48 in file "gsm.h"
 10519 ;; Parameters:    Size  Location     Type
 10520 ;;		None
 10521 ;; Auto vars:     Size  Location     Type
 10522 ;;		None
 10523 ;; Return value:  Size  Location     Type
 10524 ;;                  1    wreg      void 
 10525 ;; Registers used:
 10526 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10527 ;; Tracked objects:
 10528 ;;		On entry : 0/0
 10529 ;;		On exit  : 0/0
 10530 ;;		Unchanged: 0/0
 10531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10536 ;;Total ram usage:        0 bytes
 10537 ;; Hardware stack levels used:    1
 10538 ;; Hardware stack levels required when called:    3
 10539 ;; This function calls:
 10540 ;;		_SendUartCmd
 10541 ;; This function is called by:
 10542 ;;		_CheckSW1
 10543 ;;		_RaiseAlarm
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           
 10548                           ;psect for function _GsmWakeUp
 10549  1CE2                     _GsmWakeUp:	
 10550                           
 10551                           ;gsm.h: 49: SendUartCmd("\n");
 10552                           
 10553                           ;incstack = 0
 10554                           ; Regs used in _GsmWakeUp: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10555  1CE2  30D2               	movlw	low ((STR_42+12)| (0+32768))
 10556  1CE3  00F6               	movwf	SendUartCmd@cmd
 10557  1CE4  308D               	movlw	high ((STR_42+12)| (0+32768))
 10558  1CE5  00F7               	movwf	SendUartCmd@cmd+1
 10559  1CE6  319C  24DB         	fcall	_SendUartCmd
 10560  1CE8  0008               	return
 10561  1CE9                     __end_of_GsmWakeUp:	
 10562                           
 10563                           	psect	text54
 10564  02D7                     __ptext54:	
 10565 ;; *************** function _CheckBattery *****************
 10566 ;; Defined at:
 10567 ;;		line 58 in file "gsm.h"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;		None
 10570 ;; Auto vars:     Size  Location     Type
 10571 ;;  res            31   24[BANK0 ] unsigned char [31]
 10572 ;;  battLoadInt     2   57[BANK0 ] int 
 10573 ;;  battLoad        2   55[BANK0 ] PTR unsigned char 
 10574 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
 10575 ;;		 -> NULL(0), CheckSimCard@result(11), 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  1    wreg      void 
 10578 ;; Registers used:
 10579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Locals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;Total ram usage:       36 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:    6
 10592 ;; This function calls:
 10593 ;;		_SendUartCmd
 10594 ;;		_ShowBattIcon
 10595 ;;		_ShowBattLoad
 10596 ;;		_ShowMessage
 10597 ;;		_UART_Read_Text
 10598 ;;		_atoi
 10599 ;;		_strtok
 10600 ;; This function is called by:
 10601 ;;		_main
 10602 ;; This function uses a non-reentrant model
 10603 ;;
 10604                           
 10605                           
 10606                           ;psect for function _CheckBattery
 10607  02D7                     _CheckBattery:	
 10608                           
 10609                           ;gsm.h: 59: char res[31];
 10610                           ;gsm.h: 60: int battLoadInt;
 10611                           ;gsm.h: 61: char * battLoad;
 10612                           ;gsm.h: 63: SendUartCmd("AT+CBC\n");
 10613                           
 10614                           ;incstack = 0
 10615                           ; Regs used in _CheckBattery: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10616  02D7  30A5               	movlw	low (STR_13| (0+32768))
 10617  02D8  00F6               	movwf	SendUartCmd@cmd
 10618  02D9  308E               	movlw	high (STR_13| (0+32768))
 10619  02DA  00F7               	movwf	SendUartCmd@cmd+1
 10620  02DB  319C  24DB  3182   	fcall	_SendUartCmd
 10621                           
 10622                           ;gsm.h: 64: UART_Read_Text(res, sizeof(res)/sizeof(char));
 10623  02DE  3038               	movlw	low CheckBattery@res
 10624  02DF  00F0               	movwf	UART_Read_Text@Output
 10625  02E0  3000               	movlw	high CheckBattery@res
 10626  02E1  00F1               	movwf	UART_Read_Text@Output+1
 10627  02E2  301F               	movlw	31
 10628  02E3  00F2               	movwf	UART_Read_Text@length
 10629  02E4  3000               	movlw	0
 10630  02E5  00F3               	movwf	UART_Read_Text@length+1
 10631  02E6  3192  22E4  3182   	fcall	_UART_Read_Text
 10632                           
 10633                           ;gsm.h: 65: strtok (res," ,");
 10634  02E9  3038               	movlw	low CheckBattery@res
 10635  02EA  0020               	movlb	0	; select bank0
 10636  02EB  00A2               	movwf	strtok@s1
 10637  02EC  3000               	movlw	high CheckBattery@res
 10638  02ED  00A3               	movwf	strtok@s1+1
 10639  02EE  30FE               	movlw	low (STR_3| (0+32768))
 10640  02EF  00A4               	movwf	strtok@s2
 10641  02F0  308E               	movlw	high (STR_3| (0+32768))
 10642  02F1  00A5               	movwf	strtok@s2+1
 10643  02F2  3193  237A  3182   	fcall	_strtok
 10644                           
 10645                           ;gsm.h: 66: strtok ((0),",");
 10646  02F5  3000               	movlw	0
 10647  02F6  0020               	movlb	0	; select bank0
 10648  02F7  00A2               	movwf	strtok@s1
 10649  02F8  3000               	movlw	0
 10650  02F9  00A3               	movwf	strtok@s1+1
 10651  02FA  30FF               	movlw	low ((STR_3+1)| (0+32768))
 10652  02FB  00A4               	movwf	strtok@s2
 10653  02FC  308E               	movlw	high ((STR_3+1)| (0+32768))
 10654  02FD  00A5               	movwf	strtok@s2+1
 10655  02FE  3193  237A  3182   	fcall	_strtok
 10656                           
 10657                           ;gsm.h: 67: battLoad = strtok ((0),",");
 10658  0301  3000               	movlw	0
 10659  0302  0020               	movlb	0	; select bank0
 10660  0303  00A2               	movwf	strtok@s1
 10661  0304  3000               	movlw	0
 10662  0305  00A3               	movwf	strtok@s1+1
 10663  0306  30FF               	movlw	low ((STR_3+1)| (0+32768))
 10664  0307  00A4               	movwf	strtok@s2
 10665  0308  308E               	movlw	high ((STR_3+1)| (0+32768))
 10666  0309  00A5               	movwf	strtok@s2+1
 10667  030A  3193  237A  3182   	fcall	_strtok
 10668  030D  0020               	movlb	0	; select bank0
 10669  030E  0823               	movf	?_strtok+1,w
 10670  030F  00D8               	movwf	CheckBattery@battLoad+1
 10671  0310  0822               	movf	?_strtok,w
 10672  0311  00D7               	movwf	CheckBattery@battLoad
 10673                           
 10674                           ;gsm.h: 68: battLoadInt = atoi(battLoad);
 10675  0312  0858               	movf	CheckBattery@battLoad+1,w
 10676  0313  00F7               	movwf	atoi@s+1
 10677  0314  0857               	movf	CheckBattery@battLoad,w
 10678  0315  00F6               	movwf	atoi@s
 10679  0316  3194  248F  3182   	fcall	_atoi
 10680  0319  0877               	movf	?_atoi+1,w
 10681  031A  0020               	movlb	0	; select bank0
 10682  031B  00DA               	movwf	CheckBattery@battLoadInt+1
 10683  031C  0876               	movf	?_atoi,w
 10684  031D  00D9               	movwf	CheckBattery@battLoadInt
 10685                           
 10686                           ;gsm.h: 69: ShowMessage("@@@@@@@@", 6);
 10687  031E  3093               	movlw	low (STR_17| (0+32768))
 10688  031F  00B0               	movwf	ShowMessage@message
 10689  0320  308E               	movlw	high (STR_17| (0+32768))
 10690  0321  00B1               	movwf	ShowMessage@message+1
 10691  0322  3006               	movlw	6
 10692  0323  00B7               	movwf	??_CheckBattery
 10693  0324  0837               	movf	??_CheckBattery,w
 10694  0325  00B2               	movwf	ShowMessage@page
 10695  0326  319F  278E  3182   	fcall	_ShowMessage
 10696                           
 10697                           ;gsm.h: 70: ShowBattLoad(battLoad);
 10698  0329  0020               	movlb	0	; select bank0
 10699  032A  0858               	movf	CheckBattery@battLoad+1,w
 10700  032B  00B1               	movwf	ShowBattLoad@level+1
 10701  032C  0857               	movf	CheckBattery@battLoad,w
 10702  032D  00B0               	movwf	ShowBattLoad@level
 10703  032E  3191  21A4  3182   	fcall	_ShowBattLoad
 10704                           
 10705                           ;gsm.h: 71: if(battLoadInt>15 && battLoadInt<=25) ShowBattIcon("1");
 10706  0331  0020               	movlb	0	; select bank0
 10707  0332  085A               	movf	CheckBattery@battLoadInt+1,w
 10708  0333  3A80               	xorlw	128
 10709  0334  00B7               	movwf	??_CheckBattery
 10710  0335  3080               	movlw	128
 10711  0336  0237               	subwf	??_CheckBattery,w
 10712  0337  1D03               	skipz
 10713  0338  2B3B               	goto	u5885
 10714  0339  3010               	movlw	16
 10715  033A  0259               	subwf	CheckBattery@battLoadInt,w
 10716  033B                     u5885:	
 10717  033B  1C03               	skipc
 10718  033C  2B51               	goto	l5680
 10719  033D  0020               	movlb	0	; select bank0
 10720  033E  085A               	movf	CheckBattery@battLoadInt+1,w
 10721  033F  3A80               	xorlw	128
 10722  0340  00B7               	movwf	??_CheckBattery
 10723  0341  3080               	movlw	128
 10724  0342  0237               	subwf	??_CheckBattery,w
 10725  0343  1D03               	skipz
 10726  0344  2B47               	goto	u5895
 10727  0345  301A               	movlw	26
 10728  0346  0259               	subwf	CheckBattery@battLoadInt,w
 10729  0347                     u5895:	
 10730  0347  1803               	skipnc
 10731  0348  2B51               	goto	l5680
 10732  0349  30CF               	movlw	low ((STR_30+4)| (0+32768))
 10733  034A  0020               	movlb	0	; select bank0
 10734  034B  00B0               	movwf	ShowBattIcon@level
 10735  034C  308E               	movlw	high ((STR_30+4)| (0+32768))
 10736  034D  00B1               	movwf	ShowBattIcon@level+1
 10737  034E  3191  21D5  3182   	fcall	_ShowBattIcon
 10738  0351                     l5680:	
 10739                           
 10740                           ;gsm.h: 72: if(battLoadInt>25 && battLoadInt<=50) ShowBattIcon("2");
 10741  0351  0020               	movlb	0	; select bank0
 10742  0352  085A               	movf	CheckBattery@battLoadInt+1,w
 10743  0353  3A80               	xorlw	128
 10744  0354  00B7               	movwf	??_CheckBattery
 10745  0355  3080               	movlw	128
 10746  0356  0237               	subwf	??_CheckBattery,w
 10747  0357  1D03               	skipz
 10748  0358  2B5B               	goto	u5905
 10749  0359  301A               	movlw	26
 10750  035A  0259               	subwf	CheckBattery@battLoadInt,w
 10751  035B                     u5905:	
 10752  035B  1C03               	skipc
 10753  035C  2B71               	goto	l5686
 10754  035D  0020               	movlb	0	; select bank0
 10755  035E  085A               	movf	CheckBattery@battLoadInt+1,w
 10756  035F  3A80               	xorlw	128
 10757  0360  00B7               	movwf	??_CheckBattery
 10758  0361  3080               	movlw	128
 10759  0362  0237               	subwf	??_CheckBattery,w
 10760  0363  1D03               	skipz
 10761  0364  2B67               	goto	u5915
 10762  0365  3033               	movlw	51
 10763  0366  0259               	subwf	CheckBattery@battLoadInt,w
 10764  0367                     u5915:	
 10765  0367  1803               	skipnc
 10766  0368  2B71               	goto	l5686
 10767  0369  30D5               	movlw	low ((STR_29+4)| (0+32768))
 10768  036A  0020               	movlb	0	; select bank0
 10769  036B  00B0               	movwf	ShowBattIcon@level
 10770  036C  308E               	movlw	high ((STR_29+4)| (0+32768))
 10771  036D  00B1               	movwf	ShowBattIcon@level+1
 10772  036E  3191  21D5  3182   	fcall	_ShowBattIcon
 10773  0371                     l5686:	
 10774                           
 10775                           ;gsm.h: 73: if(battLoadInt>50 && battLoadInt<=75) ShowBattIcon("3");
 10776  0371  0020               	movlb	0	; select bank0
 10777  0372  085A               	movf	CheckBattery@battLoadInt+1,w
 10778  0373  3A80               	xorlw	128
 10779  0374  00B7               	movwf	??_CheckBattery
 10780  0375  3080               	movlw	128
 10781  0376  0237               	subwf	??_CheckBattery,w
 10782  0377  1D03               	skipz
 10783  0378  2B7B               	goto	u5925
 10784  0379  3033               	movlw	51
 10785  037A  0259               	subwf	CheckBattery@battLoadInt,w
 10786  037B                     u5925:	
 10787  037B  1C03               	skipc
 10788  037C  2B91               	goto	l5692
 10789  037D  0020               	movlb	0	; select bank0
 10790  037E  085A               	movf	CheckBattery@battLoadInt+1,w
 10791  037F  3A80               	xorlw	128
 10792  0380  00B7               	movwf	??_CheckBattery
 10793  0381  3080               	movlw	128
 10794  0382  0237               	subwf	??_CheckBattery,w
 10795  0383  1D03               	skipz
 10796  0384  2B87               	goto	u5935
 10797  0385  304C               	movlw	76
 10798  0386  0259               	subwf	CheckBattery@battLoadInt,w
 10799  0387                     u5935:	
 10800  0387  1803               	skipnc
 10801  0388  2B91               	goto	l5692
 10802  0389  3008               	movlw	low (STR_20| (0+32768))
 10803  038A  0020               	movlb	0	; select bank0
 10804  038B  00B0               	movwf	ShowBattIcon@level
 10805  038C  308F               	movlw	high (STR_20| (0+32768))
 10806  038D  00B1               	movwf	ShowBattIcon@level+1
 10807  038E  3191  21D5  3182   	fcall	_ShowBattIcon
 10808  0391                     l5692:	
 10809                           
 10810                           ;gsm.h: 74: if(battLoadInt>75 && battLoadInt<=100) ShowBattIcon("4");
 10811  0391  0020               	movlb	0	; select bank0
 10812  0392  085A               	movf	CheckBattery@battLoadInt+1,w
 10813  0393  3A80               	xorlw	128
 10814  0394  00B7               	movwf	??_CheckBattery
 10815  0395  3080               	movlw	128
 10816  0396  0237               	subwf	??_CheckBattery,w
 10817  0397  1D03               	skipz
 10818  0398  2B9B               	goto	u5945
 10819  0399  304C               	movlw	76
 10820  039A  0259               	subwf	CheckBattery@battLoadInt,w
 10821  039B                     u5945:	
 10822  039B  1C03               	skipc
 10823  039C  0008               	return
 10824  039D  0020               	movlb	0	; select bank0
 10825  039E  085A               	movf	CheckBattery@battLoadInt+1,w
 10826  039F  3A80               	xorlw	128
 10827  03A0  00B7               	movwf	??_CheckBattery
 10828  03A1  3080               	movlw	128
 10829  03A2  0237               	subwf	??_CheckBattery,w
 10830  03A3  1D03               	skipz
 10831  03A4  2BA7               	goto	u5955
 10832  03A5  3065               	movlw	101
 10833  03A6  0259               	subwf	CheckBattery@battLoadInt,w
 10834  03A7                     u5955:	
 10835  03A7  1803               	skipnc
 10836  03A8  0008               	return
 10837  03A9  300A               	movlw	low (STR_21| (0+32768))
 10838  03AA  0020               	movlb	0	; select bank0
 10839  03AB  00B0               	movwf	ShowBattIcon@level
 10840  03AC  308F               	movlw	high (STR_21| (0+32768))
 10841  03AD  00B1               	movwf	ShowBattIcon@level+1
 10842  03AE  3191  21D5         	fcall	_ShowBattIcon
 10843  03B0  0008               	return
 10844  03B1                     __end_of_CheckBattery:	
 10845                           
 10846                           	psect	text55
 10847  137A                     __ptext55:	
 10848 ;; *************** function _strtok *****************
 10849 ;; Defined at:
 10850 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strtok.c"
 10851 ;; Parameters:    Size  Location     Type
 10852 ;;  s1              2    2[BANK0 ] PTR unsigned char 
 10853 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
 10854 ;;		 -> NULL(0), CheckSimCard@result(11), 
 10855 ;;  s2              2    4[BANK0 ] PTR const unsigned char 
 10856 ;;		 -> STR_47(2), STR_46(2), STR_45(3), STR_36(2), 
 10857 ;;		 -> STR_35(2), STR_34(2), STR_33(2), STR_32(3), 
 10858 ;;		 -> STR_24(2), STR_23(3), STR_16(2), STR_15(2), 
 10859 ;;		 -> STR_14(3), STR_4(2), STR_3(3), 
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;		None
 10862 ;; Return value:  Size  Location     Type
 10863 ;;                  2    2[BANK0 ] PTR unsigned char 
 10864 ;; Registers used:
 10865 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10866 ;; Tracked objects:
 10867 ;;		On entry : 0/0
 10868 ;;		On exit  : 0/0
 10869 ;;		Unchanged: 0/0
 10870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10871 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10875 ;;Total ram usage:        4 bytes
 10876 ;; Hardware stack levels used:    1
 10877 ;; Hardware stack levels required when called:    2
 10878 ;; This function calls:
 10879 ;;		_strcspn
 10880 ;;		_strspn
 10881 ;; This function is called by:
 10882 ;;		_CheckBattery
 10883 ;;		_CheckNetwork
 10884 ;;		_ReadLastSMS
 10885 ;;		_ReadPhoneNumber
 10886 ;;		_CheckSimCard
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           
 10891                           ;psect for function _strtok
 10892  137A                     _strtok:	
 10893                           
 10894                           ;incstack = 0
 10895                           ; Regs used in _strtok: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10896  137A  0020               	movlb	0	; select bank0
 10897  137B  0822               	movf	strtok@s1,w
 10898  137C  0423               	iorwf	strtok@s1+1,w
 10899  137D  1D03               	btfss	3,2
 10900  137E  2B83               	goto	l4872
 10901  137F  0865               	movf	strtok@sp+1,w
 10902  1380  00A3               	movwf	strtok@s1+1
 10903  1381  0864               	movf	strtok@sp,w
 10904  1382  00A2               	movwf	strtok@s1
 10905  1383                     l4872:	
 10906  1383  0822               	movf	strtok@s1,w
 10907  1384  0423               	iorwf	strtok@s1+1,w
 10908  1385  1D03               	btfss	3,2
 10909  1386  2B8A               	goto	l4878
 10910  1387  01A2               	clrf	?_strtok
 10911  1388  01A3               	clrf	?_strtok+1
 10912  1389  0008               	return
 10913  138A                     l4878:	
 10914  138A  0823               	movf	strtok@s1+1,w
 10915  138B  00F8               	movwf	strspn@s1+1
 10916  138C  0822               	movf	strtok@s1,w
 10917  138D  00F7               	movwf	strspn@s1
 10918  138E  0825               	movf	strtok@s2+1,w
 10919  138F  00FA               	movwf	strspn@s2+1
 10920  1390  0824               	movf	strtok@s2,w
 10921  1391  00F9               	movwf	strspn@s2
 10922  1392  3191  2174  3193   	fcall	_strspn
 10923  1395  0877               	movf	?_strspn,w
 10924  1396  0020               	movlb	0	; select bank0
 10925  1397  07A2               	addwf	strtok@s1,f
 10926  1398  0878               	movf	?_strspn+1,w
 10927  1399  3DA3               	addwfc	strtok@s1+1,f
 10928  139A  0822               	movf	strtok@s1,w
 10929  139B  0086               	movwf	6
 10930  139C  0823               	movf	strtok@s1+1,w
 10931  139D  0087               	movwf	7
 10932  139E  0801               	movf	1,w
 10933  139F  1D03               	btfss	3,2
 10934  13A0  2BA6               	goto	l4886
 10935  13A1  01E4               	clrf	strtok@sp
 10936  13A2  01E5               	clrf	strtok@sp+1
 10937  13A3  01A2               	clrf	?_strtok
 10938  13A4  01A3               	clrf	?_strtok+1
 10939  13A5  0008               	return
 10940  13A6                     l4886:	
 10941  13A6  0823               	movf	strtok@s1+1,w
 10942  13A7  00F8               	movwf	strcspn@s1+1
 10943  13A8  0822               	movf	strtok@s1,w
 10944  13A9  00F7               	movwf	strcspn@s1
 10945  13AA  0825               	movf	strtok@s2+1,w
 10946  13AB  00FA               	movwf	strcspn@s2+1
 10947  13AC  0824               	movf	strtok@s2,w
 10948  13AD  00F9               	movwf	strcspn@s2
 10949  13AE  3191  2144  3193   	fcall	_strcspn
 10950  13B1  0877               	movf	?_strcspn,w
 10951  13B2  0020               	movlb	0	; select bank0
 10952  13B3  0722               	addwf	strtok@s1,w
 10953  13B4  00E4               	movwf	strtok@sp
 10954  13B5  0878               	movf	?_strcspn+1,w
 10955  13B6  3D23               	addwfc	strtok@s1+1,w
 10956  13B7  00E5               	movwf	strtok@sp+1
 10957  13B8  0864               	movf	strtok@sp,w
 10958  13B9  0086               	movwf	6
 10959  13BA  0865               	movf	strtok@sp+1,w
 10960  13BB  0087               	movwf	7
 10961  13BC  0801               	movf	1,w
 10962  13BD  1903               	btfsc	3,2
 10963  13BE  2BC9               	goto	l4894
 10964  13BF  0864               	movf	strtok@sp,w
 10965  13C0  0086               	movwf	6
 10966  13C1  0865               	movf	strtok@sp+1,w
 10967  13C2  0087               	movwf	7
 10968  13C3  0181               	clrf	1
 10969  13C4  3001               	movlw	1
 10970  13C5  07E4               	addwf	strtok@sp,f
 10971  13C6  3000               	movlw	0
 10972  13C7  3DE5               	addwfc	strtok@sp+1,f
 10973  13C8  0008               	return
 10974  13C9                     l4894:	
 10975  13C9  01E4               	clrf	strtok@sp
 10976  13CA  01E5               	clrf	strtok@sp+1
 10977  13CB  0008               	return
 10978  13CC                     __end_of_strtok:	
 10979                           
 10980                           	psect	text56
 10981  1174                     __ptext56:	
 10982 ;; *************** function _strspn *****************
 10983 ;; Defined at:
 10984 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strspn.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  s1              2    7[COMMON] PTR const unsigned char 
 10987 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
 10988 ;;		 -> NULL(0), CheckSimCard@result(11), 
 10989 ;;  s2              2    9[COMMON] PTR const unsigned char 
 10990 ;;		 -> STR_47(2), STR_46(2), STR_45(3), STR_36(2), 
 10991 ;;		 -> STR_35(2), STR_34(2), STR_33(2), STR_32(3), 
 10992 ;;		 -> STR_24(2), STR_23(3), STR_16(2), STR_15(2), 
 10993 ;;		 -> STR_14(3), STR_4(2), STR_3(3), 
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;  i               2    0[BANK0 ] unsigned int 
 10996 ;; Return value:  Size  Location     Type
 10997 ;;                  2    7[COMMON] unsigned int 
 10998 ;; Registers used:
 10999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11000 ;; Tracked objects:
 11001 ;;		On entry : 0/0
 11002 ;;		On exit  : 0/0
 11003 ;;		Unchanged: 0/0
 11004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11007 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11008 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11009 ;;Total ram usage:        8 bytes
 11010 ;; Hardware stack levels used:    1
 11011 ;; Hardware stack levels required when called:    1
 11012 ;; This function calls:
 11013 ;;		_strchr
 11014 ;; This function is called by:
 11015 ;;		_strtok
 11016 ;; This function uses a non-reentrant model
 11017 ;;
 11018                           
 11019                           
 11020                           ;psect for function _strspn
 11021  1174                     _strspn:	
 11022                           
 11023                           ;incstack = 0
 11024                           ; Regs used in _strspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11025  1174  0020               	movlb	0	; select bank0
 11026  1175  01A0               	clrf	strspn@i
 11027  1176  01A1               	clrf	strspn@i+1
 11028  1177  2981               	goto	l4802
 11029  1178                     l4800:	
 11030  1178  3001               	movlw	1
 11031  1179  07F7               	addwf	strspn@s1,f
 11032  117A  3000               	movlw	0
 11033  117B  3DF8               	addwfc	strspn@s1+1,f
 11034  117C  3001               	movlw	1
 11035  117D  0020               	movlb	0	; select bank0
 11036  117E  07A0               	addwf	strspn@i,f
 11037  117F  3000               	movlw	0
 11038  1180  3DA1               	addwfc	strspn@i+1,f
 11039  1181                     l4802:	
 11040  1181  0877               	movf	strspn@s1,w
 11041  1182  0086               	movwf	6
 11042  1183  0878               	movf	strspn@s1+1,w
 11043  1184  0087               	movwf	7
 11044  1185  0801               	movf	1,w
 11045  1186  1903               	btfsc	3,2
 11046  1187  299E               	goto	l4806
 11047  1188  087A               	movf	strspn@s2+1,w
 11048  1189  00F1               	movwf	strchr@ptr+1
 11049  118A  0879               	movf	strspn@s2,w
 11050  118B  00F0               	movwf	strchr@ptr
 11051  118C  0877               	movf	strspn@s1,w
 11052  118D  0086               	movwf	6
 11053  118E  0878               	movf	strspn@s1+1,w
 11054  118F  0087               	movwf	7
 11055  1190  0801               	movf	1,w
 11056  1191  00FB               	movwf	??_strspn
 11057  1192  01FC               	clrf	??_strspn+1
 11058  1193  087B               	movf	??_strspn,w
 11059  1194  00F2               	movwf	strchr@chr
 11060  1195  087C               	movf	??_strspn+1,w
 11061  1196  00F3               	movwf	strchr@chr+1
 11062  1197  319E  2607  3191   	fcall	_strchr
 11063  119A  0870               	movf	?_strchr,w
 11064  119B  0471               	iorwf	?_strchr+1,w
 11065  119C  1D03               	btfss	3,2
 11066  119D  2978               	goto	l4800
 11067  119E                     l4806:	
 11068  119E  0020               	movlb	0	; select bank0
 11069  119F  0821               	movf	strspn@i+1,w
 11070  11A0  00F8               	movwf	?_strspn+1
 11071  11A1  0820               	movf	strspn@i,w
 11072  11A2  00F7               	movwf	?_strspn
 11073  11A3  0008               	return
 11074  11A4                     __end_of_strspn:	
 11075                           
 11076                           	psect	text57
 11077  1144                     __ptext57:	
 11078 ;; *************** function _strcspn *****************
 11079 ;; Defined at:
 11080 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcspn.c"
 11081 ;; Parameters:    Size  Location     Type
 11082 ;;  s1              2    7[COMMON] PTR const unsigned char 
 11083 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
 11084 ;;		 -> NULL(0), CheckSimCard@result(11), 
 11085 ;;  s2              2    9[COMMON] PTR const unsigned char 
 11086 ;;		 -> STR_47(2), STR_46(2), STR_45(3), STR_36(2), 
 11087 ;;		 -> STR_35(2), STR_34(2), STR_33(2), STR_32(3), 
 11088 ;;		 -> STR_24(2), STR_23(3), STR_16(2), STR_15(2), 
 11089 ;;		 -> STR_14(3), STR_4(2), STR_3(3), 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  i               2    0[BANK0 ] unsigned int 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  2    7[COMMON] unsigned int 
 11094 ;; Registers used:
 11095 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11101 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11102 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11104 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11105 ;;Total ram usage:        8 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    1
 11108 ;; This function calls:
 11109 ;;		_strchr
 11110 ;; This function is called by:
 11111 ;;		_strtok
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           
 11116                           ;psect for function _strcspn
 11117  1144                     _strcspn:	
 11118                           
 11119                           ;incstack = 0
 11120                           ; Regs used in _strcspn: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11121  1144  0020               	movlb	0	; select bank0
 11122  1145  01A0               	clrf	strcspn@i
 11123  1146  01A1               	clrf	strcspn@i+1
 11124  1147  2951               	goto	l4814
 11125  1148                     l4812:	
 11126  1148  3001               	movlw	1
 11127  1149  07F7               	addwf	strcspn@s1,f
 11128  114A  3000               	movlw	0
 11129  114B  3DF8               	addwfc	strcspn@s1+1,f
 11130  114C  3001               	movlw	1
 11131  114D  0020               	movlb	0	; select bank0
 11132  114E  07A0               	addwf	strcspn@i,f
 11133  114F  3000               	movlw	0
 11134  1150  3DA1               	addwfc	strcspn@i+1,f
 11135  1151                     l4814:	
 11136  1151  0877               	movf	strcspn@s1,w
 11137  1152  0086               	movwf	6
 11138  1153  0878               	movf	strcspn@s1+1,w
 11139  1154  0087               	movwf	7
 11140  1155  0801               	movf	1,w
 11141  1156  1903               	btfsc	3,2
 11142  1157  296E               	goto	l4818
 11143  1158  087A               	movf	strcspn@s2+1,w
 11144  1159  00F1               	movwf	strchr@ptr+1
 11145  115A  0879               	movf	strcspn@s2,w
 11146  115B  00F0               	movwf	strchr@ptr
 11147  115C  0877               	movf	strcspn@s1,w
 11148  115D  0086               	movwf	6
 11149  115E  0878               	movf	strcspn@s1+1,w
 11150  115F  0087               	movwf	7
 11151  1160  0801               	movf	1,w
 11152  1161  00FB               	movwf	??_strcspn
 11153  1162  01FC               	clrf	??_strcspn+1
 11154  1163  087B               	movf	??_strcspn,w
 11155  1164  00F2               	movwf	strchr@chr
 11156  1165  087C               	movf	??_strcspn+1,w
 11157  1166  00F3               	movwf	strchr@chr+1
 11158  1167  319E  2607  3191   	fcall	_strchr
 11159  116A  0870               	movf	?_strchr,w
 11160  116B  0471               	iorwf	?_strchr+1,w
 11161  116C  1903               	btfsc	3,2
 11162  116D  2948               	goto	l4812
 11163  116E                     l4818:	
 11164  116E  0020               	movlb	0	; select bank0
 11165  116F  0821               	movf	strcspn@i+1,w
 11166  1170  00F8               	movwf	?_strcspn+1
 11167  1171  0820               	movf	strcspn@i,w
 11168  1172  00F7               	movwf	?_strcspn
 11169  1173  0008               	return
 11170  1174                     __end_of_strcspn:	
 11171                           
 11172                           	psect	text58
 11173  1E07                     __ptext58:	
 11174 ;; *************** function _strchr *****************
 11175 ;; Defined at:
 11176 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strchr.c"
 11177 ;; Parameters:    Size  Location     Type
 11178 ;;  ptr             2    0[COMMON] PTR const unsigned char 
 11179 ;;		 -> STR_47(2), STR_46(2), STR_45(3), STR_36(2), 
 11180 ;;		 -> STR_35(2), STR_34(2), STR_33(2), STR_32(3), 
 11181 ;;		 -> STR_24(2), STR_23(3), STR_16(2), STR_15(2), 
 11182 ;;		 -> STR_14(3), STR_4(2), STR_3(3), 
 11183 ;;  chr             2    2[COMMON] int 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;		None
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  2    0[COMMON] PTR unsigned char 
 11188 ;; Registers used:
 11189 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11195 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11197 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11198 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11199 ;;Total ram usage:        7 bytes
 11200 ;; Hardware stack levels used:    1
 11201 ;; This function calls:
 11202 ;;		Nothing
 11203 ;; This function is called by:
 11204 ;;		_strcspn
 11205 ;;		_strspn
 11206 ;; This function uses a non-reentrant model
 11207 ;;
 11208                           
 11209                           
 11210                           ;psect for function _strchr
 11211  1E07                     _strchr:	
 11212  1E07                     l1157:	
 11213                           ;incstack = 0
 11214                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0+pclath]
 11215                           
 11216  1E07  0870               	movf	strchr@ptr,w
 11217  1E08  0084               	movwf	4
 11218  1E09  0871               	movf	strchr@ptr+1,w
 11219  1E0A  0085               	movwf	5
 11220  1E0B  0800               	movf	0,w	;code access
 11221  1E0C  0672               	xorwf	strchr@chr,w
 11222  1E0D  1903               	btfsc	3,2
 11223  1E0E  0008               	return
 11224  1E0F  0871               	movf	strchr@ptr+1,w
 11225  1E10  00F5               	movwf	??_strchr+1
 11226  1E11  0870               	movf	strchr@ptr,w
 11227  1E12  00F4               	movwf	??_strchr
 11228  1E13  0AF0               	incf	strchr@ptr,f
 11229  1E14  1903               	skipnz
 11230  1E15  0AF1               	incf	strchr@ptr+1,f
 11231  1E16  0874               	movf	??_strchr,w
 11232  1E17  0084               	movwf	4
 11233  1E18  0875               	movf	??_strchr+1,w
 11234  1E19  0085               	movwf	5
 11235  1E1A  0012               	moviw fsr0++
 11236  1E1B  1D03               	btfss	3,2
 11237  1E1C  2E07               	goto	l1157
 11238  1E1D  01F0               	clrf	?_strchr
 11239  1E1E  01F1               	clrf	?_strchr+1
 11240  1E1F  0008               	return
 11241  1E20                     __end_of_strchr:	
 11242                           
 11243                           	psect	text59
 11244  148F                     __ptext59:	
 11245 ;; *************** function _atoi *****************
 11246 ;; Defined at:
 11247 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\atoi.c"
 11248 ;; Parameters:    Size  Location     Type
 11249 ;;  s               2    6[COMMON] PTR const unsigned char 
 11250 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
 11251 ;;		 -> NULL(0), CheckSimCard@result(11), 
 11252 ;; Auto vars:     Size  Location     Type
 11253 ;;  a               2   11[COMMON] int 
 11254 ;;  sign            1   10[COMMON] unsigned char 
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  2    6[COMMON] int 
 11257 ;; Registers used:
 11258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11264 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11265 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11266 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11267 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11268 ;;Total ram usage:        7 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    1
 11271 ;; This function calls:
 11272 ;;		___wmul
 11273 ;;		_isdigit
 11274 ;; This function is called by:
 11275 ;;		_CheckBattery
 11276 ;;		_CheckNetwork
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           
 11281                           ;psect for function _atoi
 11282  148F                     _atoi:	
 11283  148F                     l5070:	
 11284                           ;incstack = 0
 11285                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11286                           
 11287  148F  0876               	movf	atoi@s,w
 11288  1490  0086               	movwf	6
 11289  1491  0877               	movf	atoi@s+1,w
 11290  1492  0087               	movwf	7
 11291  1493  3020               	movlw	32
 11292  1494  0601               	xorwf	1,w
 11293  1495  1D03               	btfss	3,2
 11294  1496  2C9C               	goto	l5072
 11295  1497                     l5068:	
 11296  1497  3001               	movlw	1
 11297  1498  07F6               	addwf	atoi@s,f
 11298  1499  3000               	movlw	0
 11299  149A  3DF7               	addwfc	atoi@s+1,f
 11300  149B  2C8F               	goto	l5070
 11301  149C                     l5072:	
 11302  149C  0876               	movf	atoi@s,w
 11303  149D  0086               	movwf	6
 11304  149E  0877               	movf	atoi@s+1,w
 11305  149F  0087               	movwf	7
 11306  14A0  3009               	movlw	9
 11307  14A1  0601               	xorwf	1,w
 11308  14A2  1903               	btfsc	3,2
 11309  14A3  2C97               	goto	l5068
 11310  14A4  01FB               	clrf	atoi@a
 11311  14A5  01FC               	clrf	atoi@a+1
 11312  14A6  01FA               	clrf	atoi@sign
 11313  14A7  0876               	movf	atoi@s,w
 11314  14A8  0086               	movwf	6
 11315  14A9  0877               	movf	atoi@s+1,w
 11316  14AA  0087               	movwf	7
 11317  14AB  302D               	movlw	45
 11318  14AC  0601               	xorwf	1,w
 11319  14AD  1D03               	btfss	3,2
 11320  14AE  2CB4               	goto	l5082
 11321  14AF  3001               	movlw	1
 11322  14B0  00F8               	movwf	??_atoi
 11323  14B1  0878               	movf	??_atoi,w
 11324  14B2  07FA               	addwf	atoi@sign,f
 11325  14B3  2CBC               	goto	l5088
 11326  14B4                     l5082:	
 11327  14B4  0876               	movf	atoi@s,w
 11328  14B5  0086               	movwf	6
 11329  14B6  0877               	movf	atoi@s+1,w
 11330  14B7  0087               	movwf	7
 11331  14B8  302B               	movlw	43
 11332  14B9  0601               	xorwf	1,w
 11333  14BA  1D03               	btfss	3,2
 11334  14BB  2CC0               	goto	l5090
 11335  14BC                     l5088:	
 11336  14BC  3001               	movlw	1
 11337  14BD  07F6               	addwf	atoi@s,f
 11338  14BE  3000               	movlw	0
 11339  14BF  3DF7               	addwfc	atoi@s+1,f
 11340  14C0                     l5090:	
 11341  14C0  0876               	movf	atoi@s,w
 11342  14C1  0086               	movwf	6
 11343  14C2  0877               	movf	atoi@s+1,w
 11344  14C3  0087               	movwf	7
 11345  14C4  0801               	movf	1,w
 11346  14C5  319D  2545  3194   	fcall	_isdigit
 11347  14C8  1C03               	btfss	3,0
 11348  14C9  2CE7               	goto	l5092
 11349  14CA  087C               	movf	atoi@a+1,w
 11350  14CB  00F1               	movwf	___wmul@multiplier+1
 11351  14CC  087B               	movf	atoi@a,w
 11352  14CD  00F0               	movwf	___wmul@multiplier
 11353  14CE  300A               	movlw	10
 11354  14CF  00F2               	movwf	___wmul@multiplicand
 11355  14D0  3000               	movlw	0
 11356  14D1  00F3               	movwf	___wmul@multiplicand+1
 11357  14D2  319E  2654  3194   	fcall	___wmul
 11358  14D5  0876               	movf	atoi@s,w
 11359  14D6  0086               	movwf	6
 11360  14D7  0877               	movf	atoi@s+1,w
 11361  14D8  0087               	movwf	7
 11362  14D9  0801               	movf	1,w
 11363  14DA  0770               	addwf	?___wmul,w
 11364  14DB  00F8               	movwf	??_atoi
 11365  14DC  0871               	movf	?___wmul+1,w
 11366  14DD  1803               	skipnc
 11367  14DE  0A71               	incf	?___wmul+1,w
 11368  14DF  00F9               	movwf	??_atoi+1
 11369  14E0  0878               	movf	??_atoi,w
 11370  14E1  3ED0               	addlw	208
 11371  14E2  00FB               	movwf	atoi@a
 11372  14E3  30FF               	movlw	255
 11373  14E4  3D79               	addwfc	??_atoi+1,w
 11374  14E5  00FC               	movwf	atoi@a+1
 11375  14E6  2CBC               	goto	l5088
 11376  14E7                     l5092:	
 11377  14E7  087A               	movf	atoi@sign,w
 11378  14E8  1903               	btfsc	3,2
 11379  14E9  2CF6               	goto	l5098
 11380  14EA  097B               	comf	atoi@a,w
 11381  14EB  00F8               	movwf	??_atoi
 11382  14EC  097C               	comf	atoi@a+1,w
 11383  14ED  00F9               	movwf	??_atoi+1
 11384  14EE  0AF8               	incf	??_atoi,f
 11385  14EF  1903               	skipnz
 11386  14F0  0AF9               	incf	??_atoi+1,f
 11387  14F1  0878               	movf	??_atoi,w
 11388  14F2  00F6               	movwf	?_atoi
 11389  14F3  0879               	movf	??_atoi+1,w
 11390  14F4  00F7               	movwf	?_atoi+1
 11391  14F5  0008               	return
 11392  14F6                     l5098:	
 11393  14F6  087C               	movf	atoi@a+1,w
 11394  14F7  00F7               	movwf	?_atoi+1
 11395  14F8  087B               	movf	atoi@a,w
 11396  14F9  00F6               	movwf	?_atoi
 11397  14FA  0008               	return
 11398  14FB                     __end_of_atoi:	
 11399                           
 11400                           	psect	text60
 11401  1D45                     __ptext60:	
 11402 ;; *************** function _isdigit *****************
 11403 ;; Defined at:
 11404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;  c               1    wreg     unsigned char 
 11407 ;; Auto vars:     Size  Location     Type
 11408 ;;  c               1    1[COMMON] unsigned char 
 11409 ;; Return value:  Size  Location     Type
 11410 ;;		None               void
 11411 ;; Registers used:
 11412 ;;		wreg, status,2, status,0
 11413 ;; Tracked objects:
 11414 ;;		On entry : 0/0
 11415 ;;		On exit  : 0/0
 11416 ;;		Unchanged: 0/0
 11417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;Total ram usage:        2 bytes
 11423 ;; Hardware stack levels used:    1
 11424 ;; This function calls:
 11425 ;;		Nothing
 11426 ;; This function is called by:
 11427 ;;		_sprintf
 11428 ;;		_atoi
 11429 ;; This function uses a non-reentrant model
 11430 ;;
 11431                           
 11432                           
 11433                           ;psect for function _isdigit
 11434  1D45                     _isdigit:	
 11435                           
 11436                           ;incstack = 0
 11437                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11438                           ;isdigit@c stored from wreg
 11439  1D45  00F1               	movwf	isdigit@c
 11440  1D46  01F0               	clrf	_isdigit$1025
 11441  1D47  303A               	movlw	58
 11442  1D48  0271               	subwf	isdigit@c,w
 11443  1D49  1803               	skipnc
 11444  1D4A  2D51               	goto	l5000
 11445  1D4B  3030               	movlw	48
 11446  1D4C  0271               	subwf	isdigit@c,w
 11447  1D4D  1C03               	skipc
 11448  1D4E  2D51               	goto	l5000
 11449  1D4F  01F0               	clrf	_isdigit$1025
 11450  1D50  0AF0               	incf	_isdigit$1025,f
 11451  1D51                     l5000:	
 11452  1D51  0C70               	rrf	_isdigit$1025,w
 11453  1D52  0008               	return
 11454  1D53                     __end_of_isdigit:	
 11455                           
 11456                           	psect	text61
 11457  12E4                     __ptext61:	
 11458 ;; *************** function _UART_Read_Text *****************
 11459 ;; Defined at:
 11460 ;;		line 55 in file "uart.h"
 11461 ;; Parameters:    Size  Location     Type
 11462 ;;  Output          2    0[COMMON] PTR unsigned char 
 11463 ;;		 -> ReadPhoneNumber@result1(50), ReadPhoneNumber@result0(20), result3(67), CheckNetwork@res(20), 
 11464 ;;		 -> CheckBattery@res(31), SimCard_Init@result(15), CheckSimCard@result(11), 
 11465 ;;  length          2    2[COMMON] unsigned int 
 11466 ;; Auto vars:     Size  Location     Type
 11467 ;;  i               2    7[COMMON] int 
 11468 ;; Return value:  Size  Location     Type
 11469 ;;                  1    wreg      void 
 11470 ;; Registers used:
 11471 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11472 ;; Tracked objects:
 11473 ;;		On entry : 0/0
 11474 ;;		On exit  : 0/0
 11475 ;;		Unchanged: 0/0
 11476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11479 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11480 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11481 ;;Total ram usage:        9 bytes
 11482 ;; Hardware stack levels used:    1
 11483 ;; Hardware stack levels required when called:    1
 11484 ;; This function calls:
 11485 ;;		_UART_Read
 11486 ;; This function is called by:
 11487 ;;		_SimCard_Init
 11488 ;;		_CheckBattery
 11489 ;;		_CheckNetwork
 11490 ;;		_ReadLastSMS
 11491 ;;		_ReadPhoneNumber
 11492 ;;		_CheckSimCard
 11493 ;; This function uses a non-reentrant model
 11494 ;;
 11495                           
 11496                           
 11497                           ;psect for function _UART_Read_Text
 11498  12E4                     _UART_Read_Text:	
 11499                           
 11500                           ;uart.h: 57: Output[0] = UART_Read();
 11501                           
 11502                           ;incstack = 0
 11503                           ; Regs used in _UART_Read_Text: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11504  12E4  319D  2520  3192   	fcall	_UART_Read
 11505  12E7  00F4               	movwf	??_UART_Read_Text
 11506  12E8  0870               	movf	UART_Read_Text@Output,w
 11507  12E9  0086               	movwf	6
 11508  12EA  0871               	movf	UART_Read_Text@Output+1,w
 11509  12EB  0087               	movwf	7
 11510  12EC  0874               	movf	??_UART_Read_Text,w
 11511  12ED  0081               	movwf	1
 11512                           
 11513                           ;uart.h: 58: for(int i=1;i<length;i++)
 11514  12EE  3001               	movlw	1
 11515  12EF  00F7               	movwf	UART_Read_Text@i
 11516  12F0  3000               	movlw	0
 11517  12F1  00F8               	movwf	UART_Read_Text@i+1
 11518  12F2                     l235:	
 11519  12F2  0873               	movf	UART_Read_Text@length+1,w
 11520  12F3  0278               	subwf	UART_Read_Text@i+1,w
 11521  12F4  1D03               	skipz
 11522  12F5  2AF8               	goto	u4885
 11523  12F6  0872               	movf	UART_Read_Text@length,w
 11524  12F7  0277               	subwf	UART_Read_Text@i,w
 11525  12F8                     u4885:	
 11526  12F8  1803               	btfsc	3,0
 11527  12F9  0008               	return
 11528                           
 11529                           ;uart.h: 59: {
 11530                           ;uart.h: 60: Output[i] = UART_Read();
 11531  12FA  319D  2520  3192   	fcall	_UART_Read
 11532  12FD  00F4               	movwf	??_UART_Read_Text
 11533  12FE  0877               	movf	UART_Read_Text@i,w
 11534  12FF  0770               	addwf	UART_Read_Text@Output,w
 11535  1300  00F5               	movwf	??_UART_Read_Text+1
 11536  1301  0878               	movf	UART_Read_Text@i+1,w
 11537  1302  3D71               	addwfc	UART_Read_Text@Output+1,w
 11538  1303  00F6               	movwf	??_UART_Read_Text+2
 11539  1304  0875               	movf	??_UART_Read_Text+1,w
 11540  1305  0086               	movwf	6
 11541  1306  0876               	movf	??_UART_Read_Text+2,w
 11542  1307  0087               	movwf	7
 11543  1308  0874               	movf	??_UART_Read_Text,w
 11544  1309  0081               	movwf	1
 11545                           
 11546                           ;uart.h: 61: if(Output[i-1]=='O' && Output[i]=='K')
 11547  130A  0877               	movf	UART_Read_Text@i,w
 11548  130B  3EFF               	addlw	255
 11549  130C  00F4               	movwf	??_UART_Read_Text
 11550  130D  30FF               	movlw	255
 11551  130E  3D78               	addwfc	UART_Read_Text@i+1,w
 11552  130F  00F5               	movwf	??_UART_Read_Text+1
 11553  1310  0874               	movf	??_UART_Read_Text,w
 11554  1311  0770               	addwf	UART_Read_Text@Output,w
 11555  1312  0086               	movwf	6
 11556  1313  0875               	movf	??_UART_Read_Text+1,w
 11557  1314  3D71               	addwfc	UART_Read_Text@Output+1,w
 11558  1315  0087               	movwf	7
 11559  1316  304F               	movlw	79
 11560  1317  0601               	xorwf	1,w
 11561  1318  1D03               	btfss	3,2
 11562  1319  2B24               	goto	l4842
 11563  131A  0877               	movf	UART_Read_Text@i,w
 11564  131B  0770               	addwf	UART_Read_Text@Output,w
 11565  131C  0086               	movwf	6
 11566  131D  0878               	movf	UART_Read_Text@i+1,w
 11567  131E  3D71               	addwfc	UART_Read_Text@Output+1,w
 11568  131F  0087               	movwf	7
 11569  1320  304B               	movlw	75
 11570  1321  0601               	xorwf	1,w
 11571  1322  1903               	btfsc	3,2
 11572  1323  0008               	return
 11573  1324                     l4842:	
 11574                           ;uart.h: 62: break;
 11575                           
 11576  1324  3001               	movlw	1
 11577  1325  07F7               	addwf	UART_Read_Text@i,f
 11578  1326  3000               	movlw	0
 11579  1327  3DF8               	addwfc	UART_Read_Text@i+1,f
 11580  1328  2AF2               	goto	l235
 11581  1329                     __end_of_UART_Read_Text:	
 11582                           
 11583                           	psect	text62
 11584  1D20                     __ptext62:	
 11585 ;; *************** function _UART_Read *****************
 11586 ;; Defined at:
 11587 ;;		line 44 in file "uart.h"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;		None
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;		None
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      unsigned char 
 11594 ;; Registers used:
 11595 ;;		wreg
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11605 ;;Total ram usage:        0 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; This function calls:
 11608 ;;		Nothing
 11609 ;; This function is called by:
 11610 ;;		_UART_Read_Text
 11611 ;; This function uses a non-reentrant model
 11612 ;;
 11613                           
 11614                           
 11615                           ;psect for function _UART_Read
 11616  1D20                     _UART_Read:	
 11617  1D20                     l228:	
 11618                           ;uart.h: 46: while(!PIR1bits.RCIF)
 11619                           
 11620                           ;incstack = 0
 11621                           ; Regs used in _UART_Read: [wreg]
 11622                           
 11623  1D20  0020               	movlb	0	; select bank0
 11624  1D21  1A91               	btfsc	17,5	;volatile
 11625  1D22  2D29               	goto	l4704
 11626                           
 11627                           ;uart.h: 47: if(1 == RC1STAbits.OERR)
 11628  1D23  0023               	movlb	3	; select bank3
 11629  1D24  1C9D               	btfss	29,1	;volatile
 11630  1D25  2D20               	goto	l228
 11631                           
 11632                           ;uart.h: 48: {
 11633                           ;uart.h: 49: RC1STAbits.CREN = 0;
 11634  1D26  121D               	bcf	29,4	;volatile
 11635                           
 11636                           ;uart.h: 50: RC1STAbits.CREN = 1;
 11637  1D27  161D               	bsf	29,4	;volatile
 11638  1D28  2D20               	goto	l228
 11639  1D29                     l4704:	
 11640                           
 11641                           ;uart.h: 51: }
 11642                           ;uart.h: 52: return RC1REG;
 11643  1D29  0023               	movlb	3	; select bank3
 11644  1D2A  0819               	movf	25,w	;volatile
 11645  1D2B  0008               	return
 11646  1D2C                     __end_of_UART_Read:	
 11647                           
 11648                           	psect	text63
 11649  1F8E                     __ptext63:	
 11650 ;; *************** function _ShowMessage *****************
 11651 ;; Defined at:
 11652 ;;		line 181 in file "gsm.h"
 11653 ;; Parameters:    Size  Location     Type
 11654 ;;  message         2   16[BANK0 ] PTR const unsigned char 
 11655 ;;		 -> STR_84(11), STR_83(11), STR_82(11), STR_80(11), 
 11656 ;;		 -> STR_78(11), STR_68(9), STR_67(10), STR_63(10), 
 11657 ;;		 -> STR_61(14), STR_60(8), STR_58(6), STR_57(6), 
 11658 ;;		 -> STR_51(9), STR_49(7), STR_48(10), STR_39(12), 
 11659 ;;		 -> STR_37(7), STR_17(9), STR_12(5), STR_7(5), 
 11660 ;;  page            1   18[BANK0 ] unsigned char 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;		None
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      void 
 11665 ;; Registers used:
 11666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11672 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11674 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11675 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11676 ;;Total ram usage:        7 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; Hardware stack levels required when called:    5
 11679 ;; This function calls:
 11680 ;;		_Oled_ConstText
 11681 ;;		_Oled_SetFont
 11682 ;; This function is called by:
 11683 ;;		_GsmOff
 11684 ;;		_GsmOn
 11685 ;;		_CheckBattery
 11686 ;;		_ReadLastSMS
 11687 ;;		_ReadPhoneNumber
 11688 ;;		_SendSms
 11689 ;;		_RFID_Ok
 11690 ;;		_main
 11691 ;;		_CheckSW1
 11692 ;;		_CheckSW2
 11693 ;;		_SettingMenu
 11694 ;;		_SetAlarmOff
 11695 ;;		_SetAlarmOn
 11696 ;;		_RaiseAlarm
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           
 11701                           ;psect for function _ShowMessage
 11702  1F8E                     _ShowMessage:	
 11703                           
 11704                           ;gsm.h: 182: Oled_SetFont(Terminal12x16, 12, 16, 63, 90);
 11705                           
 11706                           ;incstack = 0
 11707                           ; Regs used in _ShowMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11708  1F8E  3012               	movlw	low (_Terminal12x16| (0+32768))
 11709  1F8F  0020               	movlb	0	; select bank0
 11710  1F90  00A0               	movwf	Oled_SetFont@_font
 11711  1F91  3088               	movlw	high (_Terminal12x16| (0+32768))
 11712  1F92  00A1               	movwf	Oled_SetFont@_font+1
 11713  1F93  300C               	movlw	12
 11714  1F94  00B3               	movwf	??_ShowMessage
 11715  1F95  0833               	movf	??_ShowMessage,w
 11716  1F96  00A2               	movwf	Oled_SetFont@_width
 11717  1F97  3010               	movlw	16
 11718  1F98  00B4               	movwf	??_ShowMessage+1
 11719  1F99  0834               	movf	??_ShowMessage+1,w
 11720  1F9A  00A3               	movwf	Oled_SetFont@_height
 11721  1F9B  303F               	movlw	63
 11722  1F9C  00B5               	movwf	??_ShowMessage+2
 11723  1F9D  0835               	movf	??_ShowMessage+2,w
 11724  1F9E  00A4               	movwf	Oled_SetFont@_min
 11725  1F9F  305A               	movlw	90
 11726  1FA0  00B6               	movwf	??_ShowMessage+3
 11727  1FA1  0836               	movf	??_ShowMessage+3,w
 11728  1FA2  00A5               	movwf	Oled_SetFont@_max
 11729  1FA3  3190  204B  319F   	fcall	_Oled_SetFont
 11730                           
 11731                           ;gsm.h: 183: Oled_ConstText(message, 0, page);
 11732  1FA6  0020               	movlb	0	; select bank0
 11733  1FA7  0831               	movf	ShowMessage@message+1,w
 11734  1FA8  00AA               	movwf	Oled_ConstText@buffer+1
 11735  1FA9  0830               	movf	ShowMessage@message,w
 11736  1FAA  00A9               	movwf	Oled_ConstText@buffer
 11737  1FAB  01AB               	clrf	Oled_ConstText@seg
 11738  1FAC  0832               	movf	ShowMessage@page,w
 11739  1FAD  00B3               	movwf	??_ShowMessage
 11740  1FAE  0833               	movf	??_ShowMessage,w
 11741  1FAF  00AC               	movwf	Oled_ConstText@pag
 11742  1FB0  319F  27D9         	fcall	_Oled_ConstText
 11743  1FB2  0008               	return
 11744  1FB3                     __end_of_ShowMessage:	
 11745                           
 11746                           	psect	text64
 11747  11A4                     __ptext64:	
 11748 ;; *************** function _ShowBattLoad *****************
 11749 ;; Defined at:
 11750 ;;		line 170 in file "gsm.h"
 11751 ;; Parameters:    Size  Location     Type
 11752 ;;  level           2   16[BANK0 ] PTR const unsigned char 
 11753 ;;		 -> ReadPhoneNumber@result1(50), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
 11754 ;;		 -> NULL(0), CheckSimCard@result(11), 
 11755 ;; Auto vars:     Size  Location     Type
 11756 ;;		None
 11757 ;; Return value:  Size  Location     Type
 11758 ;;                  1    wreg      void 
 11759 ;; Registers used:
 11760 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11761 ;; Tracked objects:
 11762 ;;		On entry : 0/0
 11763 ;;		On exit  : 0/0
 11764 ;;		Unchanged: 0/0
 11765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11766 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11768 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11769 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11770 ;;Total ram usage:        6 bytes
 11771 ;; Hardware stack levels used:    1
 11772 ;; Hardware stack levels required when called:    5
 11773 ;; This function calls:
 11774 ;;		_Oled_ConstText
 11775 ;;		_Oled_SetFont
 11776 ;;		_strcat
 11777 ;; This function is called by:
 11778 ;;		_CheckBattery
 11779 ;; This function uses a non-reentrant model
 11780 ;;
 11781                           
 11782                           
 11783                           ;psect for function _ShowBattLoad
 11784  11A4                     _ShowBattLoad:	
 11785                           
 11786                           ;gsm.h: 171: strcat(level, "/");
 11787                           
 11788                           ;incstack = 0
 11789                           ; Regs used in _ShowBattLoad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11790  11A4  0020               	movlb	0	; select bank0
 11791  11A5  0831               	movf	ShowBattLoad@level+1,w
 11792  11A6  00F1               	movwf	strcat@to+1
 11793  11A7  0830               	movf	ShowBattLoad@level,w
 11794  11A8  00F0               	movwf	strcat@to
 11795  11A9  3004               	movlw	low (STR_53| (0+32768))
 11796  11AA  00F2               	movwf	strcat@from
 11797  11AB  308F               	movlw	high (STR_53| (0+32768))
 11798  11AC  00F3               	movwf	strcat@from+1
 11799  11AD  319F  27B3  3191   	fcall	_strcat
 11800                           
 11801                           ;gsm.h: 172: Oled_SetFont(Battery6x8, 6, 8, 47, 58);
 11802  11B0  3018               	movlw	low (_Battery6x8| (0+32768))
 11803  11B1  0020               	movlb	0	; select bank0
 11804  11B2  00A0               	movwf	Oled_SetFont@_font
 11805  11B3  308D               	movlw	high (_Battery6x8| (0+32768))
 11806  11B4  00A1               	movwf	Oled_SetFont@_font+1
 11807  11B5  3006               	movlw	6
 11808  11B6  00B2               	movwf	??_ShowBattLoad
 11809  11B7  0832               	movf	??_ShowBattLoad,w
 11810  11B8  00A2               	movwf	Oled_SetFont@_width
 11811  11B9  3008               	movlw	8
 11812  11BA  00B3               	movwf	??_ShowBattLoad+1
 11813  11BB  0833               	movf	??_ShowBattLoad+1,w
 11814  11BC  00A3               	movwf	Oled_SetFont@_height
 11815  11BD  302F               	movlw	47
 11816  11BE  00B4               	movwf	??_ShowBattLoad+2
 11817  11BF  0834               	movf	??_ShowBattLoad+2,w
 11818  11C0  00A4               	movwf	Oled_SetFont@_min
 11819  11C1  303A               	movlw	58
 11820  11C2  00B5               	movwf	??_ShowBattLoad+3
 11821  11C3  0835               	movf	??_ShowBattLoad+3,w
 11822  11C4  00A5               	movwf	Oled_SetFont@_max
 11823  11C5  3190  204B  3191   	fcall	_Oled_SetFont
 11824                           
 11825                           ;gsm.h: 173: Oled_ConstText(level, 86, 0);
 11826  11C8  0020               	movlb	0	; select bank0
 11827  11C9  0831               	movf	ShowBattLoad@level+1,w
 11828  11CA  00AA               	movwf	Oled_ConstText@buffer+1
 11829  11CB  0830               	movf	ShowBattLoad@level,w
 11830  11CC  00A9               	movwf	Oled_ConstText@buffer
 11831  11CD  3056               	movlw	86
 11832  11CE  00B2               	movwf	??_ShowBattLoad
 11833  11CF  0832               	movf	??_ShowBattLoad,w
 11834  11D0  00AB               	movwf	Oled_ConstText@seg
 11835  11D1  01AC               	clrf	Oled_ConstText@pag
 11836  11D2  319F  27D9         	fcall	_Oled_ConstText
 11837  11D4  0008               	return
 11838  11D5                     __end_of_ShowBattLoad:	
 11839                           
 11840                           	psect	text65
 11841  1FB3                     __ptext65:	
 11842 ;; *************** function _strcat *****************
 11843 ;; Defined at:
 11844 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strcat.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  to              2    0[COMMON] PTR unsigned char 
 11847 ;;		 -> RFID_Ok@badgeSerialNumber(11), ReadPhoneNumber@result1(50), SavePhoneNumber@str1(50), result3(67), 
 11848 ;;		 -> CheckNetwork@res(20), CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
 11849 ;;  from            2    2[COMMON] PTR const unsigned char 
 11850 ;;		 -> RFID_Ok@buffer(1), STR_53(2), ReadPhoneNumber@result1(50), SavePhoneNumber@str2(50), 
 11851 ;;		 -> STR_38(1), result3(67), CheckNetwork@res(20), CheckBattery@res(31), 
 11852 ;;		 -> NULL(0), CheckSimCard@result(11), 
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;  cp              2    4[COMMON] PTR unsigned char 
 11855 ;;		 -> RFID_Ok@badgeSerialNumber(11), ReadPhoneNumber@result1(50), SavePhoneNumber@str1(50), result3(67), 
 11856 ;;		 -> CheckNetwork@res(20), CheckBattery@res(31), NULL(0), CheckSimCard@result(11), 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  2    0[COMMON] PTR unsigned char 
 11859 ;; Registers used:
 11860 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11866 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;Total ram usage:        6 bytes
 11871 ;; Hardware stack levels used:    1
 11872 ;; This function calls:
 11873 ;;		Nothing
 11874 ;; This function is called by:
 11875 ;;		_SavePhoneNumber
 11876 ;;		_ShowBattLoad
 11877 ;;		_RFID_Ok
 11878 ;; This function uses a non-reentrant model
 11879 ;;
 11880                           
 11881                           
 11882                           ;psect for function _strcat
 11883  1FB3                     _strcat:	
 11884                           
 11885                           ;incstack = 0
 11886                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
 11887  1FB3  0871               	movf	strcat@to+1,w
 11888  1FB4  00F5               	movwf	strcat@cp+1
 11889  1FB5  0870               	movf	strcat@to,w
 11890  1FB6  00F4               	movwf	strcat@cp
 11891  1FB7                     l4930:	
 11892  1FB7  0874               	movf	strcat@cp,w
 11893  1FB8  0086               	movwf	6
 11894  1FB9  0875               	movf	strcat@cp+1,w
 11895  1FBA  0087               	movwf	7
 11896  1FBB  0801               	movf	1,w
 11897  1FBC  1903               	btfsc	3,2
 11898  1FBD  2FCB               	goto	l4934
 11899  1FBE  3001               	movlw	1
 11900  1FBF  07F4               	addwf	strcat@cp,f
 11901  1FC0  3000               	movlw	0
 11902  1FC1  3DF5               	addwfc	strcat@cp+1,f
 11903  1FC2  2FB7               	goto	l4930
 11904  1FC3                     l4932:	
 11905  1FC3  3001               	movlw	1
 11906  1FC4  07F4               	addwf	strcat@cp,f
 11907  1FC5  3000               	movlw	0
 11908  1FC6  3DF5               	addwfc	strcat@cp+1,f
 11909  1FC7  3001               	movlw	1
 11910  1FC8  07F2               	addwf	strcat@from,f
 11911  1FC9  3000               	movlw	0
 11912  1FCA  3DF3               	addwfc	strcat@from+1,f
 11913  1FCB                     l4934:	
 11914  1FCB  0874               	movf	strcat@cp,w
 11915  1FCC  0086               	movwf	6
 11916  1FCD  0875               	movf	strcat@cp+1,w
 11917  1FCE  0087               	movwf	7
 11918  1FCF  0872               	movf	strcat@from,w
 11919  1FD0  0084               	movwf	4
 11920  1FD1  0873               	movf	strcat@from+1,w
 11921  1FD2  0085               	movwf	5
 11922  1FD3  0800               	movf	0,w	;code access
 11923  1FD4  3FC0               	movwi [0]fsr1
 11924  1FD5  0889               	movf	9,f
 11925  1FD6  1903               	btfsc	3,2
 11926  1FD7  0008               	return
 11927  1FD8  2FC3               	goto	l4932
 11928  1FD9                     __end_of_strcat:	
 11929                           ;	Return value of _strcat is never used
 11930                           
 11931                           
 11932                           	psect	text66
 11933  11D5                     __ptext66:	
 11934 ;; *************** function _ShowBattIcon *****************
 11935 ;; Defined at:
 11936 ;;		line 164 in file "gsm.h"
 11937 ;; Parameters:    Size  Location     Type
 11938 ;;  level           2   16[BANK0 ] PTR const unsigned char 
 11939 ;;		 -> STR_21(2), STR_20(2), STR_19(2), STR_18(2), 
 11940 ;; Auto vars:     Size  Location     Type
 11941 ;;		None
 11942 ;; Return value:  Size  Location     Type
 11943 ;;                  1    wreg      void 
 11944 ;; Registers used:
 11945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11946 ;; Tracked objects:
 11947 ;;		On entry : 0/0
 11948 ;;		On exit  : 0/0
 11949 ;;		Unchanged: 0/0
 11950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11951 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11953 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11954 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11955 ;;Total ram usage:        6 bytes
 11956 ;; Hardware stack levels used:    1
 11957 ;; Hardware stack levels required when called:    5
 11958 ;; This function calls:
 11959 ;;		_Oled_ConstText
 11960 ;;		_Oled_SetFont
 11961 ;; This function is called by:
 11962 ;;		_CheckBattery
 11963 ;; This function uses a non-reentrant model
 11964 ;;
 11965                           
 11966                           
 11967                           ;psect for function _ShowBattIcon
 11968  11D5                     _ShowBattIcon:	
 11969                           
 11970                           ;gsm.h: 165: Oled_SetFont(Battery8x21, 21, 8, 48, 52);
 11971                           
 11972                           ;incstack = 0
 11973                           ; Regs used in _ShowBattIcon: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11974  11D5  309A               	movlw	low (_Battery8x21| (0+32768))
 11975  11D6  0020               	movlb	0	; select bank0
 11976  11D7  00A0               	movwf	Oled_SetFont@_font
 11977  11D8  308C               	movlw	high (_Battery8x21| (0+32768))
 11978  11D9  00A1               	movwf	Oled_SetFont@_font+1
 11979  11DA  3015               	movlw	21
 11980  11DB  00B2               	movwf	??_ShowBattIcon
 11981  11DC  0832               	movf	??_ShowBattIcon,w
 11982  11DD  00A2               	movwf	Oled_SetFont@_width
 11983  11DE  3008               	movlw	8
 11984  11DF  00B3               	movwf	??_ShowBattIcon+1
 11985  11E0  0833               	movf	??_ShowBattIcon+1,w
 11986  11E1  00A3               	movwf	Oled_SetFont@_height
 11987  11E2  3030               	movlw	48
 11988  11E3  00B4               	movwf	??_ShowBattIcon+2
 11989  11E4  0834               	movf	??_ShowBattIcon+2,w
 11990  11E5  00A4               	movwf	Oled_SetFont@_min
 11991  11E6  3034               	movlw	52
 11992  11E7  00B5               	movwf	??_ShowBattIcon+3
 11993  11E8  0835               	movf	??_ShowBattIcon+3,w
 11994  11E9  00A5               	movwf	Oled_SetFont@_max
 11995  11EA  3190  204B  3191   	fcall	_Oled_SetFont
 11996                           
 11997                           ;gsm.h: 166: Oled_ConstText(level, 107, 0);
 11998  11ED  0020               	movlb	0	; select bank0
 11999  11EE  0831               	movf	ShowBattIcon@level+1,w
 12000  11EF  00AA               	movwf	Oled_ConstText@buffer+1
 12001  11F0  0830               	movf	ShowBattIcon@level,w
 12002  11F1  00A9               	movwf	Oled_ConstText@buffer
 12003  11F2  306B               	movlw	107
 12004  11F3  00B2               	movwf	??_ShowBattIcon
 12005  11F4  0832               	movf	??_ShowBattIcon,w
 12006  11F5  00AB               	movwf	Oled_ConstText@seg
 12007  11F6  01AC               	clrf	Oled_ConstText@pag
 12008  11F7  319F  27D9  3191   	fcall	_Oled_ConstText
 12009                           
 12010                           ;gsm.h: 167: Oled_ConstText("5", 107, 1);
 12011  11FA  300C               	movlw	low (STR_52| (0+32768))
 12012  11FB  0020               	movlb	0	; select bank0
 12013  11FC  00A9               	movwf	Oled_ConstText@buffer
 12014  11FD  308F               	movlw	high (STR_52| (0+32768))
 12015  11FE  00AA               	movwf	Oled_ConstText@buffer+1
 12016  11FF  306B               	movlw	107
 12017  1200  00B2               	movwf	??_ShowBattIcon
 12018  1201  0832               	movf	??_ShowBattIcon,w
 12019  1202  00AB               	movwf	Oled_ConstText@seg
 12020  1203  01AC               	clrf	Oled_ConstText@pag
 12021  1204  0AAC               	incf	Oled_ConstText@pag,f
 12022  1205  319F  27D9         	fcall	_Oled_ConstText
 12023  1207  0008               	return
 12024  1208                     __end_of_ShowBattIcon:	
 12025                           
 12026                           	psect	text67
 12027  104B                     __ptext67:	
 12028 ;; *************** function _Oled_SetFont *****************
 12029 ;; Defined at:
 12030 ;;		line 134 in file "oled.h"
 12031 ;; Parameters:    Size  Location     Type
 12032 ;;  _font           2    0[BANK0 ] PTR const unsigned char 
 12033 ;;		 -> Icon16x16(224), FlightMode8x12(32), Numeric12x16(264), Terminal12x16(672), 
 12034 ;;		 -> Reception8x8(16), Battery6x8(66), Battery8x21(126), 
 12035 ;;  _width          1    2[BANK0 ] unsigned char 
 12036 ;;  _height         1    3[BANK0 ] unsigned char 
 12037 ;;  _min            1    4[BANK0 ] unsigned char 
 12038 ;;  _max            1    5[BANK0 ] unsigned char 
 12039 ;; Auto vars:     Size  Location     Type
 12040 ;;		None
 12041 ;; Return value:  Size  Location     Type
 12042 ;;                  1    wreg      void 
 12043 ;; Registers used:
 12044 ;;		wreg, status,2, status,0, pclath, cstack
 12045 ;; Tracked objects:
 12046 ;;		On entry : 0/0
 12047 ;;		On exit  : 0/0
 12048 ;;		Unchanged: 0/0
 12049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12050 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12052 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12053 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12054 ;;Total ram usage:        9 bytes
 12055 ;; Hardware stack levels used:    1
 12056 ;; Hardware stack levels required when called:    1
 12057 ;; This function calls:
 12058 ;;		___awdiv
 12059 ;; This function is called by:
 12060 ;;		_ShowBattIcon
 12061 ;;		_ShowBattLoad
 12062 ;;		_ShowReceptionIcon
 12063 ;;		_ShowMessage
 12064 ;;		_ShowNumber
 12065 ;;		_ShowFlightIcon
 12066 ;;		_ShowIcon
 12067 ;; This function uses a non-reentrant model
 12068 ;;
 12069                           
 12070                           
 12071                           ;psect for function _Oled_SetFont
 12072  104B                     _Oled_SetFont:	
 12073                           
 12074                           ;oled.h: 135: font2 = _font;
 12075                           
 12076                           ;incstack = 0
 12077                           ; Regs used in _Oled_SetFont: [wreg+status,2+status,0+pclath+cstack]
 12078  104B  0020               	movlb	0	; select bank0
 12079  104C  0821               	movf	Oled_SetFont@_font+1,w
 12080  104D  0021               	movlb	1	; select bank1
 12081  104E  00E9               	movwf	(_font2+1)^(0+128)
 12082  104F  0020               	movlb	0	; select bank0
 12083  1050  0820               	movf	Oled_SetFont@_font,w
 12084  1051  0021               	movlb	1	; select bank1
 12085  1052  00E8               	movwf	_font2^(0+128)
 12086                           
 12087                           ;oled.h: 136: width = _width;
 12088  1053  0020               	movlb	0	; select bank0
 12089  1054  0822               	movf	Oled_SetFont@_width,w
 12090  1055  00F9               	movwf	??_Oled_SetFont
 12091  1056  0879               	movf	??_Oled_SetFont,w
 12092  1057  00EF               	movwf	_width
 12093                           
 12094                           ;oled.h: 137: height = _height / 8;
 12095  1058  3008               	movlw	8
 12096  1059  00F0               	movwf	___awdiv@divisor
 12097  105A  3000               	movlw	0
 12098  105B  00F1               	movwf	___awdiv@divisor+1
 12099  105C  0823               	movf	Oled_SetFont@_height,w
 12100  105D  00F9               	movwf	??_Oled_SetFont
 12101  105E  01FA               	clrf	??_Oled_SetFont+1
 12102  105F  0879               	movf	??_Oled_SetFont,w
 12103  1060  00F2               	movwf	___awdiv@dividend
 12104  1061  087A               	movf	??_Oled_SetFont+1,w
 12105  1062  00F3               	movwf	___awdiv@dividend+1
 12106  1063  3193  2329         	fcall	___awdiv
 12107  1065  0870               	movf	?___awdiv,w
 12108  1066  00FB               	movwf	??_Oled_SetFont+2
 12109  1067  087B               	movf	??_Oled_SetFont+2,w
 12110  1068  0020               	movlb	0	; select bank0
 12111  1069  00E8               	movwf	_height
 12112                           
 12113                           ;oled.h: 138: min = _min;
 12114  106A  0824               	movf	Oled_SetFont@_min,w
 12115  106B  00F9               	movwf	??_Oled_SetFont
 12116  106C  0879               	movf	??_Oled_SetFont,w
 12117  106D  00ED               	movwf	_min
 12118                           
 12119                           ;oled.h: 139: max = _max;
 12120  106E  0825               	movf	Oled_SetFont@_max,w
 12121  106F  00F9               	movwf	??_Oled_SetFont
 12122  1070  0879               	movf	??_Oled_SetFont,w
 12123  1071  00EC               	movwf	_max
 12124  1072  0008               	return
 12125  1073                     __end_of_Oled_SetFont:	
 12126                           
 12127                           	psect	text68
 12128  1329                     __ptext68:	
 12129 ;; *************** function ___awdiv *****************
 12130 ;; Defined at:
 12131 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 12132 ;; Parameters:    Size  Location     Type
 12133 ;;  divisor         2    0[COMMON] int 
 12134 ;;  dividend        2    2[COMMON] int 
 12135 ;; Auto vars:     Size  Location     Type
 12136 ;;  quotient        2    7[COMMON] int 
 12137 ;;  sign            1    6[COMMON] unsigned char 
 12138 ;;  counter         1    5[COMMON] unsigned char 
 12139 ;; Return value:  Size  Location     Type
 12140 ;;                  2    0[COMMON] int 
 12141 ;; Registers used:
 12142 ;;		wreg, status,2, status,0
 12143 ;; Tracked objects:
 12144 ;;		On entry : 0/0
 12145 ;;		On exit  : 0/0
 12146 ;;		Unchanged: 0/0
 12147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12148 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12149 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12150 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12151 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12152 ;;Total ram usage:        9 bytes
 12153 ;; Hardware stack levels used:    1
 12154 ;; This function calls:
 12155 ;;		Nothing
 12156 ;; This function is called by:
 12157 ;;		_Oled_SetFont
 12158 ;; This function uses a non-reentrant model
 12159 ;;
 12160                           
 12161                           
 12162                           ;psect for function ___awdiv
 12163  1329                     ___awdiv:	
 12164                           
 12165                           ;incstack = 0
 12166                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12167  1329  01F6               	clrf	___awdiv@sign
 12168  132A  1FF1               	btfss	___awdiv@divisor+1,7
 12169  132B  2B33               	goto	l4620
 12170  132C  09F0               	comf	___awdiv@divisor,f
 12171  132D  09F1               	comf	___awdiv@divisor+1,f
 12172  132E  0AF0               	incf	___awdiv@divisor,f
 12173  132F  1903               	skipnz
 12174  1330  0AF1               	incf	___awdiv@divisor+1,f
 12175  1331  01F6               	clrf	___awdiv@sign
 12176  1332  0AF6               	incf	___awdiv@sign,f
 12177  1333                     l4620:	
 12178  1333  1FF3               	btfss	___awdiv@dividend+1,7
 12179  1334  2B3E               	goto	l4626
 12180  1335  09F2               	comf	___awdiv@dividend,f
 12181  1336  09F3               	comf	___awdiv@dividend+1,f
 12182  1337  0AF2               	incf	___awdiv@dividend,f
 12183  1338  1903               	skipnz
 12184  1339  0AF3               	incf	___awdiv@dividend+1,f
 12185  133A  3001               	movlw	1
 12186  133B  00F4               	movwf	??___awdiv
 12187  133C  0874               	movf	??___awdiv,w
 12188  133D  06F6               	xorwf	___awdiv@sign,f
 12189  133E                     l4626:	
 12190  133E  01F7               	clrf	___awdiv@quotient
 12191  133F  01F8               	clrf	___awdiv@quotient+1
 12192  1340  0870               	movf	___awdiv@divisor,w
 12193  1341  0471               	iorwf	___awdiv@divisor+1,w
 12194  1342  1903               	btfsc	3,2
 12195  1343  2B6D               	goto	l4648
 12196  1344  01F5               	clrf	___awdiv@counter
 12197  1345  0AF5               	incf	___awdiv@counter,f
 12198  1346                     l4636:	
 12199  1346  1BF1               	btfsc	___awdiv@divisor+1,7
 12200  1347  2B52               	goto	l4638
 12201  1348  3001               	movlw	1
 12202  1349                     u4545:	
 12203  1349  35F0               	lslf	___awdiv@divisor,f
 12204  134A  0DF1               	rlf	___awdiv@divisor+1,f
 12205  134B  0B89               	decfsz	9,f
 12206  134C  2B49               	goto	u4545
 12207  134D  3001               	movlw	1
 12208  134E  00F4               	movwf	??___awdiv
 12209  134F  0874               	movf	??___awdiv,w
 12210  1350  07F5               	addwf	___awdiv@counter,f
 12211  1351  2B46               	goto	l4636
 12212  1352                     l4638:	
 12213  1352  3001               	movlw	1
 12214  1353                     u4565:	
 12215  1353  35F7               	lslf	___awdiv@quotient,f
 12216  1354  0DF8               	rlf	___awdiv@quotient+1,f
 12217  1355  0B89               	decfsz	9,f
 12218  1356  2B53               	goto	u4565
 12219  1357  0871               	movf	___awdiv@divisor+1,w
 12220  1358  0273               	subwf	___awdiv@dividend+1,w
 12221  1359  1D03               	skipz
 12222  135A  2B5D               	goto	u4575
 12223  135B  0870               	movf	___awdiv@divisor,w
 12224  135C  0272               	subwf	___awdiv@dividend,w
 12225  135D                     u4575:	
 12226  135D  1C03               	skipc
 12227  135E  2B64               	goto	l4644
 12228  135F  0870               	movf	___awdiv@divisor,w
 12229  1360  02F2               	subwf	___awdiv@dividend,f
 12230  1361  0871               	movf	___awdiv@divisor+1,w
 12231  1362  3BF3               	subwfb	___awdiv@dividend+1,f
 12232  1363  1477               	bsf	___awdiv@quotient,0
 12233  1364                     l4644:	
 12234  1364  3001               	movlw	1
 12235  1365                     u4585:	
 12236  1365  36F1               	lsrf	___awdiv@divisor+1,f
 12237  1366  0CF0               	rrf	___awdiv@divisor,f
 12238  1367  0B89               	decfsz	9,f
 12239  1368  2B65               	goto	u4585
 12240  1369  3001               	movlw	1
 12241  136A  02F5               	subwf	___awdiv@counter,f
 12242  136B  1D03               	btfss	3,2
 12243  136C  2B52               	goto	l4638
 12244  136D                     l4648:	
 12245  136D  0876               	movf	___awdiv@sign,w
 12246  136E  1903               	btfsc	3,2
 12247  136F  2B75               	goto	l4652
 12248  1370  09F7               	comf	___awdiv@quotient,f
 12249  1371  09F8               	comf	___awdiv@quotient+1,f
 12250  1372  0AF7               	incf	___awdiv@quotient,f
 12251  1373  1903               	skipnz
 12252  1374  0AF8               	incf	___awdiv@quotient+1,f
 12253  1375                     l4652:	
 12254  1375  0878               	movf	___awdiv@quotient+1,w
 12255  1376  00F1               	movwf	?___awdiv+1
 12256  1377  0877               	movf	___awdiv@quotient,w
 12257  1378  00F0               	movwf	?___awdiv
 12258  1379  0008               	return
 12259  137A                     __end_of___awdiv:	
 12260                           
 12261                           	psect	text69
 12262  1FD9                     __ptext69:	
 12263 ;; *************** function _Oled_ConstText *****************
 12264 ;; Defined at:
 12265 ;;		line 177 in file "oled.h"
 12266 ;; Parameters:    Size  Location     Type
 12267 ;;  buffer          2    9[BANK0 ] PTR const unsigned char 
 12268 ;;		 -> STR_84(11), STR_83(11), STR_82(11), buffer(20), 
 12269 ;;		 -> STR_80(11), STR_79(2), STR_78(11), STR_77(2), 
 12270 ;;		 -> STR_76(2), STR_75(2), STR_74(2), STR_73(2), 
 12271 ;;		 -> STR_72(2), STR_71(2), STR_70(2), STR_69(2), 
 12272 ;;		 -> STR_68(9), STR_67(10), STR_66(2), STR_65(2), 
 12273 ;;		 -> STR_64(2), STR_63(10), STR_61(14), STR_60(8), 
 12274 ;;		 -> STR_58(6), STR_57(6), STR_54(2), STR_52(2), 
 12275 ;;		 -> STR_51(9), STR_49(7), STR_48(10), ReadPhoneNumber@result1(50), 
 12276 ;;		 -> STR_39(12), STR_37(7), result3(67), STR_30(6), 
 12277 ;;		 -> STR_29(6), STR_28(6), STR_27(6), STR_26(6), 
 12278 ;;		 -> STR_25(6), CheckNetwork@res(20), STR_21(2), STR_20(2), 
 12279 ;;		 -> STR_19(2), STR_18(2), STR_17(9), CheckBattery@res(31), 
 12280 ;;		 -> STR_12(5), STR_7(5), NULL(0), CheckSimCard@result(11), 
 12281 ;;  seg             1   11[BANK0 ] unsigned char 
 12282 ;;  pag             1   12[BANK0 ] unsigned char 
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;  x_seg           1   15[BANK0 ] unsigned char 
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  1    wreg      void 
 12287 ;; Registers used:
 12288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12298 ;;Total ram usage:        7 bytes
 12299 ;; Hardware stack levels used:    1
 12300 ;; Hardware stack levels required when called:    4
 12301 ;; This function calls:
 12302 ;;		_Oled_WriteChar
 12303 ;; This function is called by:
 12304 ;;		_ShowBattIcon
 12305 ;;		_ShowBattLoad
 12306 ;;		_ShowReceptionIcon
 12307 ;;		_ShowMessage
 12308 ;;		_ShowNumber
 12309 ;;		_ShowFlightIcon
 12310 ;;		_ShowIcon
 12311 ;; This function uses a non-reentrant model
 12312 ;;
 12313                           
 12314                           
 12315                           ;psect for function _Oled_ConstText
 12316  1FD9                     _Oled_ConstText:	
 12317                           
 12318                           ;oled.h: 178: uchar x_seg = seg;
 12319                           
 12320                           ;incstack = 0
 12321                           ; Regs used in _Oled_ConstText: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12322  1FD9  0020               	movlb	0	; select bank0
 12323  1FDA  082B               	movf	Oled_ConstText@seg,w
 12324  1FDB  00AD               	movwf	??_Oled_ConstText
 12325  1FDC  082D               	movf	??_Oled_ConstText,w
 12326  1FDD  00AF               	movwf	Oled_ConstText@x_seg
 12327  1FDE                     l4676:	
 12328                           ;oled.h: 179: while(*buffer){
 12329                           
 12330  1FDE  0829               	movf	Oled_ConstText@buffer,w
 12331  1FDF  0084               	movwf	4
 12332  1FE0  082A               	movf	Oled_ConstText@buffer+1,w
 12333  1FE1  0085               	movwf	5
 12334  1FE2  0012               	moviw fsr0++
 12335  1FE3  1903               	btfsc	3,2
 12336  1FE4  0008               	return
 12337                           
 12338                           ;oled.h: 180: Oled_WriteChar(*buffer, x_seg, pag);
 12339  1FE5  082F               	movf	Oled_ConstText@x_seg,w
 12340  1FE6  00AD               	movwf	??_Oled_ConstText
 12341  1FE7  082D               	movf	??_Oled_ConstText,w
 12342  1FE8  00F8               	movwf	Oled_WriteChar@seg
 12343  1FE9  082C               	movf	Oled_ConstText@pag,w
 12344  1FEA  00AE               	movwf	??_Oled_ConstText+1
 12345  1FEB  082E               	movf	??_Oled_ConstText+1,w
 12346  1FEC  00F9               	movwf	Oled_WriteChar@pag
 12347  1FED  0829               	movf	Oled_ConstText@buffer,w
 12348  1FEE  0084               	movwf	4
 12349  1FEF  082A               	movf	Oled_ConstText@buffer+1,w
 12350  1FF0  0085               	movwf	5
 12351  1FF1  0800               	movf	0,w	;code access
 12352  1FF2  318F  275C  319F   	fcall	_Oled_WriteChar
 12353                           
 12354                           ;oled.h: 181: x_seg = x_seg + width;
 12355  1FF5  0020               	movlb	0	; select bank0
 12356  1FF6  082F               	movf	Oled_ConstText@x_seg,w
 12357  1FF7  076F               	addwf	_width,w
 12358  1FF8  00AD               	movwf	??_Oled_ConstText
 12359  1FF9  082D               	movf	??_Oled_ConstText,w
 12360  1FFA  00AF               	movwf	Oled_ConstText@x_seg
 12361                           
 12362                           ;oled.h: 182: buffer++;
 12363  1FFB  3001               	movlw	1
 12364  1FFC  07A9               	addwf	Oled_ConstText@buffer,f
 12365  1FFD  3000               	movlw	0
 12366  1FFE  3DAA               	addwfc	Oled_ConstText@buffer+1,f
 12367  1FFF  2FDE               	goto	l4676
 12368  2000                     __end_of_Oled_ConstText:	
 12369                           
 12370                           	psect	text70
 12371  0F5C                     __ptext70:	
 12372 ;; *************** function _Oled_WriteChar *****************
 12373 ;; Defined at:
 12374 ;;		line 148 in file "oled.h"
 12375 ;; Parameters:    Size  Location     Type
 12376 ;;  c               1    wreg     unsigned char 
 12377 ;;  seg             1    8[COMMON] unsigned char 
 12378 ;;  pag             1    9[COMMON] unsigned char 
 12379 ;; Auto vars:     Size  Location     Type
 12380 ;;  c               1    0[BANK0 ] unsigned char 
 12381 ;;  j               2    7[BANK0 ] unsigned int 
 12382 ;;  i               2    5[BANK0 ] unsigned int 
 12383 ;;  x_seg           1    4[BANK0 ] unsigned char 
 12384 ;;  y_pag           1    3[BANK0 ] unsigned char 
 12385 ;; Return value:  Size  Location     Type
 12386 ;;                  1    wreg      void 
 12387 ;; Registers used:
 12388 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12389 ;; Tracked objects:
 12390 ;;		On entry : 0/0
 12391 ;;		On exit  : 0/0
 12392 ;;		Unchanged: 0/0
 12393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12395 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12396 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12397 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12398 ;;Total ram usage:       15 bytes
 12399 ;; Hardware stack levels used:    1
 12400 ;; Hardware stack levels required when called:    3
 12401 ;; This function calls:
 12402 ;;		_Oled_SetPointer
 12403 ;;		_Oled_WriteRam
 12404 ;;		___wmul
 12405 ;; This function is called by:
 12406 ;;		_Oled_ConstText
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           
 12411                           ;psect for function _Oled_WriteChar
 12412  0F5C                     _Oled_WriteChar:	
 12413                           
 12414                           ;incstack = 0
 12415                           ; Regs used in _Oled_WriteChar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12416                           ;Oled_WriteChar@c stored from wreg
 12417  0F5C  0020               	movlb	0	; select bank0
 12418  0F5D  00A0               	movwf	Oled_WriteChar@c
 12419                           
 12420                           ;oled.h: 149: uint i,j;
 12421                           ;oled.h: 150: uchar x_seg, y_pag;
 12422                           ;oled.h: 151: x_seg = seg;
 12423  0F5E  0878               	movf	Oled_WriteChar@seg,w
 12424  0F5F  00FA               	movwf	??_Oled_WriteChar
 12425  0F60  087A               	movf	??_Oled_WriteChar,w
 12426  0F61  00A4               	movwf	Oled_WriteChar@x_seg
 12427                           
 12428                           ;oled.h: 152: y_pag = pag;
 12429  0F62  0879               	movf	Oled_WriteChar@pag,w
 12430  0F63  00FA               	movwf	??_Oled_WriteChar
 12431  0F64  087A               	movf	??_Oled_WriteChar,w
 12432  0F65  00A3               	movwf	Oled_WriteChar@y_pag
 12433                           
 12434                           ;oled.h: 153: font = font2;
 12435  0F66  0021               	movlb	1	; select bank1
 12436  0F67  0869               	movf	(_font2+1)^(0+128),w
 12437  0F68  0020               	movlb	0	; select bank0
 12438  0F69  00DF               	movwf	_font+1
 12439  0F6A  0021               	movlb	1	; select bank1
 12440  0F6B  0868               	movf	_font2^(0+128),w
 12441  0F6C  0020               	movlb	0	; select bank0
 12442  0F6D  00DE               	movwf	_font
 12443                           
 12444                           ;oled.h: 154: j = c - min;
 12445  0F6E  086D               	movf	_min,w
 12446  0F6F  00FA               	movwf	??_Oled_WriteChar
 12447  0F70  01FB               	clrf	??_Oled_WriteChar+1
 12448  0F71  09FA               	comf	??_Oled_WriteChar,f
 12449  0F72  09FB               	comf	??_Oled_WriteChar+1,f
 12450  0F73  0AFA               	incf	??_Oled_WriteChar,f
 12451  0F74  1903               	skipnz
 12452  0F75  0AFB               	incf	??_Oled_WriteChar+1,f
 12453  0F76  0820               	movf	Oled_WriteChar@c,w
 12454  0F77  077A               	addwf	??_Oled_WriteChar,w
 12455  0F78  00A7               	movwf	Oled_WriteChar@j
 12456  0F79  087B               	movf	??_Oled_WriteChar+1,w
 12457  0F7A  1803               	skipnc
 12458  0F7B  0A7B               	incf	??_Oled_WriteChar+1,w
 12459  0F7C  00A8               	movwf	Oled_WriteChar@j+1
 12460                           
 12461                           ;oled.h: 155: j = j * (width * height);
 12462  0F7D  086F               	movf	_width,w
 12463  0F7E  00FA               	movwf	??_Oled_WriteChar
 12464  0F7F  01FB               	clrf	??_Oled_WriteChar+1
 12465  0F80  087A               	movf	??_Oled_WriteChar,w
 12466  0F81  00F0               	movwf	___wmul@multiplier
 12467  0F82  087B               	movf	??_Oled_WriteChar+1,w
 12468  0F83  00F1               	movwf	___wmul@multiplier+1
 12469  0F84  0868               	movf	_height,w
 12470  0F85  00FC               	movwf	??_Oled_WriteChar+2
 12471  0F86  01FD               	clrf	??_Oled_WriteChar+3
 12472  0F87  087C               	movf	??_Oled_WriteChar+2,w
 12473  0F88  00F2               	movwf	___wmul@multiplicand
 12474  0F89  087D               	movf	??_Oled_WriteChar+3,w
 12475  0F8A  00F3               	movwf	___wmul@multiplicand+1
 12476  0F8B  319E  2654  318F   	fcall	___wmul
 12477  0F8E  0871               	movf	?___wmul+1,w
 12478  0F8F  0020               	movlb	0	; select bank0
 12479  0F90  00A2               	movwf	_Oled_WriteChar$1368+1
 12480  0F91  0870               	movf	?___wmul,w
 12481  0F92  00A1               	movwf	_Oled_WriteChar$1368
 12482                           
 12483                           ;oled.h: 155: j = j * (width * height);
 12484  0F93  0822               	movf	_Oled_WriteChar$1368+1,w
 12485  0F94  00F1               	movwf	___wmul@multiplier+1
 12486  0F95  0821               	movf	_Oled_WriteChar$1368,w
 12487  0F96  00F0               	movwf	___wmul@multiplier
 12488  0F97  0828               	movf	Oled_WriteChar@j+1,w
 12489  0F98  00F3               	movwf	___wmul@multiplicand+1
 12490  0F99  0827               	movf	Oled_WriteChar@j,w
 12491  0F9A  00F2               	movwf	___wmul@multiplicand
 12492  0F9B  319E  2654  318F   	fcall	___wmul
 12493  0F9E  0871               	movf	?___wmul+1,w
 12494  0F9F  0020               	movlb	0	; select bank0
 12495  0FA0  00A8               	movwf	Oled_WriteChar@j+1
 12496  0FA1  0870               	movf	?___wmul,w
 12497  0FA2  00A7               	movwf	Oled_WriteChar@j
 12498                           
 12499                           ;oled.h: 156: for(i = 0; i < j; i++){font++;}
 12500  0FA3  01A5               	clrf	Oled_WriteChar@i
 12501  0FA4  01A6               	clrf	Oled_WriteChar@i+1
 12502  0FA5                     l308:	
 12503  0FA5  0828               	movf	Oled_WriteChar@j+1,w
 12504  0FA6  0226               	subwf	Oled_WriteChar@i+1,w
 12505  0FA7  1D03               	skipz
 12506  0FA8  2FAB               	goto	u4475
 12507  0FA9  0827               	movf	Oled_WriteChar@j,w
 12508  0FAA  0225               	subwf	Oled_WriteChar@i,w
 12509  0FAB                     u4475:	
 12510  0FAB  1803               	btfsc	3,0
 12511  0FAC  2FB6               	goto	l4566
 12512  0FAD  3001               	movlw	1
 12513  0FAE  07DE               	addwf	_font,f
 12514  0FAF  3000               	movlw	0
 12515  0FB0  3DDF               	addwfc	_font+1,f
 12516  0FB1  3001               	movlw	1
 12517  0FB2  07A5               	addwf	Oled_WriteChar@i,f
 12518  0FB3  3000               	movlw	0
 12519  0FB4  3DA6               	addwfc	Oled_WriteChar@i+1,f
 12520  0FB5  2FA5               	goto	l308
 12521  0FB6                     l4566:	
 12522                           
 12523                           ;oled.h: 157: for(i = 0; i < width; i++){
 12524  0FB6  01A5               	clrf	Oled_WriteChar@i
 12525  0FB7  01A6               	clrf	Oled_WriteChar@i+1
 12526  0FB8                     l4590:	
 12527  0FB8  086F               	movf	_width,w
 12528  0FB9  00FA               	movwf	??_Oled_WriteChar
 12529  0FBA  01FB               	clrf	??_Oled_WriteChar+1
 12530  0FBB  087B               	movf	??_Oled_WriteChar+1,w
 12531  0FBC  0226               	subwf	Oled_WriteChar@i+1,w
 12532  0FBD  1D03               	skipz
 12533  0FBE  2FC1               	goto	u4505
 12534  0FBF  087A               	movf	??_Oled_WriteChar,w
 12535  0FC0  0225               	subwf	Oled_WriteChar@i,w
 12536  0FC1                     u4505:	
 12537  0FC1  1803               	btfsc	3,0
 12538  0FC2  0008               	return
 12539                           
 12540                           ;oled.h: 158: y_pag = pag;
 12541  0FC3  0879               	movf	Oled_WriteChar@pag,w
 12542  0FC4  00FA               	movwf	??_Oled_WriteChar
 12543  0FC5  087A               	movf	??_Oled_WriteChar,w
 12544  0FC6  00A3               	movwf	Oled_WriteChar@y_pag
 12545                           
 12546                           ;oled.h: 159: for(j = 0; j < height; j++){
 12547  0FC7  01A7               	clrf	Oled_WriteChar@j
 12548  0FC8  01A8               	clrf	Oled_WriteChar@j+1
 12549  0FC9                     l4584:	
 12550  0FC9  0868               	movf	_height,w
 12551  0FCA  00FA               	movwf	??_Oled_WriteChar
 12552  0FCB  01FB               	clrf	??_Oled_WriteChar+1
 12553  0FCC  087B               	movf	??_Oled_WriteChar+1,w
 12554  0FCD  0228               	subwf	Oled_WriteChar@j+1,w
 12555  0FCE  1D03               	skipz
 12556  0FCF  2FD2               	goto	u4495
 12557  0FD0  087A               	movf	??_Oled_WriteChar,w
 12558  0FD1  0227               	subwf	Oled_WriteChar@j,w
 12559  0FD2                     u4495:	
 12560  0FD2  1803               	btfsc	3,0
 12561  0FD3  2FF7               	goto	l4586
 12562                           
 12563                           ;oled.h: 160: if(x_seg < 128){
 12564  0FD4  3080               	movlw	128
 12565  0FD5  0224               	subwf	Oled_WriteChar@x_seg,w
 12566  0FD6  1803               	skipnc
 12567  0FD7  2FE9               	goto	l4578
 12568                           
 12569                           ;oled.h: 161: Oled_SetPointer(x_seg, y_pag);
 12570  0FD8  0823               	movf	Oled_WriteChar@y_pag,w
 12571  0FD9  00FA               	movwf	??_Oled_WriteChar
 12572  0FDA  087A               	movf	??_Oled_WriteChar,w
 12573  0FDB  00F2               	movwf	Oled_SetPointer@pag
 12574  0FDC  0824               	movf	Oled_WriteChar@x_seg,w
 12575  0FDD  3190  20EC  318F   	fcall	_Oled_SetPointer
 12576                           
 12577                           ;oled.h: 162: Oled_WriteRam(*font);
 12578  0FE0  0020               	movlb	0	; select bank0
 12579  0FE1  085E               	movf	_font,w
 12580  0FE2  0084               	movwf	4
 12581  0FE3  085F               	movf	_font+1,w
 12582  0FE4  0085               	movwf	5
 12583  0FE5  0800               	movf	0,w	;code access
 12584  0FE6  319D  250B  318F   	fcall	_Oled_WriteRam
 12585  0FE9                     l4578:	
 12586                           
 12587                           ;oled.h: 163: }
 12588                           ;oled.h: 164: y_pag++;
 12589  0FE9  3001               	movlw	1
 12590  0FEA  00FA               	movwf	??_Oled_WriteChar
 12591  0FEB  087A               	movf	??_Oled_WriteChar,w
 12592  0FEC  0020               	movlb	0	; select bank0
 12593  0FED  07A3               	addwf	Oled_WriteChar@y_pag,f
 12594                           
 12595                           ;oled.h: 165: font++;
 12596  0FEE  3001               	movlw	1
 12597  0FEF  07DE               	addwf	_font,f
 12598  0FF0  3000               	movlw	0
 12599  0FF1  3DDF               	addwfc	_font+1,f
 12600  0FF2  3001               	movlw	1
 12601  0FF3  07A7               	addwf	Oled_WriteChar@j,f
 12602  0FF4  3000               	movlw	0
 12603  0FF5  3DA8               	addwfc	Oled_WriteChar@j+1,f
 12604  0FF6  2FC9               	goto	l4584
 12605  0FF7                     l4586:	
 12606                           
 12607                           ;oled.h: 166: }
 12608                           ;oled.h: 167: x_seg++;
 12609  0FF7  3001               	movlw	1
 12610  0FF8  00FA               	movwf	??_Oled_WriteChar
 12611  0FF9  087A               	movf	??_Oled_WriteChar,w
 12612  0FFA  07A4               	addwf	Oled_WriteChar@x_seg,f
 12613  0FFB  3001               	movlw	1
 12614  0FFC  07A5               	addwf	Oled_WriteChar@i,f
 12615  0FFD  3000               	movlw	0
 12616  0FFE  3DA6               	addwfc	Oled_WriteChar@i+1,f
 12617  0FFF  2FB8               	goto	l4590
 12618  1000                     __end_of_Oled_WriteChar:	
 12619                           
 12620                           	psect	text71
 12621  1E54                     __ptext71:	
 12622 ;; *************** function ___wmul *****************
 12623 ;; Defined at:
 12624 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 12625 ;; Parameters:    Size  Location     Type
 12626 ;;  multiplier      2    0[COMMON] unsigned int 
 12627 ;;  multiplicand    2    2[COMMON] unsigned int 
 12628 ;; Auto vars:     Size  Location     Type
 12629 ;;  product         2    4[COMMON] unsigned int 
 12630 ;; Return value:  Size  Location     Type
 12631 ;;                  2    0[COMMON] unsigned int 
 12632 ;; Registers used:
 12633 ;;		wreg, status,2, status,0
 12634 ;; Tracked objects:
 12635 ;;		On entry : 0/0
 12636 ;;		On exit  : 0/0
 12637 ;;		Unchanged: 0/0
 12638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12642 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12643 ;;Total ram usage:        6 bytes
 12644 ;; Hardware stack levels used:    1
 12645 ;; This function calls:
 12646 ;;		Nothing
 12647 ;; This function is called by:
 12648 ;;		_Oled_WriteChar
 12649 ;;		_sprintf
 12650 ;;		_atoi
 12651 ;; This function uses a non-reentrant model
 12652 ;;
 12653                           
 12654                           
 12655                           ;psect for function ___wmul
 12656  1E54                     ___wmul:	
 12657                           
 12658                           ;incstack = 0
 12659                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12660  1E54  01F4               	clrf	___wmul@product
 12661  1E55  01F5               	clrf	___wmul@product+1
 12662  1E56                     l4542:	
 12663  1E56  1C70               	btfss	___wmul@multiplier,0
 12664  1E57  2E5C               	goto	l717
 12665  1E58  0872               	movf	___wmul@multiplicand,w
 12666  1E59  07F4               	addwf	___wmul@product,f
 12667  1E5A  0873               	movf	___wmul@multiplicand+1,w
 12668  1E5B  3DF5               	addwfc	___wmul@product+1,f
 12669  1E5C                     l717:	
 12670  1E5C  3001               	movlw	1
 12671  1E5D                     u4445:	
 12672  1E5D  35F2               	lslf	___wmul@multiplicand,f
 12673  1E5E  0DF3               	rlf	___wmul@multiplicand+1,f
 12674  1E5F  0B89               	decfsz	9,f
 12675  1E60  2E5D               	goto	u4445
 12676  1E61  3001               	movlw	1
 12677  1E62                     u4455:	
 12678  1E62  36F1               	lsrf	___wmul@multiplier+1,f
 12679  1E63  0CF0               	rrf	___wmul@multiplier,f
 12680  1E64  0B89               	decfsz	9,f
 12681  1E65  2E62               	goto	u4455
 12682  1E66  0870               	movf	___wmul@multiplier,w
 12683  1E67  0471               	iorwf	___wmul@multiplier+1,w
 12684  1E68  1D03               	btfss	3,2
 12685  1E69  2E56               	goto	l4542
 12686  1E6A  0875               	movf	___wmul@product+1,w
 12687  1E6B  00F1               	movwf	?___wmul+1
 12688  1E6C  0874               	movf	___wmul@product,w
 12689  1E6D  00F0               	movwf	?___wmul
 12690  1E6E  0008               	return
 12691  1E6F                     __end_of___wmul:	
 12692                           
 12693                           	psect	text72
 12694  1D0B                     __ptext72:	
 12695 ;; *************** function _Oled_WriteRam *****************
 12696 ;; Defined at:
 12697 ;;		line 33 in file "oled.h"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;  dat             1    wreg     unsigned char 
 12700 ;; Auto vars:     Size  Location     Type
 12701 ;;  dat             1    1[COMMON] unsigned char 
 12702 ;; Return value:  Size  Location     Type
 12703 ;;                  1    wreg      void 
 12704 ;; Registers used:
 12705 ;;		wreg, status,2, status,0, pclath, cstack
 12706 ;; Tracked objects:
 12707 ;;		On entry : 0/0
 12708 ;;		On exit  : 0/0
 12709 ;;		Unchanged: 0/0
 12710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12715 ;;Total ram usage:        1 bytes
 12716 ;; Hardware stack levels used:    1
 12717 ;; Hardware stack levels required when called:    1
 12718 ;; This function calls:
 12719 ;;		_SPI_Write
 12720 ;; This function is called by:
 12721 ;;		_Oled_FillScreen
 12722 ;;		_Oled_WriteChar
 12723 ;; This function uses a non-reentrant model
 12724 ;;
 12725                           
 12726                           
 12727                           ;psect for function _Oled_WriteRam
 12728  1D0B                     _Oled_WriteRam:	
 12729                           
 12730                           ;incstack = 0
 12731                           ; Regs used in _Oled_WriteRam: [wreg+status,2+status,0+pclath+cstack]
 12732                           ;Oled_WriteRam@dat stored from wreg
 12733  1D0B  00F1               	movwf	Oled_WriteRam@dat
 12734                           
 12735                           ;oled.h: 34: PORTAbits.RA4 = 0;
 12736  1D0C  0020               	movlb	0	; select bank0
 12737  1D0D  120C               	bcf	12,4	;volatile
 12738                           
 12739                           ;oled.h: 35: PORTCbits.RC5 = 1;
 12740  1D0E  168E               	bsf	14,5	;volatile
 12741                           
 12742                           ;oled.h: 36: SPI_Write(dat);
 12743  1D0F  0871               	movf	Oled_WriteRam@dat,w
 12744  1D10  319C  24F8         	fcall	_SPI_Write
 12745                           
 12746                           ;oled.h: 37: PORTAbits.RA4 = 1;
 12747  1D12  0020               	movlb	0	; select bank0
 12748  1D13  160C               	bsf	12,4	;volatile
 12749  1D14  0008               	return
 12750  1D15                     __end_of_Oled_WriteRam:	
 12751                           
 12752                           	psect	text73
 12753  10EC                     __ptext73:	
 12754 ;; *************** function _Oled_SetPointer *****************
 12755 ;; Defined at:
 12756 ;;		line 55 in file "oled.h"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;  seg             1    wreg     unsigned char 
 12759 ;;  pag             1    2[COMMON] unsigned char 
 12760 ;; Auto vars:     Size  Location     Type
 12761 ;;  seg             1    6[COMMON] unsigned char 
 12762 ;;  hig_column      1    7[COMMON] unsigned char 
 12763 ;;  low_column      1    5[COMMON] unsigned char 
 12764 ;; Return value:  Size  Location     Type
 12765 ;;                  1    wreg      void 
 12766 ;; Registers used:
 12767 ;;		wreg, status,2, status,0, pclath, cstack
 12768 ;; Tracked objects:
 12769 ;;		On entry : 0/0
 12770 ;;		On exit  : 0/0
 12771 ;;		Unchanged: 0/0
 12772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12773 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12774 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12776 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12777 ;;Total ram usage:        6 bytes
 12778 ;; Hardware stack levels used:    1
 12779 ;; Hardware stack levels required when called:    2
 12780 ;; This function calls:
 12781 ;;		_Oled_WriteCmd
 12782 ;; This function is called by:
 12783 ;;		_Oled_FillScreen
 12784 ;;		_Oled_WriteChar
 12785 ;; This function uses a non-reentrant model
 12786 ;;
 12787                           
 12788                           
 12789                           ;psect for function _Oled_SetPointer
 12790  10EC                     _Oled_SetPointer:	
 12791                           
 12792                           ;incstack = 0
 12793                           ; Regs used in _Oled_SetPointer: [wreg+status,2+status,0+pclath+cstack]
 12794                           ;Oled_SetPointer@seg stored from wreg
 12795  10EC  00F6               	movwf	Oled_SetPointer@seg
 12796                           
 12797                           ;oled.h: 56: uchar low_column, hig_column;
 12798                           ;oled.h: 57: low_column = (seg & 0b00001111);
 12799  10ED  0876               	movf	Oled_SetPointer@seg,w
 12800  10EE  390F               	andlw	15
 12801  10EF  00F3               	movwf	??_Oled_SetPointer
 12802  10F0  0873               	movf	??_Oled_SetPointer,w
 12803  10F1  00F5               	movwf	Oled_SetPointer@low_column
 12804                           
 12805                           ;oled.h: 58: hig_column = (seg & 0b11110000)>>4;
 12806  10F2  0876               	movf	Oled_SetPointer@seg,w
 12807  10F3  00F3               	movwf	??_Oled_SetPointer
 12808  10F4  3004               	movlw	4
 12809  10F5                     u4425:	
 12810  10F5  36F3               	lsrf	??_Oled_SetPointer,f
 12811  10F6  0B89               	decfsz	9,f
 12812  10F7  28F5               	goto	u4425
 12813  10F8  0873               	movf	??_Oled_SetPointer,w
 12814  10F9  390F               	andlw	15
 12815  10FA  00F4               	movwf	??_Oled_SetPointer+1
 12816  10FB  0874               	movf	??_Oled_SetPointer+1,w
 12817  10FC  00F7               	movwf	Oled_SetPointer@hig_column
 12818                           
 12819                           ;oled.h: 59: hig_column = hig_column | 0b00010000;
 12820  10FD  0877               	movf	Oled_SetPointer@hig_column,w
 12821  10FE  3810               	iorlw	16
 12822  10FF  00F3               	movwf	??_Oled_SetPointer
 12823  1100  0873               	movf	??_Oled_SetPointer,w
 12824  1101  00F7               	movwf	Oled_SetPointer@hig_column
 12825                           
 12826                           ;oled.h: 60: pag = (pag & 0b00000111);
 12827  1102  0872               	movf	Oled_SetPointer@pag,w
 12828  1103  3907               	andlw	7
 12829  1104  00F3               	movwf	??_Oled_SetPointer
 12830  1105  0873               	movf	??_Oled_SetPointer,w
 12831  1106  00F2               	movwf	Oled_SetPointer@pag
 12832                           
 12833                           ;oled.h: 61: pag = (pag | 0b10110000);
 12834  1107  0872               	movf	Oled_SetPointer@pag,w
 12835  1108  38B0               	iorlw	176
 12836  1109  00F3               	movwf	??_Oled_SetPointer
 12837  110A  0873               	movf	??_Oled_SetPointer,w
 12838  110B  00F2               	movwf	Oled_SetPointer@pag
 12839                           
 12840                           ;oled.h: 62: Oled_WriteCmd(low_column);
 12841  110C  0875               	movf	Oled_SetPointer@low_column,w
 12842  110D  319D  2501  3190   	fcall	_Oled_WriteCmd
 12843                           
 12844                           ;oled.h: 63: Oled_WriteCmd(hig_column);
 12845  1110  0877               	movf	Oled_SetPointer@hig_column,w
 12846  1111  319D  2501  3190   	fcall	_Oled_WriteCmd
 12847                           
 12848                           ;oled.h: 64: Oled_WriteCmd(pag);
 12849  1114  0872               	movf	Oled_SetPointer@pag,w
 12850  1115  319D  2501         	fcall	_Oled_WriteCmd
 12851  1117  0008               	return
 12852  1118                     __end_of_Oled_SetPointer:	
 12853                           
 12854                           	psect	text74
 12855  1D01                     __ptext74:	
 12856 ;; *************** function _Oled_WriteCmd *****************
 12857 ;; Defined at:
 12858 ;;		line 26 in file "oled.h"
 12859 ;; Parameters:    Size  Location     Type
 12860 ;;  cmd             1    wreg     unsigned char 
 12861 ;; Auto vars:     Size  Location     Type
 12862 ;;  cmd             1    1[COMMON] unsigned char 
 12863 ;; Return value:  Size  Location     Type
 12864 ;;                  1    wreg      void 
 12865 ;; Registers used:
 12866 ;;		wreg, status,2, status,0, pclath, cstack
 12867 ;; Tracked objects:
 12868 ;;		On entry : 0/0
 12869 ;;		On exit  : 0/0
 12870 ;;		Unchanged: 0/0
 12871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12873 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12876 ;;Total ram usage:        1 bytes
 12877 ;; Hardware stack levels used:    1
 12878 ;; Hardware stack levels required when called:    1
 12879 ;; This function calls:
 12880 ;;		_SPI_Write
 12881 ;; This function is called by:
 12882 ;;		_Oled_SetPointer
 12883 ;;		_Oled_Init
 12884 ;;		_ScreenOn
 12885 ;;		_ScreenOff
 12886 ;;		_Deactivate_Scroll
 12887 ;;		_Activate_Scroll
 12888 ;;		_Left_HorizontalScroll
 12889 ;; This function uses a non-reentrant model
 12890 ;;
 12891                           
 12892                           
 12893                           ;psect for function _Oled_WriteCmd
 12894  1D01                     _Oled_WriteCmd:	
 12895                           
 12896                           ;incstack = 0
 12897                           ; Regs used in _Oled_WriteCmd: [wreg+status,2+status,0+pclath+cstack]
 12898                           ;Oled_WriteCmd@cmd stored from wreg
 12899  1D01  00F1               	movwf	Oled_WriteCmd@cmd
 12900                           
 12901                           ;oled.h: 27: PORTAbits.RA4 = 0;
 12902  1D02  0020               	movlb	0	; select bank0
 12903  1D03  120C               	bcf	12,4	;volatile
 12904                           
 12905                           ;oled.h: 28: PORTCbits.RC5 = 0;
 12906  1D04  128E               	bcf	14,5	;volatile
 12907                           
 12908                           ;oled.h: 29: SPI_Write(cmd);
 12909  1D05  0871               	movf	Oled_WriteCmd@cmd,w
 12910  1D06  319C  24F8         	fcall	_SPI_Write
 12911                           
 12912                           ;oled.h: 30: PORTAbits.RA4 = 1;
 12913  1D08  0020               	movlb	0	; select bank0
 12914  1D09  160C               	bsf	12,4	;volatile
 12915  1D0A  0008               	return
 12916  1D0B                     __end_of_Oled_WriteCmd:	
 12917                           
 12918                           	psect	text75
 12919  1CDB                     __ptext75:	
 12920 ;; *************** function _SendUartCmd *****************
 12921 ;; Defined at:
 12922 ;;		line 35 in file "uart.h"
 12923 ;; Parameters:    Size  Location     Type
 12924 ;;  cmd             2    6[COMMON] PTR unsigned char 
 12925 ;;		 -> STR_59(4), STR_44(12), STR_43(14), STR_42(14), 
 12926 ;;		 -> SavePhoneNumber@str1(50), STR_31(24), STR_22(8), STR_13(8), 
 12927 ;;		 -> STR_11(11), STR_10(2), STR_9(12), STR_8(11), 
 12928 ;;		 -> STR_6(11), STR_2(11), 
 12929 ;; Auto vars:     Size  Location     Type
 12930 ;;		None
 12931 ;; Return value:  Size  Location     Type
 12932 ;;                  1    wreg      void 
 12933 ;; Registers used:
 12934 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12935 ;; Tracked objects:
 12936 ;;		On entry : 0/0
 12937 ;;		On exit  : 0/0
 12938 ;;		Unchanged: 0/0
 12939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;Total ram usage:        2 bytes
 12945 ;; Hardware stack levels used:    1
 12946 ;; Hardware stack levels required when called:    2
 12947 ;; This function calls:
 12948 ;;		_UART_Write_Text
 12949 ;; This function is called by:
 12950 ;;		_SimCard_Init
 12951 ;;		_GsmOff
 12952 ;;		_GsmWakeUp
 12953 ;;		_GsmOn
 12954 ;;		_CheckBattery
 12955 ;;		_CheckNetwork
 12956 ;;		_ReadLastSMS
 12957 ;;		_SavePhoneNumber
 12958 ;;		_ReadPhoneNumber
 12959 ;;		_main
 12960 ;;		_CheckSimCard
 12961 ;; This function uses a non-reentrant model
 12962 ;;
 12963                           
 12964                           
 12965                           ;psect for function _SendUartCmd
 12966  1CDB                     _SendUartCmd:	
 12967                           
 12968                           ;uart.h: 36: UART_Write_Text(cmd);
 12969                           
 12970                           ;incstack = 0
 12971                           ; Regs used in _SendUartCmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 12972  1CDB  0877               	movf	SendUartCmd@cmd+1,w
 12973  1CDC  00F2               	movwf	UART_Write_Text@text+1
 12974  1CDD  0876               	movf	SendUartCmd@cmd,w
 12975  1CDE  00F1               	movwf	UART_Write_Text@text
 12976  1CDF  319E  2620         	fcall	_UART_Write_Text
 12977  1CE1  0008               	return
 12978  1CE2                     __end_of_SendUartCmd:	
 12979                           
 12980                           	psect	text76
 12981  1E20                     __ptext76:	
 12982 ;; *************** function _UART_Write_Text *****************
 12983 ;; Defined at:
 12984 ;;		line 29 in file "uart.h"
 12985 ;; Parameters:    Size  Location     Type
 12986 ;;  text            2    1[COMMON] PTR unsigned char 
 12987 ;;		 -> STR_59(4), STR_44(12), STR_43(14), STR_42(14), 
 12988 ;;		 -> SavePhoneNumber@str1(50), STR_31(24), STR_22(8), STR_13(8), 
 12989 ;;		 -> STR_11(11), STR_10(2), STR_9(12), STR_8(11), 
 12990 ;;		 -> STR_6(11), STR_2(11), 
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;  i               2    4[COMMON] int 
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13004 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13005 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13006 ;;Total ram usage:        5 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; Hardware stack levels required when called:    1
 13009 ;; This function calls:
 13010 ;;		_UART_Write
 13011 ;; This function is called by:
 13012 ;;		_SendUartCmd
 13013 ;; This function uses a non-reentrant model
 13014 ;;
 13015                           
 13016                           
 13017                           ;psect for function _UART_Write_Text
 13018  1E20                     _UART_Write_Text:	
 13019                           
 13020                           ;uart.h: 31: for(int i=0;text[i] != '\0' ;i++)
 13021                           
 13022                           ;incstack = 0
 13023                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13024  1E20  01F4               	clrf	UART_Write_Text@i
 13025  1E21  01F5               	clrf	UART_Write_Text@i+1
 13026  1E22                     l4698:	
 13027  1E22  0871               	movf	UART_Write_Text@text,w
 13028  1E23  0774               	addwf	UART_Write_Text@i,w
 13029  1E24  0084               	movwf	4
 13030  1E25  0872               	movf	UART_Write_Text@text+1,w
 13031  1E26  3D75               	addwfc	UART_Write_Text@i+1,w
 13032  1E27  0085               	movwf	5
 13033  1E28  0012               	moviw fsr0++
 13034  1E29  1903               	btfsc	3,2
 13035  1E2A  0008               	return
 13036                           
 13037                           ;uart.h: 32: UART_Write(text[i]);
 13038  1E2B  0871               	movf	UART_Write_Text@text,w
 13039  1E2C  0774               	addwf	UART_Write_Text@i,w
 13040  1E2D  0084               	movwf	4
 13041  1E2E  0872               	movf	UART_Write_Text@text+1,w
 13042  1E2F  3D75               	addwfc	UART_Write_Text@i+1,w
 13043  1E30  0085               	movwf	5
 13044  1E31  0800               	movf	0,w	;code access
 13045  1E32  319C  24F0  319E   	fcall	_UART_Write
 13046  1E35  3001               	movlw	1
 13047  1E36  07F4               	addwf	UART_Write_Text@i,f
 13048  1E37  3000               	movlw	0
 13049  1E38  3DF5               	addwfc	UART_Write_Text@i+1,f
 13050  1E39  2E22               	goto	l4698
 13051  1E3A                     __end_of_UART_Write_Text:	
 13052                           
 13053                           	psect	text77
 13054  1CF0                     __ptext77:	
 13055 ;; *************** function _UART_Write *****************
 13056 ;; Defined at:
 13057 ;;		line 23 in file "uart.h"
 13058 ;; Parameters:    Size  Location     Type
 13059 ;;  data            1    wreg     unsigned char 
 13060 ;; Auto vars:     Size  Location     Type
 13061 ;;  data            1    0[COMMON] unsigned char 
 13062 ;; Return value:  Size  Location     Type
 13063 ;;                  1    wreg      void 
 13064 ;; Registers used:
 13065 ;;		wreg
 13066 ;; Tracked objects:
 13067 ;;		On entry : 0/0
 13068 ;;		On exit  : 0/0
 13069 ;;		Unchanged: 0/0
 13070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13075 ;;Total ram usage:        1 bytes
 13076 ;; Hardware stack levels used:    1
 13077 ;; This function calls:
 13078 ;;		Nothing
 13079 ;; This function is called by:
 13080 ;;		_UART_Write_Text
 13081 ;; This function uses a non-reentrant model
 13082 ;;
 13083                           
 13084                           
 13085                           ;psect for function _UART_Write
 13086  1CF0                     _UART_Write:	
 13087                           
 13088                           ;incstack = 0
 13089                           ; Regs used in _UART_Write: [wreg]
 13090                           ;UART_Write@data stored from wreg
 13091  1CF0  00F0               	movwf	UART_Write@data
 13092  1CF1                     l210:	
 13093                           ;uart.h: 25: while(0 == PIR1bits.TXIF);
 13094                           
 13095  1CF1  0020               	movlb	0	; select bank0
 13096  1CF2  1E11               	btfss	17,4	;volatile
 13097  1CF3  2CF1               	goto	l210
 13098                           
 13099                           ;uart.h: 26: TX1REG = data;
 13100  1CF4  0870               	movf	UART_Write@data,w
 13101  1CF5  0023               	movlb	3	; select bank3
 13102  1CF6  009A               	movwf	26	;volatile
 13103  1CF7  0008               	return
 13104  1CF8                     __end_of_UART_Write:	
 13105                           
 13106                           	psect	text78
 13107  13CC                     __ptext78:	
 13108 ;; *************** function _ADLX_Init *****************
 13109 ;; Defined at:
 13110 ;;		line 40 in file "adxl.h"
 13111 ;; Parameters:    Size  Location     Type
 13112 ;;		None
 13113 ;; Auto vars:     Size  Location     Type
 13114 ;;  reg             1    7[COMMON] unsigned char 
 13115 ;; Return value:  Size  Location     Type
 13116 ;;                  1    wreg      void 
 13117 ;; Registers used:
 13118 ;;		wreg, status,2, status,0, pclath, cstack
 13119 ;; Tracked objects:
 13120 ;;		On entry : 0/0
 13121 ;;		On exit  : 0/0
 13122 ;;		Unchanged: 0/0
 13123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;Total ram usage:        2 bytes
 13129 ;; Hardware stack levels used:    1
 13130 ;; Hardware stack levels required when called:    2
 13131 ;; This function calls:
 13132 ;;		_ACC_ReadReg
 13133 ;;		_ACC_WriteReg
 13134 ;; This function is called by:
 13135 ;;		_main
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function _ADLX_Init
 13141  13CC                     _ADLX_Init:	
 13142                           
 13143                           ;adxl.h: 42: PORTAbits.RA2=1;
 13144                           
 13145                           ;incstack = 0
 13146                           ; Regs used in _ADLX_Init: [wreg+status,2+status,0+pclath+cstack]
 13147  13CC  0020               	movlb	0	; select bank0
 13148  13CD  150C               	bsf	12,2	;volatile
 13149                           
 13150                           ;adxl.h: 43: char reg;
 13151                           ;adxl.h: 46: ACC_WriteReg(0x1f, 0x52);
 13152  13CE  3052               	movlw	82
 13153  13CF  00F6               	movwf	??_ADLX_Init
 13154  13D0  0876               	movf	??_ADLX_Init,w
 13155  13D1  00F1               	movwf	ACC_WriteReg@cmd
 13156  13D2  301F               	movlw	31
 13157  13D3  319E  26A8  3193   	fcall	_ACC_WriteReg
 13158                           
 13159                           ;adxl.h: 49: reg = ACC_ReadReg(0x0b);
 13160  13D6  300B               	movlw	11
 13161  13D7  319F  276A  3193   	fcall	_ACC_ReadReg
 13162  13DA  00F6               	movwf	??_ADLX_Init
 13163  13DB  0876               	movf	??_ADLX_Init,w
 13164  13DC  00F7               	movwf	ADLX_Init@reg
 13165                           
 13166                           ;adxl.h: 50: reg = ACC_ReadReg(0x00);
 13167  13DD  3000               	movlw	0
 13168  13DE  319F  276A  3193   	fcall	_ACC_ReadReg
 13169  13E1  00F6               	movwf	??_ADLX_Init
 13170  13E2  0876               	movf	??_ADLX_Init,w
 13171  13E3  00F7               	movwf	ADLX_Init@reg
 13172                           
 13173                           ;adxl.h: 51: reg = ACC_ReadReg(0x2c);
 13174  13E4  302C               	movlw	44
 13175  13E5  319F  276A  3193   	fcall	_ACC_ReadReg
 13176  13E8  00F6               	movwf	??_ADLX_Init
 13177  13E9  0876               	movf	??_ADLX_Init,w
 13178  13EA  00F7               	movwf	ADLX_Init@reg
 13179                           
 13180                           ;adxl.h: 54: ACC_WriteReg(0x20,0xFA);
 13181  13EB  30FA               	movlw	250
 13182  13EC  00F6               	movwf	??_ADLX_Init
 13183  13ED  0876               	movf	??_ADLX_Init,w
 13184  13EE  00F1               	movwf	ACC_WriteReg@cmd
 13185  13EF  3020               	movlw	32
 13186  13F0  319E  26A8  3193   	fcall	_ACC_WriteReg
 13187                           
 13188                           ;adxl.h: 55: ACC_WriteReg(0x21,0x0);
 13189  13F3  01F1               	clrf	ACC_WriteReg@cmd
 13190  13F4  3021               	movlw	33
 13191  13F5  319E  26A8  3193   	fcall	_ACC_WriteReg
 13192                           
 13193                           ;adxl.h: 56: ACC_WriteReg(0x22,0xA);
 13194  13F8  300A               	movlw	10
 13195  13F9  00F6               	movwf	??_ADLX_Init
 13196  13FA  0876               	movf	??_ADLX_Init,w
 13197  13FB  00F1               	movwf	ACC_WriteReg@cmd
 13198  13FC  3022               	movlw	34
 13199  13FD  319E  26A8  3193   	fcall	_ACC_WriteReg
 13200                           
 13201                           ;adxl.h: 59: ACC_WriteReg(0x23,0x96);
 13202  1400  3096               	movlw	150
 13203  1401  00F6               	movwf	??_ADLX_Init
 13204  1402  0876               	movf	??_ADLX_Init,w
 13205  1403  00F1               	movwf	ACC_WriteReg@cmd
 13206  1404  3023               	movlw	35
 13207  1405  319E  26A8  3193   	fcall	_ACC_WriteReg
 13208                           
 13209                           ;adxl.h: 60: ACC_WriteReg(0x24,0x0);
 13210  1408  01F1               	clrf	ACC_WriteReg@cmd
 13211  1409  3024               	movlw	36
 13212  140A  319E  26A8  3193   	fcall	_ACC_WriteReg
 13213                           
 13214                           ;adxl.h: 61: ACC_WriteReg(0x25,0x1);
 13215  140D  01F1               	clrf	ACC_WriteReg@cmd
 13216  140E  0AF1               	incf	ACC_WriteReg@cmd,f
 13217  140F  3025               	movlw	37
 13218  1410  319E  26A8  3193   	fcall	_ACC_WriteReg
 13219                           
 13220                           ;adxl.h: 64: ACC_WriteReg(0x27,0x3F);
 13221  1413  303F               	movlw	63
 13222  1414  00F6               	movwf	??_ADLX_Init
 13223  1415  0876               	movf	??_ADLX_Init,w
 13224  1416  00F1               	movwf	ACC_WriteReg@cmd
 13225  1417  3027               	movlw	39
 13226  1418  319E  26A8  3193   	fcall	_ACC_WriteReg
 13227                           
 13228                           ;adxl.h: 67: ACC_WriteReg(0x2B,0x40);
 13229  141B  3040               	movlw	64
 13230  141C  00F6               	movwf	??_ADLX_Init
 13231  141D  0876               	movf	??_ADLX_Init,w
 13232  141E  00F1               	movwf	ACC_WriteReg@cmd
 13233  141F  302B               	movlw	43
 13234  1420  319E  26A8  3193   	fcall	_ACC_WriteReg
 13235                           
 13236                           ;adxl.h: 70: ACC_WriteReg(0x2d,0x0A);
 13237  1423  300A               	movlw	10
 13238  1424  00F6               	movwf	??_ADLX_Init
 13239  1425  0876               	movf	??_ADLX_Init,w
 13240  1426  00F1               	movwf	ACC_WriteReg@cmd
 13241  1427  302D               	movlw	45
 13242  1428  319E  26A8         	fcall	_ACC_WriteReg
 13243  142A  0008               	return
 13244  142B                     __end_of_ADLX_Init:	
 13245                           
 13246                           	psect	text79
 13247  1EA8                     __ptext79:	
 13248 ;; *************** function _ACC_WriteReg *****************
 13249 ;; Defined at:
 13250 ;;		line 30 in file "adxl.h"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;  reg             1    wreg     unsigned char 
 13253 ;;  cmd             1    1[COMMON] unsigned char 
 13254 ;; Auto vars:     Size  Location     Type
 13255 ;;  reg             1    5[COMMON] unsigned char 
 13256 ;; Return value:  Size  Location     Type
 13257 ;;                  1    wreg      void 
 13258 ;; Registers used:
 13259 ;;		wreg, status,2, status,0, pclath, cstack
 13260 ;; Tracked objects:
 13261 ;;		On entry : 0/0
 13262 ;;		On exit  : 0/0
 13263 ;;		Unchanged: 0/0
 13264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13265 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13269 ;;Total ram usage:        5 bytes
 13270 ;; Hardware stack levels used:    1
 13271 ;; Hardware stack levels required when called:    1
 13272 ;; This function calls:
 13273 ;;		_SPI_Write
 13274 ;; This function is called by:
 13275 ;;		_ADLX_Init
 13276 ;; This function uses a non-reentrant model
 13277 ;;
 13278                           
 13279                           
 13280                           ;psect for function _ACC_WriteReg
 13281  1EA8                     _ACC_WriteReg:	
 13282                           
 13283                           ;incstack = 0
 13284                           ; Regs used in _ACC_WriteReg: [wreg+status,2+status,0+pclath+cstack]
 13285                           ;ACC_WriteReg@reg stored from wreg
 13286  1EA8  00F5               	movwf	ACC_WriteReg@reg
 13287                           
 13288                           ;adxl.h: 32: PORTAbits.RA2 = 0;
 13289  1EA9  0020               	movlb	0	; select bank0
 13290  1EAA  110C               	bcf	12,2	;volatile
 13291                           
 13292                           ;adxl.h: 33: SPI_Write(0x0A);
 13293  1EAB  300A               	movlw	10
 13294  1EAC  319C  24F8  319E   	fcall	_SPI_Write
 13295                           
 13296                           ;adxl.h: 34: SPI_Write(reg);
 13297  1EAF  0875               	movf	ACC_WriteReg@reg,w
 13298  1EB0  319C  24F8  319E   	fcall	_SPI_Write
 13299                           
 13300                           ;adxl.h: 35: SPI_Write(cmd);
 13301  1EB3  0871               	movf	ACC_WriteReg@cmd,w
 13302  1EB4  319C  24F8  319E   	fcall	_SPI_Write
 13303                           
 13304                           ;adxl.h: 36: PORTAbits.RA2 = 1;
 13305  1EB7  0020               	movlb	0	; select bank0
 13306  1EB8  150C               	bsf	12,2	;volatile
 13307                           
 13308                           ;adxl.h: 37: _delay((unsigned long)((100)*(16000000/4000.0)));
 13309  1EB9  3003               	movlw	3
 13310  1EBA  00F4               	movwf	??_ACC_WriteReg+2
 13311  1EBB  3008               	movlw	8
 13312  1EBC  00F3               	movwf	??_ACC_WriteReg+1
 13313  1EBD  3078               	movlw	120
 13314  1EBE  00F2               	movwf	??_ACC_WriteReg
 13315  1EBF                     u6767:	
 13316  1EBF  0BF2               	decfsz	??_ACC_WriteReg,f
 13317  1EC0  2EBF               	goto	u6767
 13318  1EC1  0BF3               	decfsz	??_ACC_WriteReg+1,f
 13319  1EC2  2EBF               	goto	u6767
 13320  1EC3  0BF4               	decfsz	??_ACC_WriteReg+2,f
 13321  1EC4  2EBF               	goto	u6767
 13322  1EC5  0008               	return
 13323  1EC6                     __end_of_ACC_WriteReg:	
 13324                           
 13325                           	psect	text80
 13326  1F6A                     __ptext80:	
 13327 ;; *************** function _ACC_ReadReg *****************
 13328 ;; Defined at:
 13329 ;;		line 17 in file "adxl.h"
 13330 ;; Parameters:    Size  Location     Type
 13331 ;;  reg             1    wreg     unsigned char 
 13332 ;; Auto vars:     Size  Location     Type
 13333 ;;  reg             1    4[COMMON] unsigned char 
 13334 ;;  val             1    5[COMMON] unsigned char 
 13335 ;; Return value:  Size  Location     Type
 13336 ;;                  1    wreg      unsigned char 
 13337 ;; Registers used:
 13338 ;;		wreg, status,2, status,0, pclath, cstack
 13339 ;; Tracked objects:
 13340 ;;		On entry : 0/0
 13341 ;;		On exit  : 0/0
 13342 ;;		Unchanged: 0/0
 13343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13346 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13347 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13348 ;;Total ram usage:        5 bytes
 13349 ;; Hardware stack levels used:    1
 13350 ;; Hardware stack levels required when called:    1
 13351 ;; This function calls:
 13352 ;;		_SPI_Write
 13353 ;; This function is called by:
 13354 ;;		_ADLX_Init
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358                           
 13359                           ;psect for function _ACC_ReadReg
 13360  1F6A                     _ACC_ReadReg:	
 13361                           
 13362                           ;incstack = 0
 13363                           ; Regs used in _ACC_ReadReg: [wreg+status,2+status,0+pclath+cstack]
 13364                           ;ACC_ReadReg@reg stored from wreg
 13365  1F6A  00F4               	movwf	ACC_ReadReg@reg
 13366                           
 13367                           ;adxl.h: 19: PORTAbits.RA2 = 0;
 13368  1F6B  0020               	movlb	0	; select bank0
 13369  1F6C  110C               	bcf	12,2	;volatile
 13370                           
 13371                           ;adxl.h: 20: SPI_Write(0x0B);
 13372  1F6D  300B               	movlw	11
 13373  1F6E  319C  24F8  319F   	fcall	_SPI_Write
 13374                           
 13375                           ;adxl.h: 21: SPI_Write(reg);
 13376  1F71  0874               	movf	ACC_ReadReg@reg,w
 13377  1F72  319C  24F8  319F   	fcall	_SPI_Write
 13378                           
 13379                           ;adxl.h: 22: CKP=0;
 13380  1F75  0024               	movlb	4	; select bank4
 13381  1F76  1215               	bcf	21,4	;volatile
 13382                           
 13383                           ;adxl.h: 23: char val = SPI_Write(0x00);
 13384  1F77  3000               	movlw	0
 13385  1F78  319C  24F8  319F   	fcall	_SPI_Write
 13386  1F7B  00F1               	movwf	??_ACC_ReadReg
 13387  1F7C  0871               	movf	??_ACC_ReadReg,w
 13388  1F7D  00F5               	movwf	ACC_ReadReg@val
 13389                           
 13390                           ;adxl.h: 24: PORTAbits.RA2 = 1;
 13391  1F7E  0020               	movlb	0	; select bank0
 13392  1F7F  150C               	bsf	12,2	;volatile
 13393                           
 13394                           ;adxl.h: 25: _delay((unsigned long)((100)*(16000000/4000.0)));
 13395  1F80  3003               	movlw	3
 13396  1F81  00F3               	movwf	??_ACC_ReadReg+2
 13397  1F82  3008               	movlw	8
 13398  1F83  00F2               	movwf	??_ACC_ReadReg+1
 13399  1F84  3078               	movlw	120
 13400  1F85  00F1               	movwf	??_ACC_ReadReg
 13401  1F86                     u6777:	
 13402  1F86  0BF1               	decfsz	??_ACC_ReadReg,f
 13403  1F87  2F86               	goto	u6777
 13404  1F88  0BF2               	decfsz	??_ACC_ReadReg+1,f
 13405  1F89  2F86               	goto	u6777
 13406  1F8A  0BF3               	decfsz	??_ACC_ReadReg+2,f
 13407  1F8B  2F86               	goto	u6777
 13408                           
 13409                           ;adxl.h: 26: return (val);
 13410  1F8C  0875               	movf	ACC_ReadReg@val,w
 13411  1F8D  0008               	return
 13412  1F8E                     __end_of_ACC_ReadReg:	
 13413                           
 13414                           	psect	text81
 13415  1CF8                     __ptext81:	
 13416 ;; *************** function _SPI_Write *****************
 13417 ;; Defined at:
 13418 ;;		line 20 in file "spi.h"
 13419 ;; Parameters:    Size  Location     Type
 13420 ;;  data            1    wreg     unsigned char 
 13421 ;; Auto vars:     Size  Location     Type
 13422 ;;  data            1    0[COMMON] unsigned char 
 13423 ;; Return value:  Size  Location     Type
 13424 ;;                  1    wreg      unsigned char 
 13425 ;; Registers used:
 13426 ;;		wreg
 13427 ;; Tracked objects:
 13428 ;;		On entry : 0/0
 13429 ;;		On exit  : 0/0
 13430 ;;		Unchanged: 0/0
 13431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13433 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13435 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13436 ;;Total ram usage:        1 bytes
 13437 ;; Hardware stack levels used:    1
 13438 ;; This function calls:
 13439 ;;		Nothing
 13440 ;; This function is called by:
 13441 ;;		_Oled_WriteCmd
 13442 ;;		_Oled_WriteRam
 13443 ;;		_ACC_ReadReg
 13444 ;;		_ACC_WriteReg
 13445 ;;		_MFRC522_Wr
 13446 ;;		_MFRC522_Rd
 13447 ;; This function uses a non-reentrant model
 13448 ;;
 13449                           
 13450                           
 13451                           ;psect for function _SPI_Write
 13452  1CF8                     _SPI_Write:	
 13453                           
 13454                           ;incstack = 0
 13455                           ; Regs used in _SPI_Write: [wreg]
 13456                           ;SPI_Write@data stored from wreg
 13457  1CF8  00F0               	movwf	SPI_Write@data
 13458                           
 13459                           ;spi.h: 23: SSP1CON1bits.WCOL = 0;
 13460  1CF9  0024               	movlb	4	; select bank4
 13461  1CFA  1395               	bcf	21,7	;volatile
 13462                           
 13463                           ;spi.h: 24: SSPBUF = data;
 13464  1CFB  0870               	movf	SPI_Write@data,w
 13465  1CFC  0091               	movwf	17	;volatile
 13466  1CFD                     l245:	
 13467                           ;spi.h: 26: {
 13468                           
 13469                           ;spi.h: 25: while(SSP1STATbits.BF == 0x0)
 13470                           
 13471  1CFD  1C14               	btfss	20,0	;volatile
 13472  1CFE  2CFD               	goto	l245
 13473                           
 13474                           ;spi.h: 27: }
 13475                           ;spi.h: 28: return (SSPBUF);
 13476  1CFF  0811               	movf	17,w	;volatile
 13477  1D00  0008               	return
 13478  1D01                     __end_of_SPI_Write:	
 13479  007E                     btemp	set	126	;btemp
 13480  007E                     wtemp	set	126
 13481  007E                     wtemp0	set	126
 13482  0080                     wtemp1	set	128
 13483  0082                     wtemp2	set	130
 13484  0084                     wtemp3	set	132
 13485  0086                     wtemp4	set	134
 13486  0088                     wtemp5	set	136
 13487  007F                     wtemp6	set	127
 13488  007E                     ttemp	set	126
 13489  007E                     ttemp0	set	126
 13490  0081                     ttemp1	set	129
 13491  0084                     ttemp2	set	132
 13492  0087                     ttemp3	set	135
 13493  007F                     ttemp4	set	127
 13494  007E                     ltemp	set	126
 13495  007E                     ltemp0	set	126
 13496  0082                     ltemp1	set	130
 13497  0086                     ltemp2	set	134
 13498  0080                     ltemp3	set	128


Data Sizes:
    Strings     388
    Constant    1418
    Data        2
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     62      80
    BANK1            80     72      80
    BANK2            80      2      39
    BANK3            80      0      67
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[2]), STR_46(CODE[2]), STR_45(CODE[3]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[3]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[3]), STR_4(CODE[2]), STR_3(CODE[3]), 

    strspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[2]), STR_46(CODE[2]), STR_45(CODE[3]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[3]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[3]), STR_4(CODE[2]), STR_3(CODE[3]), 

    strspn@s1	PTR const unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[2]), STR_46(CODE[2]), STR_45(CODE[3]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[3]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[3]), STR_4(CODE[2]), NULL(NULL[0]), STR_3(CODE[3]), 

    strcspn@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[2]), STR_46(CODE[2]), STR_45(CODE[3]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[3]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[3]), STR_4(CODE[2]), STR_3(CODE[3]), 

    strcspn@s1	PTR const unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    strtok@s2	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_47(CODE[2]), STR_46(CODE[2]), STR_45(CODE[3]), STR_36(CODE[2]), 
		 -> STR_35(CODE[2]), STR_34(CODE[2]), STR_33(CODE[2]), STR_32(CODE[3]), 
		 -> STR_24(CODE[2]), STR_23(CODE[3]), STR_16(CODE[2]), STR_15(CODE[2]), 
		 -> STR_14(CODE[3]), STR_4(CODE[2]), STR_3(CODE[3]), 

    strtok@sp	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    strtok@s1	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), STR_38(CODE[1]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), STR_38(CODE[1]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_41(CODE[19]), STR_40(CODE[12]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 50
		 -> SavePhoneNumber@str2(BANK0[50]), SavePhoneNumber@str1(BANK1[50]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 50
		 -> SavePhoneNumber@str2(BANK0[50]), SavePhoneNumber@str1(BANK1[50]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_56(CODE[11]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 11
		 -> RFID_Ok@badgeSerialNumber(BANK0[11]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 67
		 -> RFID_Ok@buffer(BANK0[1]), STR_53(CODE[2]), ReadPhoneNumber@result1(BANK1[50]), SavePhoneNumber@str2(BANK0[50]), 
		 -> STR_38(CODE[1]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 67
		 -> RFID_Ok@badgeSerialNumber(BANK0[11]), ReadPhoneNumber@result1(BANK1[50]), SavePhoneNumber@str1(BANK1[50]), result3(BANK3[67]), 
		 -> CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 67
		 -> RFID_Ok@badgeSerialNumber(BANK0[11]), ReadPhoneNumber@result1(BANK1[50]), SavePhoneNumber@str1(BANK1[50]), result3(BANK3[67]), 
		 -> CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_81(CODE[5]), STR_55(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> buffer(BANK2[20]), RFID_Ok@buffer(BANK0[1]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    SettingMenu@phoneNumber	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), STR_38(CODE[1]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    main@phoneNumber	PTR unsigned char  size(2) Largest target is 67
		 -> STR_50(CODE[1]), ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    MFRC522_ReadCardSerial@str	PTR unsigned char  size(1) Largest target is 6
		 -> UID(BANK2[6]), 

    MFRC522_isCard@TagType	PTR unsigned char  size(1) Largest target is 2
		 -> TagType(BANK1[2]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(1) Largest target is 6
		 -> UID(BANK2[6]), 

    MFRC522_Request@TagType	PTR unsigned char  size(1) Largest target is 2
		 -> TagType(BANK1[2]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 18
		 -> UID(BANK2[6]), TagType(BANK1[2]), MFRC522_Write@buff(BANK0[18]), MFRC522_Auth@buff(COMMON[12]), 
		 -> MFRC522_Halt@buff(COMMON[4]), MFRC522_SelectTag@buffer(COMMON[9]), 

    MFRC522_ToCard@backLen	PTR unsigned int  size(1) Largest target is 2
		 -> MFRC522_AntiColl@unLen(BANK0[2]), MFRC522_Read@unLen(COMMON[2]), MFRC522_Write@recvBits(COMMON[2]), MFRC522_Auth@recvBits(COMMON[2]), 
		 -> MFRC522_Halt@unLen(COMMON[2]), MFRC522_SelectTag@recvBits(COMMON[2]), MFRC522_Request@backBits(BANK0[2]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 18
		 -> UID(BANK2[6]), TagType(BANK1[2]), MFRC522_Write@buff(BANK0[18]), MFRC522_Auth@buff(COMMON[12]), 
		 -> MFRC522_Halt@buff(COMMON[4]), MFRC522_SelectTag@buffer(COMMON[9]), 

    ShowIcon@id	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_79(CODE[2]), STR_77(CODE[2]), STR_76(CODE[2]), STR_75(CODE[2]), 
		 -> STR_74(CODE[2]), STR_73(CODE[2]), STR_72(CODE[2]), STR_71(CODE[2]), 
		 -> STR_70(CODE[2]), STR_69(CODE[2]), STR_66(CODE[2]), STR_65(CODE[2]), 
		 -> STR_64(CODE[2]), 

    ShowNumber@number	PTR const unsigned char  size(2) Largest target is 67
		 -> buffer(BANK2[20]), ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    ShowMessage@message	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_84(CODE[11]), STR_83(CODE[11]), STR_82(CODE[11]), STR_80(CODE[11]), 
		 -> STR_78(CODE[11]), STR_68(CODE[9]), STR_67(CODE[10]), STR_63(CODE[10]), 
		 -> STR_61(CODE[14]), STR_60(CODE[8]), STR_58(CODE[6]), STR_57(CODE[6]), 
		 -> STR_51(CODE[9]), STR_49(CODE[7]), STR_48(CODE[10]), STR_39(CODE[12]), 
		 -> STR_37(CODE[7]), STR_17(CODE[9]), STR_12(CODE[5]), STR_7(CODE[5]), 

    ShowReceptionIcon@level	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_30(CODE[6]), STR_29(CODE[6]), STR_28(CODE[6]), STR_27(CODE[6]), 
		 -> STR_26(CODE[6]), STR_25(CODE[6]), 

    ShowBattLoad@level	PTR const unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    ShowBattIcon@level	PTR const unsigned char  size(2) Largest target is 2
		 -> STR_21(CODE[2]), STR_20(CODE[2]), STR_19(CODE[2]), STR_18(CODE[2]), 

    sp__ReadPhoneNumber	PTR unsigned char  size(2) Largest target is 67
		 -> STR_50(CODE[1]), ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    ReadPhoneNumber@phoneNumber	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 67
		 -> RFID_Ok@badgeSerialNumber(BANK0[11]), ReadPhoneNumber@result1(BANK1[50]), SavePhoneNumber@str1(BANK1[50]), result3(BANK3[67]), 
		 -> CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    SavePhoneNumber@myPhone	PTR const unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), STR_38(CODE[1]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 50
		 -> SavePhoneNumber@str2(BANK0[50]), SavePhoneNumber@str1(BANK1[50]), 

    sp__ReadLastSMS	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), STR_38(CODE[1]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    ReadLastSMS@phoneNbr	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    CheckNetwork@netSignal	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    CheckBattery@battLoad	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    sp__strtok	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), CheckBattery@res(BANK0[31]), 
		 -> NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    Oled_ConstText@buffer	PTR const unsigned char  size(2) Largest target is 67
		 -> STR_84(CODE[11]), STR_83(CODE[11]), STR_82(CODE[11]), buffer(BANK2[20]), 
		 -> STR_80(CODE[11]), STR_79(CODE[2]), STR_78(CODE[11]), STR_77(CODE[2]), 
		 -> STR_76(CODE[2]), STR_75(CODE[2]), STR_74(CODE[2]), STR_73(CODE[2]), 
		 -> STR_72(CODE[2]), STR_71(CODE[2]), STR_70(CODE[2]), STR_69(CODE[2]), 
		 -> STR_68(CODE[9]), STR_67(CODE[10]), STR_66(CODE[2]), STR_65(CODE[2]), 
		 -> STR_64(CODE[2]), STR_63(CODE[10]), STR_61(CODE[14]), STR_60(CODE[8]), 
		 -> STR_58(CODE[6]), STR_57(CODE[6]), STR_54(CODE[2]), STR_52(CODE[2]), 
		 -> STR_51(CODE[9]), STR_49(CODE[7]), STR_48(CODE[10]), ReadPhoneNumber@result1(BANK1[50]), 
		 -> STR_39(CODE[12]), STR_37(CODE[7]), result3(BANK3[67]), STR_30(CODE[6]), 
		 -> STR_29(CODE[6]), STR_28(CODE[6]), STR_27(CODE[6]), STR_26(CODE[6]), 
		 -> STR_25(CODE[6]), CheckNetwork@res(BANK0[20]), STR_21(CODE[2]), STR_20(CODE[2]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[9]), CheckBattery@res(BANK0[31]), 
		 -> STR_12(CODE[5]), STR_7(CODE[5]), NULL(NULL[0]), CheckSimCard@result(COMMON[11]), 

    font	PTR const unsigned char  size(2) Largest target is 8192
		 -> Icon16x16(CODE[224]), FlightMode8x12(CODE[32]), Numeric12x16(CODE[264]), Terminal12x16(CODE[672]), 
		 -> Reception8x8(CODE[16]), Battery6x8(CODE[66]), Battery8x21(CODE[126]), ROM(CODE[8192]), 

    Oled_SetFont@_font	PTR const unsigned char  size(2) Largest target is 672
		 -> Icon16x16(CODE[224]), FlightMode8x12(CODE[32]), Numeric12x16(CODE[264]), Terminal12x16(CODE[672]), 
		 -> Reception8x8(CODE[16]), Battery6x8(CODE[66]), Battery8x21(CODE[126]), 

    font2	PTR const unsigned char  size(2) Largest target is 8192
		 -> Icon16x16(CODE[224]), FlightMode8x12(CODE[32]), Numeric12x16(CODE[264]), Terminal12x16(CODE[672]), 
		 -> Reception8x8(CODE[16]), Battery6x8(CODE[66]), Battery8x21(CODE[126]), ROM(CODE[8192]), 

    UART_Read_Text@Output	PTR unsigned char  size(2) Largest target is 67
		 -> ReadPhoneNumber@result1(BANK1[50]), ReadPhoneNumber@result0(BANK1[20]), result3(BANK3[67]), CheckNetwork@res(BANK0[20]), 
		 -> CheckBattery@res(BANK0[31]), SimCard_Init@result(BANK0[15]), CheckSimCard@result(COMMON[11]), 

    SendUartCmd@cmd	PTR unsigned char  size(2) Largest target is 50
		 -> STR_59(CODE[4]), STR_44(CODE[12]), STR_43(CODE[14]), STR_42(CODE[14]), 
		 -> SavePhoneNumber@str1(BANK1[50]), STR_31(CODE[24]), STR_22(CODE[8]), STR_13(CODE[8]), 
		 -> STR_11(CODE[11]), STR_10(CODE[2]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_6(CODE[11]), STR_2(CODE[11]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 50
		 -> STR_59(CODE[4]), STR_44(CODE[12]), STR_43(CODE[14]), STR_42(CODE[14]), 
		 -> SavePhoneNumber@str1(BANK1[50]), STR_31(CODE[24]), STR_22(CODE[8]), STR_13(CODE[8]), 
		 -> STR_11(CODE[11]), STR_10(CODE[2]), STR_9(CODE[12]), STR_8(CODE[11]), 
		 -> STR_6(CODE[11]), STR_2(CODE[11]), 

    RFID_CARD_NUMBER	PTR unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _SimCard_Init->_UART_Read_Text
    _ScreenOff->_Oled_WriteCmd
    _Oled_Init->_Oled_FillScreen
    _SavePhoneNumber->_SendUartCmd
    _Oled_FillScreen->_Oled_SetPointer
    _RFID_Ok->_MFRC522_ReadCardSerial
    _RFID_Ok->_MFRC522_isCard
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _MFRC522_isCard->_MFRC522_Request
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_Clear_Bit
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Rd->_SPI_Write
    _ScreenOn->_Oled_WriteCmd
    _Left_HorizontalScroll->_Oled_WriteCmd
    _Deactivate_Scroll->_Oled_WriteCmd
    _Activate_Scroll->_Oled_WriteCmd
    _GsmWakeUp->_SendUartCmd
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _atoi->___wmul
    _Oled_SetFont->___awdiv
    _Oled_ConstText->_Oled_WriteChar
    _Oled_WriteChar->_Oled_SetPointer
    _Oled_WriteRam->_SPI_Write
    _Oled_SetPointer->_Oled_WriteCmd
    _Oled_WriteCmd->_SPI_Write
    _SendUartCmd->_UART_Write_Text
    _UART_Write_Text->_UART_Write
    _ADLX_Init->_ACC_ReadReg
    _ADLX_Init->_ACC_WriteReg
    _ACC_WriteReg->_SPI_Write
    _ACC_ReadReg->_SPI_Write

Critical Paths under _main in BANK0

    _main->_CheckBattery
    _SetAlarmOn->_CheckNetwork
    _ReadPhoneNumber->_ShowMessage
    _RaiseAlarm->_CheckNetwork
    _SendSms->_ShowMessage
    _GsmOn->_ShowMessage
    _CheckNetwork->_ShowReceptionIcon
    _ShowReceptionIcon->_Oled_ConstText
    _GsmOff->_ShowMessage
    _CheckSW2->_SettingMenu
    _SettingMenu->_SavePhoneNumber
    _Reset->_SetAlarmOff
    _Reset->_ShowIcon
    _ShowFlightIcon->_Oled_ConstText
    _ReadLastSMS->_ShowNumber
    _ShowNumber->_Oled_ConstText
    _RFID_Ok->_MFRC522_ReadCardSerial
    _MFRC522_isCard->_MFRC522_Request
    _MFRC522_Request->_MFRC522_ToCard
    _MFRC522_ReadCardSerial->_MFRC522_AntiColl
    _MFRC522_AntiColl->_MFRC522_ToCard
    _CheckSW1->_SetAlarmOff
    _CheckSW1->_ShowIcon
    _ShowIcon->_Oled_ConstText
    _SetAlarmOff->_ShowMessage
    _CheckBattery->_ShowMessage
    _strtok->_strcspn
    _strtok->_strspn
    _ShowMessage->_Oled_ConstText
    _ShowBattLoad->_Oled_ConstText
    _ShowBattIcon->_Oled_ConstText
    _Oled_ConstText->_Oled_WriteChar

Critical Paths under _main in BANK1

    _main->_ReadPhoneNumber
    _SettingMenu->_SavePhoneNumber

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0  415196
                                             59 BANK0      3     3      0
                                              0 BANK2      2     2      0
                          _ADLX_Init
                                _Bip
                       _CheckBattery
                       _CheckNetwork
                           _CheckSW1
                           _CheckSW2
                  _Deactivate_Scroll
                              _GsmOn
                         _INTER_Init
              _Left_HorizontalScroll
                           _OSC_Init
                    _Oled_FillScreen
                          _Oled_Init
                              _OnOff
                           _PIN_Init
                         _RaiseAlarm
                    _ReadPhoneNumber
                              _Reset
                   _ResetScreenTimer
                           _SPI_Init
                        _SendUartCmd
                        _SetAlarmOff
                         _SetAlarmOn
                        _ShowMessage
                       _SimCard_Init
                          _UART_Init
                        ___delay_sec
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SimCard_Init                                        15    15      0    2194
                                              0 BANK0     15    15      0
                        _SendUartCmd
                     _UART_Read_Text
 ---------------------------------------------------------------------------------
 (1) _SetAlarmOn                                           5     5      0   43317
                                             47 BANK0      5     5      0
                                _Bip
                       _CheckNetwork
                   _ResetScreenTimer
                        _SetAlarmOff
                        _ShowMessage
                         _ShowNumber
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ReadPhoneNumber                                     74    73      1   15583
                                             23 BANK0      2     1      1
                                              0 BANK1     72    72      0
                        _SendUartCmd
                        _ShowMessage
                     _UART_Read_Text
                        ___delay_sec
                             _strlen
                             _strtok
 ---------------------------------------------------------------------------------
 (1) _RaiseAlarm                                           5     5      0   53582
                                             47 BANK0      5     5      0
                       _CheckNetwork
                              _GsmOn
                          _GsmWakeUp
                   _ResetScreenTimer
                           _ScreenOn
                            _SendSms
                        _SetAlarmOff
                        _ShowMessage
                        ___delay_sec
 ---------------------------------------------------------------------------------
 (2) _SendSms                                              1     1      0    9170
                                             23 BANK0      1     1      0
                        _ShowMessage
 ---------------------------------------------------------------------------------
 (2) _GsmOn                                                0     0      0   10337
                        _SendUartCmd
                        _ShowMessage
 ---------------------------------------------------------------------------------
 (2) _CheckNetwork                                        25    25      0   13757
                                             22 BANK0     25    25      0
                        _SendUartCmd
                  _ShowReceptionIcon
                     _UART_Read_Text
                               _atoi
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _ShowReceptionIcon                                    6     4      2    6929
                                             16 BANK0      6     4      2
                     _Oled_ConstText
                       _Oled_SetFont
 ---------------------------------------------------------------------------------
 (1) _PIN_Init                                             1     1      0      34
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _OnOff                                                1     1      0   16907
                                             23 BANK0      1     1      0
                             _GsmOff
                   _ResetScreenTimer
                          _ScreenOff
 ---------------------------------------------------------------------------------
 (2) _ScreenOff                                            0     0      0      62
                      _Oled_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _GsmOff                                              11    11      0   16845
                        _SendUartCmd
                     _ShowFlightIcon
                        _ShowMessage
 ---------------------------------------------------------------------------------
 (1) _Oled_Init                                            3     3      0     777
                                              0 BANK0      3     3      0
                    _Oled_FillScreen
                         _Oled_Reset
                      _Oled_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _Oled_Reset                                           3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _OSC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _INTER_Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckSW2                                             3     3      0  150402
                                             55 BANK0      3     3      0
                            _RFID_Ok
                              _Reset
                   _ResetScreenTimer
                        _SettingMenu
                           _ShowIcon
                        _ShowMessage
 ---------------------------------------------------------------------------------
 (2) _SettingMenu                                          5     5      0   70512
                                             50 BANK0      5     5      0
                    _Oled_FillScreen
                        _ReadLastSMS
                              _Reset
                    _SavePhoneNumber
                           _ShowIcon
                        _ShowMessage
                        ___delay_sec
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _SavePhoneNumber                                    102   100      2    2317
                                              8 COMMON     2     0      2
                                              0 BANK0     50    50      0
                                              0 BANK1     50    50      0
                        _SendUartCmd
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (4) _strcpy                                               5     3      2     299
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Reset                                                2     2      0   25529
                                             24 BANK0      2     2      0
                    _Oled_FillScreen
                        _SetAlarmOff
                     _ShowFlightIcon
                           _ShowIcon
 ---------------------------------------------------------------------------------
 (2) _ShowFlightIcon                                       4     4      0    6508
                                             16 BANK0      4     4      0
                     _Oled_ConstText
                       _Oled_SetFont
 ---------------------------------------------------------------------------------
 (2) _Oled_FillScreen                                      4     4      0     715
                                              8 COMMON     4     4      0
                    _Oled_SetPointer
                      _Oled_WriteRam
 ---------------------------------------------------------------------------------
 (3) _ReadLastSMS                                          5     5      0   22574
                                             24 BANK0      5     5      0
                        _SendUartCmd
                        _ShowMessage
                         _ShowNumber
                     _UART_Read_Text
                        ___delay_sec
                             _strlen
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     325
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (2) _ShowNumber                                           8     4      4    7093
                                             16 BANK0      8     4      4
                     _Oled_ConstText
                       _Oled_SetFont
 ---------------------------------------------------------------------------------
 (2) _RFID_Ok                                             16    16      0   36055
                                             30 BANK0     16    16      0
                                _Bip
             _MFRC522_ReadCardSerial
                     _MFRC522_isCard
                        _ShowMessage
                        ___delay_sec
                            _sprintf
                             _strcat
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               5     3      2     228
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    21      6    3502
                                              0 BANK0     19    13      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     362
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     501
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (3) _MFRC522_isCard                                       2     2      0    9542
                                             12 COMMON     2     2      0
                    _MFRC522_Request
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Request                                      7     6      1    9481
                                             10 COMMON     2     2      0
                                             22 BANK0      5     4      1
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_ReadCardSerial                               3     3      0   11581
                                             13 COMMON     1     1      0
                                             28 BANK0      2     2      0
                   _MFRC522_AntiColl
 ---------------------------------------------------------------------------------
 (4) _MFRC522_AntiColl                                     9     9      0   11455
                                             10 COMMON     3     3      0
                                             22 BANK0      6     6      0
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (5) _MFRC522_ToCard                                      22    16      6    7952
                                              0 BANK0     22    16      6
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (6) _MFRC522_Set_Bit                                      3     2      1    1712
                                              6 COMMON     3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (6) _MFRC522_Clear_Bit                                    4     3      1    1842
                                              6 COMMON     4     3      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (5) _MFRC522_Wr                                           2     1      1    1198
                                              4 COMMON     2     1      1
                         _MFRC522_Rd (ARG)
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (7) _MFRC522_Rd                                           3     3      0      96
                                              1 COMMON     3     3      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _Bip                                                 10     6      4     526
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (1) _CheckSW1                                             3     3      0   29987
                                             24 BANK0      3     3      0
                  _Deactivate_Scroll
                          _GsmWakeUp
              _Left_HorizontalScroll
                   _ResetScreenTimer
                           _ScreenOn
                        _SetAlarmOff
                           _ShowIcon
                        _ShowMessage
                        ___delay_sec
 ---------------------------------------------------------------------------------
 (1) ___delay_sec                                          5     3      2     681
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _ShowIcon                                             8     4      4    9136
                                             16 BANK0      8     4      4
                     _Oled_ConstText
                       _Oled_SetFont
 ---------------------------------------------------------------------------------
 (2) _SetAlarmOff                                          1     1      0    9170
                                             23 BANK0      1     1      0
                   _ResetScreenTimer
                        _ShowMessage
 ---------------------------------------------------------------------------------
 (3) _ResetScreenTimer                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ScreenOn                                             0     0      0      62
                      _Oled_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _Left_HorizontalScroll                                3     1      2     539
                                              2 COMMON     3     1      2
                    _Activate_Scroll
                  _Deactivate_Scroll
                      _Oled_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _Deactivate_Scroll                                    0     0      0      62
                      _Oled_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _Activate_Scroll                                      0     0      0      62
                      _Oled_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _GsmWakeUp                                            0     0      0    1167
                        _SendUartCmd
 ---------------------------------------------------------------------------------
 (1) _CheckBattery                                        36    36      0   29878
                                             23 BANK0     36    36      0
                        _SendUartCmd
                       _ShowBattIcon
                       _ShowBattLoad
                        _ShowMessage
                     _UART_Read_Text
                               _atoi
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               4     0      4    3002
                                              2 BANK0      4     0      4
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               8     4      4     616
                                              7 COMMON     6     2      4
                                              0 BANK0      2     2      0
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              8     4      4     616
                                              7 COMMON     6     2      4
                                              0 BANK0      2     2      0
                             _strchr
 ---------------------------------------------------------------------------------
 (5) _strchr                                               7     3      4     384
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1157
                                              6 COMMON     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      99
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _UART_Read_Text                                       9     5      4     978
                                              0 COMMON     9     5      4
                          _UART_Read
 ---------------------------------------------------------------------------------
 (3) _UART_Read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ShowMessage                                          7     4      3    9170
                                             16 BANK0      7     4      3
                     _Oled_ConstText
                       _Oled_SetFont
 ---------------------------------------------------------------------------------
 (2) _ShowBattLoad                                         6     4      2    7143
                                             16 BANK0      6     4      2
                     _Oled_ConstText
                       _Oled_SetFont
                             _strcat
 ---------------------------------------------------------------------------------
 (4) _strcat                                               6     2      4     539
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _ShowBattIcon                                         6     4      2    6799
                                             16 BANK0      6     4      2
                     _Oled_ConstText
                       _Oled_SetFont
 ---------------------------------------------------------------------------------
 (2) _Oled_SetFont                                         9     3      6    3005
                                              9 COMMON     3     3      0
                                              0 BANK0      6     0      6
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     575
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (2) _Oled_ConstText                                       7     3      4    3503
                                              9 BANK0      7     3      4
                     _Oled_WriteChar
 ---------------------------------------------------------------------------------
 (3) _Oled_WriteChar                                      15    13      2    1748
                                              8 COMMON     6     4      2
                                              0 BANK0      9     9      0
                    _Oled_SetPointer
                      _Oled_WriteRam
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     656
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _Oled_WriteRam                                        1     1      0      62
                                              1 COMMON     1     1      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (4) _Oled_SetPointer                                      6     5      1     455
                                              2 COMMON     6     5      1
                      _Oled_WriteCmd
 ---------------------------------------------------------------------------------
 (5) _Oled_WriteCmd                                        1     1      0      62
                                              1 COMMON     1     1      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _SendUartCmd                                          2     0      2    1167
                                              6 COMMON     2     0      2
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (3) _UART_Write_Text                                      5     3      2     226
                                              1 COMMON     5     3      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (4) _UART_Write                                           1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADLX_Init                                            2     2      0     848
                                              6 COMMON     2     2      0
                        _ACC_ReadReg
                       _ACC_WriteReg
 ---------------------------------------------------------------------------------
 (2) _ACC_WriteReg                                         5     4      1     743
                                              1 COMMON     5     4      1
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (2) _ACC_ReadReg                                          5     5      0      96
                                              1 COMMON     5     5      0
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (5) _SPI_Write                                            1     1      0      31
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADLX_Init
     _ACC_ReadReg
       _SPI_Write
     _ACC_WriteReg
       _SPI_Write
   _Bip
   _CheckBattery
     _SendUartCmd
       _UART_Write_Text
         _UART_Write
     _ShowBattIcon
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _ShowBattLoad
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
       _strcat
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _UART_Read_Text
       _UART_Read
     _atoi
       ___wmul
       _isdigit
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _CheckNetwork
     _SendUartCmd
       _UART_Write_Text
         _UART_Write
     _ShowReceptionIcon
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _UART_Read_Text
       _UART_Read
     _atoi
       ___wmul
       _isdigit
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _CheckSW1
     _Deactivate_Scroll
       _Oled_WriteCmd
         _SPI_Write
     _GsmWakeUp
       _SendUartCmd
         _UART_Write_Text
           _UART_Write
     _Left_HorizontalScroll
       _Activate_Scroll
         _Oled_WriteCmd
           _SPI_Write
       _Deactivate_Scroll
         _Oled_WriteCmd
           _SPI_Write
       _Oled_WriteCmd
         _SPI_Write
     _ResetScreenTimer
     _ScreenOn
       _Oled_WriteCmd
         _SPI_Write
     _SetAlarmOff
       _ResetScreenTimer
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _ShowIcon
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     ___delay_sec
   _CheckSW2
     _RFID_Ok
       _Bip
       _MFRC522_ReadCardSerial
         _MFRC522_AntiColl
           _MFRC522_Clear_Bit
             _MFRC522_Rd
               _SPI_Write
             _MFRC522_Wr
               _MFRC522_Rd (ARG)
                 _SPI_Write
               _SPI_Write (ARG)
           _MFRC522_ToCard
             _MFRC522_Clear_Bit
               _MFRC522_Rd
                 _SPI_Write
               _MFRC522_Wr
                 _MFRC522_Rd (ARG)
                   _SPI_Write
                 _SPI_Write (ARG)
             _MFRC522_Rd
               _SPI_Write
             _MFRC522_Set_Bit
               _MFRC522_Rd
                 _SPI_Write
               _MFRC522_Wr
                 _MFRC522_Rd (ARG)
                   _SPI_Write
                 _SPI_Write (ARG)
             _MFRC522_Wr
               _MFRC522_Rd (ARG)
                 _SPI_Write
               _SPI_Write (ARG)
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
               _SPI_Write
             _SPI_Write (ARG)
       _MFRC522_isCard
         _MFRC522_Request
           _MFRC522_ToCard
             _MFRC522_Clear_Bit
               _MFRC522_Rd
                 _SPI_Write
               _MFRC522_Wr
                 _MFRC522_Rd (ARG)
                   _SPI_Write
                 _SPI_Write (ARG)
             _MFRC522_Rd
               _SPI_Write
             _MFRC522_Set_Bit
               _MFRC522_Rd
                 _SPI_Write
               _MFRC522_Wr
                 _MFRC522_Rd (ARG)
                   _SPI_Write
                 _SPI_Write (ARG)
             _MFRC522_Wr
               _MFRC522_Rd (ARG)
                 _SPI_Write
               _SPI_Write (ARG)
           _MFRC522_Wr
             _MFRC522_Rd (ARG)
               _SPI_Write
             _SPI_Write (ARG)
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
       ___delay_sec
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
       _strcat
       _strcmp
     _Reset
       _Oled_FillScreen
         _Oled_SetPointer
           _Oled_WriteCmd
             _SPI_Write
         _Oled_WriteRam
           _SPI_Write
       _SetAlarmOff
         _ResetScreenTimer
         _ShowMessage
           _Oled_ConstText
             _Oled_WriteChar
               _Oled_SetPointer
                 _Oled_WriteCmd
                   _SPI_Write
               _Oled_WriteRam
                 _SPI_Write
               ___wmul
           _Oled_SetFont
             ___awdiv
       _ShowFlightIcon
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
       _ShowIcon
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _ResetScreenTimer
     _SettingMenu
       _Oled_FillScreen
         _Oled_SetPointer
           _Oled_WriteCmd
             _SPI_Write
         _Oled_WriteRam
           _SPI_Write
       _ReadLastSMS
         _SendUartCmd
           _UART_Write_Text
             _UART_Write
         _ShowMessage
           _Oled_ConstText
             _Oled_WriteChar
               _Oled_SetPointer
                 _Oled_WriteCmd
                   _SPI_Write
               _Oled_WriteRam
                 _SPI_Write
               ___wmul
           _Oled_SetFont
             ___awdiv
         _ShowNumber
           _Oled_ConstText
             _Oled_WriteChar
               _Oled_SetPointer
                 _Oled_WriteCmd
                   _SPI_Write
               _Oled_WriteRam
                 _SPI_Write
               ___wmul
           _Oled_SetFont
             ___awdiv
         _UART_Read_Text
           _UART_Read
         ___delay_sec
         _strlen
         _strtok
           _strcspn
             _strchr
           _strspn
             _strchr
       _Reset
         _Oled_FillScreen
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
         _SetAlarmOff
           _ResetScreenTimer
           _ShowMessage
             _Oled_ConstText
               _Oled_WriteChar
                 _Oled_SetPointer
                   _Oled_WriteCmd
                     _SPI_Write
                 _Oled_WriteRam
                   _SPI_Write
                 ___wmul
             _Oled_SetFont
               ___awdiv
         _ShowFlightIcon
           _Oled_ConstText
             _Oled_WriteChar
               _Oled_SetPointer
                 _Oled_WriteCmd
                   _SPI_Write
               _Oled_WriteRam
                 _SPI_Write
               ___wmul
           _Oled_SetFont
             ___awdiv
         _ShowIcon
           _Oled_ConstText
             _Oled_WriteChar
               _Oled_SetPointer
                 _Oled_WriteCmd
                   _SPI_Write
               _Oled_WriteRam
                 _SPI_Write
               ___wmul
           _Oled_SetFont
             ___awdiv
       _SavePhoneNumber
         _SendUartCmd
           _UART_Write_Text
             _UART_Write
         _strcat
         _strcpy
       _ShowIcon
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
       ___delay_sec
       _strlen
     _ShowIcon
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
   _Deactivate_Scroll
     _Oled_WriteCmd
       _SPI_Write
   _GsmOn
     _SendUartCmd
       _UART_Write_Text
         _UART_Write
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
   _INTER_Init
   _Left_HorizontalScroll
     _Activate_Scroll
       _Oled_WriteCmd
         _SPI_Write
     _Deactivate_Scroll
       _Oled_WriteCmd
         _SPI_Write
     _Oled_WriteCmd
       _SPI_Write
   _OSC_Init
   _Oled_FillScreen
     _Oled_SetPointer
       _Oled_WriteCmd
         _SPI_Write
     _Oled_WriteRam
       _SPI_Write
   _Oled_Init
     _Oled_FillScreen
       _Oled_SetPointer
         _Oled_WriteCmd
           _SPI_Write
       _Oled_WriteRam
         _SPI_Write
     _Oled_Reset
     _Oled_WriteCmd
       _SPI_Write
   _OnOff
     _GsmOff
       _SendUartCmd
         _UART_Write_Text
           _UART_Write
       _ShowFlightIcon
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _ResetScreenTimer
     _ScreenOff
       _Oled_WriteCmd
         _SPI_Write
   _PIN_Init
   _RaiseAlarm
     _CheckNetwork
       _SendUartCmd
         _UART_Write_Text
           _UART_Write
       _ShowReceptionIcon
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
       _UART_Read_Text
         _UART_Read
       _atoi
         ___wmul
         _isdigit
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _GsmOn
       _SendUartCmd
         _UART_Write_Text
           _UART_Write
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _GsmWakeUp
       _SendUartCmd
         _UART_Write_Text
           _UART_Write
     _ResetScreenTimer
     _ScreenOn
       _Oled_WriteCmd
         _SPI_Write
     _SendSms
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _SetAlarmOff
       _ResetScreenTimer
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     ___delay_sec
   _ReadPhoneNumber
     _SendUartCmd
       _UART_Write_Text
         _UART_Write
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _UART_Read_Text
       _UART_Read
     ___delay_sec
     _strlen
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _Reset
     _Oled_FillScreen
       _Oled_SetPointer
         _Oled_WriteCmd
           _SPI_Write
       _Oled_WriteRam
         _SPI_Write
     _SetAlarmOff
       _ResetScreenTimer
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _ShowFlightIcon
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _ShowIcon
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
   _ResetScreenTimer
   _SPI_Init
   _SendUartCmd
     _UART_Write_Text
       _UART_Write
   _SetAlarmOff
     _ResetScreenTimer
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
   _SetAlarmOn
     _Bip
     _CheckNetwork
       _SendUartCmd
         _UART_Write_Text
           _UART_Write
       _ShowReceptionIcon
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
       _UART_Read_Text
         _UART_Read
       _atoi
         ___wmul
         _isdigit
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _ResetScreenTimer
     _SetAlarmOff
       _ResetScreenTimer
       _ShowMessage
         _Oled_ConstText
           _Oled_WriteChar
             _Oled_SetPointer
               _Oled_WriteCmd
                 _SPI_Write
             _Oled_WriteRam
               _SPI_Write
             ___wmul
         _Oled_SetFont
           ___awdiv
     _ShowMessage
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _ShowNumber
       _Oled_ConstText
         _Oled_WriteChar
           _Oled_SetPointer
             _Oled_WriteCmd
               _SPI_Write
           _Oled_WriteRam
             _SPI_Write
           ___wmul
       _Oled_SetFont
         ___awdiv
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _ShowMessage
     _Oled_ConstText
       _Oled_WriteChar
         _Oled_SetPointer
           _Oled_WriteCmd
             _SPI_Write
         _Oled_WriteRam
           _SPI_Write
         ___wmul
     _Oled_SetFont
       ___awdiv
   _SimCard_Init
     _SendUartCmd
       _UART_Write_Text
         _UART_Write
     _UART_Read_Text
       _UART_Read
   _UART_Init
   ___delay_sec

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     48      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      2      27       9       48.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     118      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     118      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Feb 28 14:57:07 2017

        __end_of_Oled_SetPointer 1118                    RFID_Ok@buffer 004D                      __CFG_CP$OFF 0000  
                   ___awdiv@sign 0076              ___wmul@multiplicand 0072               __size_of_ADLX_Init 005F  
                    __CFG_LVP$ON 0000                              l210 1CF1                              l235 12F2  
                            l308 0FA5                              l228 1D20                              l245 1CFD  
                            l191 12B6                              l194 12E1                              l602 152C  
                            l189 12A8                              l613 0177                              l606 1566  
                            l528 148D                              l474 12A4                              l642 159C  
                            l570 0458                              l562 0412                              l459 05E6  
                            l635 1674                              l717 1E5C                              l566 042D  
                            l663 0612                              l683 06A3                              l675 067D  
                            l692 06FC                              l677 065C                              l688 06C5  
                            _CKP 10AC                              _GIE 005F                              _PS0 04A8  
                            _PS1 04A9                              _PS2 04AA                              _PSA 04AB  
                            _UID 013F           ?_Left_HorizontalScroll 0072                              _Bip 12A6  
                            _max 006C                              _min 006D                _Deactivate_Scroll 1CC9  
                   __CFG_BORV$LO 0000                              wreg 0009                     __CFG_IESO$ON 0000  
                Oled_WriteChar@c 0020                  Oled_WriteChar@i 0025                  Oled_WriteChar@j 0027  
                    ?_INTER_Init 0070           SettingMenu@phoneNumber 0055             __size_of_ACC_ReadReg 0024  
                  MFRC522_Rd@val 0073               ?_Deactivate_Scroll 0070            CheckNetwork@netSignal 004B  
                           ?_Bip 0070                             l1157 1E07                             l5000 1D51  
                           l5022 122E                             l5014 1210                             l5016 121C  
                           l5040 112A                             l5026 1237                             l5130 010B  
                           l5060 12D3                             l5044 1136                             l5070 148F  
                           l5038 111E                             l5302 07BF                             l5206 065F  
                           l5072 149C                             l5048 113F                             l5304 05ED  
                           l5312 1026                             l5136 012D                             l5090 14C0  
                           l5082 14B4                             l5218 0697                             l5306 07D0  
                           l5314 102E                             l5402 0276                             l4620 1333  
                           l5092 14E7                             l5068 1497                             l5172 1E05  
                           l5156 1D9F                             l5244 06E7                             l5420 02D5  
                           l6132 0471                             l4542 1E56                             l5254 0718  
                           l5246 06F0                             l5190 0617                             l5318 1045  
                           l5414 02B6                             l6150 0491                             l6142 047D  
                           l6134 0472                             l4704 1D29                             l5088 14BC  
                           l4800 1178                             l4720 04C1                             l5280 0754  
                           l5264 072B                             l5272 073E                             l5256 071B  
                           l5192 0620                             l5184 060E                             l5520 01CE  
                           l5512 019B                             l5408 0296                             l6152 049F  
                           l4626 133E                             l5098 14F6                             l4802 1181  
                           l5290 078E                             l5274 0742                             l5522 01D9  
                           l4652 1375                             l4644 1364                             l4636 1346  
                           l4812 1148                             l4724 04CA                             l5196 062D  
                           l5524 01DC                             l5516 01C8                             l6148 048E  
                           l4590 0FB8                             l4566 0FB6                             l4638 1352  
                           l4814 1151                             l4806 119E                             l4742 0529  
                           l4734 04F5                             l4726 04D2                             l4718 04BB  
                           l5286 0762                             l5462 1790                             l4910 1ED6  
                           l4584 0FC9                             l4648 136D                             l4752 0543  
                           l4744 052E                             l4736 0514                             l5288 0767  
                           l5392 024A                             l5384 0242                             l4586 0FF7  
                           l4578 0FE9                             l4930 1FB7                             l4842 1324  
                           l4818 116E                             l4826 1DD9                             l5298 07B5  
                           l5810 1540                             l4676 1FDE                             l4932 1FC3  
                           l4772 0598                             l4764 0560                             l5468 17C3  
                           l5492 17FE                             l4908 1ECA                             l4924 1E3F  
                           l5396 0256                             l4934 1FCB                             l4790 05D9  
                           l4782 05B5                             l4774 05A8                             l4950 12A0  
                           l5478 17DC                             l5814 155D                             l5830 10CC  
                           l5718 008C                             l4872 1383                             l5680 0351  
                           l4792 05E1                             l5488 17FC                             l4864 101F  
                           l4698 1E22                             l4778 05AD                             l4858 1013  
                           l5906 15B5                             l5692 0391                             l5780 1631  
                           l4788 05B7                             l4980 1480                             l5908 15D2  
                           l5860 1681                             l4894 13C9                             l4886 13A6  
                           l4878 138A                             l5686 0371                             l4974 146D  
                           l5838 10DA                             l5870 16C7                             l5890 158E  
                           l5788 1645                             STR_1 0E6A                             STR_2 0E33  
                           STR_3 0EFE                             STR_6 0E12                             STR_7 0E97  
                           STR_8 0E28                             STR_9 0DEE                             Bip@i 0076  
                           Bip@j 0078                             Bip@n 0070                 ?_Oled_FillScreen 0070  
                           Bip@t 0072                             _LATA 010C                             _LATB 010D  
                           _LATC 010E                             u5105 1213                             u6100 1536  
                           u5125 121D                             u5205 1137                             u6030 163A  
                           u5135 1227                             u6040 163B                             u4425 10F5  
                           u4505 0FC1                             u5225 12C0                             u5145 122F  
                           u5235 12B2                             u4445 1E5D                             u5405 06BE  
                           u4455 1E62                             u5175 1121                  __end_of_RFID_Ok 1800  
                           u4545 1349                             u6225 16C5                             u6090 1535  
                           u4475 0FAB                             u5195 1130                             u5435 06E0  
                           _RCIF 008D                             u4565 1353                             u4805 05C0  
                           u6245 159A                             u4495 0FD2                             u4575 135D  
                           u4585 1365                             u6185 10E4                             u5705 02CC  
                           u6265 15D0                             u5730 177F                             u5475 070B  
                           u5635 0260                             u6195 1672                             u4685 04FE  
                           u5645 026C                             u5655 0280                             u6560 0483  
                           u5905 035B                             u5745 178E                             u5665 028C  
                           u6617 0498                             u6570 0484                             u5915 0367  
                           u5755 17C1                             u6707 01C2                             u5675 02A0  
                           u6627 16B1                             u5780 0180                             u5860 0F5A  
                           u4885 12F8                             u5925 037B                             u6717 12C6  
                           u5685 02AC                             u6637 15AD                             u5790 0181  
                           u5935 0387                             u6727 12CC                             u5695 02C0  
                           u6647 15BC                             u6495 0448                             u5945 039B  
                           u6737 12D7                             u6657 16E8                             u5955 03A7  
                           u6747 165C                             u6667 1E93                             u5885 033B  
                           u6757 1DE8                             u6677 1EA1                             u6767 1EBF  
                           u5895 0347                             u6687 1557                             u6777 1F86  
                           u6697 0171                             _TMR0 0015                             _WPUA 020C  
                           _WPUB 020D                             _WPUC 020E         __size_of_ReadPhoneNumber 0089  
                   __CFG_WRT$OFF 0000                    __CFG_FCMEN$ON 0000              ??_Deactivate_Scroll 0072  
                           _atoi 148F                             _main 03B1                             _font 005E  
          MFRC522_AntiColl@unLen 0037                             fsr0h 0005                             fsr1h 0007  
                           fsr0l 0004                             indf0 0000                             indf1 0001  
                           fsr1l 0006                             btemp 007E                       _Battery6x8 0D18  
                  __CFG_BOREN$ON 0000                             ltemp 007E                             start 0002  
                           ttemp 007E                             wtemp 007E                 _MFRC522_AntiColl 142B  
               Oled_WriteCmd@cmd 0071           Oled_FillScreen@pattern 0079                    ??_ReadLastSMS 0038  
                 MFRC522_Rd@addr 0072          __end_of_UART_Write_Text 1E3A                            ??_Bip 0074  
               Oled_WriteRam@dat 0071          __size_of_ShowFlightIcon 0022                  __end_of_SendSms 1D38  
                 MFRC522_Wr@addr 0075                            ?_atoi 0076                            ?_main 0070  
                __end_of___awdiv 137A          ?_MFRC522_ReadCardSerial 0070        __end_of_Deactivate_Scroll 1CCD  
                          STR_10 0DD2                            STR_11 0E1D                            STR_12 0E97  
                          STR_20 0F08                            STR_21 0F0A                            STR_13 0EA5  
                          STR_14 0EFE                            STR_30 0ECB                            STR_22 0EAD  
                          STR_15 0EFF                            STR_23 0EFE                            STR_31 0D8A  
                          STR_24 0EFF                            STR_16 0EFF                            STR_32 0EFE  
                          STR_40 0DFA                            STR_33 0EFF                            STR_25 0EE9  
                          STR_17 0E93                            STR_41 0DA2                            STR_50 0DD3  
                          STR_34 0EFF                            STR_18 0ECF                            STR_26 0EE3  
                          STR_42 0DC6                            STR_43 0DC6                            STR_35 0EFF  
                          STR_19 0ED5                            STR_27 0EDD                            STR_51 0E9C  
                          STR_36 0EFF                            STR_52 0F0C                            STR_28 0ED7  
                          STR_60 0EB5                            STR_44 0DE2                            STR_45 0EFE  
                          STR_53 0F04                            STR_29 0ED1                            STR_37 0EC4  
                          STR_61 0DD4                            STR_62 0DD3                            STR_38 0DD3  
                          STR_46 0EFF                            STR_70 0F0A                            STR_54 0F06  
                          STR_47 0EFF                            STR_71 0F0C                            STR_55 0F01  
                          STR_63 0E7F                            STR_39 0E06                            STR_64 0ECF  
                          STR_72 0ED5                            STR_56 0E6A                            STR_48 0E89  
                          STR_80 0E5F                            STR_65 0F06                            STR_73 0F0A  
                          STR_81 0EF5                            STR_57 0EEF                            STR_49 0EBD  
                          STR_66 0ECF                            STR_74 0F08                            STR_58 0E96  
                          STR_82 0E54                            STR_75 0F0A                            STR_59 0EFA  
                          STR_67 0E75                            STR_83 0E49                            STR_76 0ED5  
                          STR_68 0E93                            STR_84 0E54                            STR_69 0F0A  
                          STR_77 0F0C                            STR_85 0DB5                            STR_78 0E3E  
                          STR_79 0ECF                  ___awdiv@divisor 0070                            _IOCIE 005B  
                __end_of___lwdiv 123C                  __end_of___lwmod 1144           ShowReceptionIcon@level 0030  
                ___awdiv@counter 0075             UART_Read_Text@Output 0070            __size_of_CheckBattery 00DA  
                          _TRISA 008C                            _TRISB 008D                            _TRISC 008E  
                          _GsmOn 1DA1                    __CFG_PWRTE$ON 0000           SavePhoneNumber@myPhone 0078  
                          _OnOff 10C3              __size_of_MFRC522_Rd 0015              __size_of_MFRC522_Wr 000E  
               __end_of_PIN_Init 0F5C                            _Reset 1EE4                      ?_UART_Write 0070  
             __size_of_UART_Init 000B               __size_of_UART_Read 000C             UART_Read_Text@length 0072  
               __end_of_OSC_Init 000C            __size_of_ACC_WriteReg 001E                  __end_of_dpowers 080A  
                          _font2 00E8                  __end_of_isdigit 1D53                            _simOk 00EA  
                          _timer 0062                            atoi@a 007B            __size_of_CheckNetwork 00D9  
         MFRC522_AntiColl@serNum 003B                            atoi@s 0076                      _Battery8x21 0C9A  
                          _width 006F                 __end_of_SPI_Init 1CF0                            ltemp0 007E  
                          ltemp1 0082                            ltemp2 0086                            ltemp3 0080  
              _MFRC522_Clear_Bit 1D61                 __end_of_CheckSW1 1663                 __end_of_CheckSW2 1570  
                          ttemp0 007E                            ttemp1 0081                            ttemp2 0084  
                          ttemp3 0087                            ttemp4 007F                            status 0003  
              __end_of_ADLX_Init 142B                            wtemp0 007E                            wtemp1 0080  
                          wtemp2 0082                            wtemp3 0084                            wtemp4 0086  
                          wtemp5 0088                            wtemp6 007F                  __end_of_sprintf 07D7  
                __end_of_strcspn 1174               ?_MFRC522_Clear_Bit 0076               __size_of_SPI_Write 0009  
                  ??_SetAlarmOff 0037                Oled_WriteChar@pag 0079                Oled_WriteChar@seg 0078  
                 __CFG_MCLRE$OFF 0000                  __initialization 07D7              __size_of_INTER_Init 000F  
                   __end_of_atoi 14FB                     __end_of_main 04B2              ??_MFRC522_Clear_Bit 0077  
                  ?_Oled_SetFont 0020                 ?_Oled_SetPointer 0072                     _CheckBattery 02D7  
      MFRC522_ReadCardSerial@str 003D           __size_of_Oled_WriteCmd 000A           __size_of_Oled_WriteRam 000A  
                 __CFG_LPBOR$OFF 0000   __end_of_MFRC522_ReadCardSerial 1E07                 ??_MFRC522_ToCard 0026  
                  ??_SendUartCmd 0078         __size_of_MFRC522_Set_Bit 000D              __end_of_ReadLastSMS 013F  
       __size_of_MFRC522_Request 0036                           ??_atoi 0078                     _ACC_WriteReg 1EA8  
                         ??_main 005B                       _Oled_Reset 1E8B                       _RaiseAlarm 1570  
                 SendUartCmd@cmd 0076                 __end_of_ScreenOn 1CD1                     _CheckNetwork 01FE  
                MFRC522_ToCard@i 0033                  MFRC522_ToCard@n 0035                   __CFG_PLLEN$OFF 0000  
               ??_MFRC522_isCard 007C            MFRC522_ToCard@backLen 0025                 __end_of_ShowIcon 109B  
                     _SetAlarmOn 1663                           ?_GsmOn 0070                           ?_OnOff 0070  
                      ??_RFID_Ok 003E                           ?_Reset 0070                  MFRC522_Wr@value 0074  
      __end_of_MFRC522_Clear_Bit 1D70            MFRC522_ToCard@_status 002F            MFRC522_ToCard@command 0032  
               ___awdiv@dividend 0072                   __CFG_ZCDDIS$ON 0000                           _ANSELA 018C  
                         _ANSELB 018D                           _ANSELC 018E                           _IOCCN1 1CC1  
                         _RC1REG 0199                           _RC1STA 019D               __size_of_GsmWakeUp 0007  
          MFRC522_ToCard@sendLen 0022                           _OSCCON 0099                           _TMR0IE 005D  
                         _TMR0IF 005A                           _TMR0CS 04AD            MFRC522_ToCard@waitIRq 002E  
                         _TMR0SE 04AC                           _TX1REG 019A                    ?_SimCard_Init 0070  
                         _WDTCON 0097                           _TX1STA 019E                 _ResetScreenTimer 1CD5  
                    RaiseAlarm@i 0052                           _SSPBUF 0211                           _SWDTEN 04B8  
                     ShowIcon@id 0030               __size_of_Oled_Init 0088                           _GsmOff 1E6F  
                      ??_SendSms 0037                ??_ReadPhoneNumber 0038                __end_of_UART_Init 1D20  
              __end_of_UART_Read 1D2C                 ShowNumber@number 0030                   ??_Oled_SetFont 0079  
            __size_of_UART_Write 0008                           ___wmul 1E54                        ??___awdiv 0074  
               ?_UART_Write_Text 0071          MFRC522_AntiColl@_status 0039         __size_of_Activate_Scroll 0004  
            __end_of_SetAlarmOff 1D90                        ??___lwdiv 0074                           _height 0068  
                      ??___lwmod 007C                           _buffer 012B               __size_of_ScreenOff 0004  
        __size_of_Oled_ConstText 0027                       _ShowNumber 109B          __size_of_UART_Read_Text 0045  
                  ??_ShowMessage 0033                 ___awdiv@quotient 0077                      SetAlarmOn@i 0052  
     __size_of_Deactivate_Scroll 0004                           _strcat 1FB3                           _strchr 1E07  
                         _strcmp 1024                           _strcpy 1E3A                           _strlen 1EC6  
                         _strtok 137A                           _strspn 1174            __end_of_Terminal12x16 0AB2  
              __end_of_SPI_Write 1D01                        ??_isdigit 0070                    ??_SettingMenu 0052  
            __end_of_SendUartCmd 1CE2         __size_of_SavePhoneNumber 0034                        ??_sprintf 0026  
                      ??_strcspn 007B                    _Oled_WriteCmd 1D01                    _Oled_WriteRam 1D0B  
             ShowMessage@message 0030                   ??_SimCard_Init 0079                __end_of_Icon16x16 0C9A  
        __end_of__initialization 07FD  Left_HorizontalScroll@start_page 0074           MFRC522_Request@TagType 0036  
                   ??_MFRC522_Rd 0071                     ??_MFRC522_Wr 0075            MFRC522_isCard@TagType 007D  
                  __end_of_GsmOn 1DB2                    __end_of_OnOff 10EC                   __pcstackCOMMON 0070  
                    _ReadLastSMS 0095                    __end_of_Reset 1F03                     __pidataBANK1 1CC3  
                      ?_PIN_Init 0070                   _ShowFlightIcon 1F03                        ?_OSC_Init 0070  
        ??_Left_HorizontalScroll 0074                __end_of_GsmWakeUp 1CE9                        ?_SPI_Init 0070  
         MFRC522_Request@_status 0038                      ?_Oled_Reset 0070                    ??___delay_sec 0072  
                    ?_RaiseAlarm 0070              ReadLastSMS@phoneNbr 003B          __size_of_Oled_WriteChar 00A4  
                      ?_CheckSW1 0070                        ?_CheckSW2 0070           MFRC522_Request@reqMode 0037  
                 _OPTION_REGbits 0095         __end_of_MFRC522_AntiColl 148F       ReadPhoneNumber@phoneNumber 00E6  
                    ?_SetAlarmOn 0070                __end_of_Oled_Init 1766                          ??_GsmOn 007E  
                        ??_OnOff 0037                     ??_INTER_Init 0070              __end_of_ShowMessage 1FB3  
              ??_MFRC522_Set_Bit 0077                   ShowNumber@page 0033                          ??_Reset 0038  
             SimCard_Init@result 0020               __end_of_MFRC522_Rd 1DD9               __end_of_MFRC522_Wr 1D61  
              ??_MFRC522_Request 007A       __size_of_MFRC522_Clear_Bit 000F                   ?_Oled_WriteCmd 0070  
                 ?_Oled_WriteRam 0070                     sprintf@width 0030                       __pbssBANK0 005E  
                     __pbssBANK1 00E8                       __pbssBANK2 0120                       __pbssBANK3 01A0  
              __end_of_ScreenOff 1CD5              __end_of_SettingMenu 01FE         CheckNetwork@netSignalInt 004D  
         MFRC522_ToCard@backData 0023                      _SetAlarmOff 1D7F                          ?_GsmOff 0070  
               Oled_FillScreen@i 007B                 Oled_FillScreen@j 007A                        ?_ScreenOn 0070  
         __end_of_ShowFlightIcon 1F25                       __pmaintext 03B1                        ?_ShowIcon 0030  
                  ?_ShowBattIcon 0030                    ?_ShowBattLoad 0030                       ??_PIN_Init 0070  
                        ?___wmul 0070               __end_of_INTER_Init 1D7F                  __CFG_PPS1WAY$ON 0000  
                     ??_OSC_Init 0070                Oled_SetFont@_font 0020                      ?_ShowNumber 0030  
                     ??_SPI_Init 0070                      _SendUartCmd 1CDB           MFRC522_ToCard@lastBits 0030  
                        ?_strcat 0070                          ?_strchr 0070                          ?_strcmp 0070  
                        ?_strcpy 0070                          ?_strlen 0070                          ?_strtok 0022  
                        ?_strspn 0077                    ??_ACC_ReadReg 0071                       ??_CheckSW1 0038  
                     ??_CheckSW2 0057                ??_Activate_Scroll 0072                  CheckBattery@res 0038  
               _RFID_CARD_NUMBER 00EE                          _SP1BRGH 019C                          _SP1BRGL 019B  
         MFRC522_ToCard@sendData 0020              Oled_SetFont@_height 0023                          _RFID_Ok 1766  
                   ??_UART_Write 0070                          _OSCSTAT 009A                          _OSCTUNE 0098  
                     _flightMode 0067                          _SSP1ADD 0212                          _PPSLOCK 0E0F  
            __end_of___delay_sec 1DF0             __end_of_Oled_SetFont 1073        Oled_SetPointer@hig_column 0077  
                    ShowIcon@seg 0032                ??_SavePhoneNumber 007A              SavePhoneNumber@str1 00A0  
            SavePhoneNumber@str2 0020              __size_of_Oled_Reset 001D              __size_of_RaiseAlarm 0078  
                        _TagType 00EC                       ??_ScreenOn 0072                    SPI_Write@data 0070  
                __size_of_GsmOff 001C                          _SendSms 1D2C         __size_of_Oled_FillScreen 0024  
                 ??_ShowBattIcon 0032                   ??_ShowBattLoad 0032                        _ADLX_Init 13CC  
                ?_ShowFlightIcon 0070                       ??_ShowIcon 0034              __size_of_SetAlarmOn 007B  
                ShowMessage@page 0032                          ___awdiv 1329                  __size_of___wmul 001B  
             __end_of_UART_Write 1CF8                   _Oled_ConstText 1FD9                          ___lwdiv 1208  
                        ___lwmod 1118                   _UART_Read_Text 12E4                  __CFG_STVREN$OFF 0000  
                        _alarmOn 0066                      _ShowMessage 1F8E             __end_of_Reception8x8 0D8A  
           __end_of_SimCard_Init 1DC4                          __ptext1 1D15                          __ptext2 1DB2  
                        __ptext3 1663                          __ptext4 1CE9                          __ptext5 000C  
                        __ptext6 1570                          __ptext7 1D2C                          __ptext8 1DA1  
                        __ptext9 01FE         __end_of_ResetScreenTimer 1CDB                  __size_of_strcat 0026  
                __size_of_strchr 0019                  __size_of_strcmp 0027                  __size_of_strcpy 001A  
                __size_of_strlen 001E                __end_of_hexpowers 0812                     __size_of_Bip 003E  
                __size_of_strtok 0052                  __size_of_strspn 0030                          _dpowers 0800  
            Oled_ConstText@x_seg 002F                          _isdigit 1D45                      _SettingMenu 013F  
                ??_Oled_WriteCmd 0071                  ??_Oled_WriteRam 0071                          _result3 01A0  
                        _sprintf 05E8                          clrloop0 0F0F              __end_of_ACC_ReadReg 1F8E  
                        _strcspn 1144                  _ReadPhoneNumber 000C             end_of_initialization 07FD  
            __size_of_ShowNumber 0028    MFRC522_ReadCardSerial@_status 003C                       ?_ADLX_Init 0070  
         __end_of_Oled_ConstText 2000           __end_of_UART_Read_Text 1329        Oled_SetPointer@low_column 0075  
                   __pstringtext 0800                          strcmp@r 0073                          strlen@s 0070  
                      _UART_Init 1D15                        _UART_Read 1D20                     RFID_Ok@F5666 0120  
                        strspn@i 0020                        _PORTAbits 000C                        _PORTBbits 000D  
                 ACC_ReadReg@reg 0074                        _PORTCbits 000E                   ACC_ReadReg@val 0075  
                 _Oled_WriteChar 0F5C             CheckBattery@battLoad 0057                   UART_Write@data 0070  
                    ___delay_sec 1DD9                 __CFG_FOSC$INTOSC 0000         __size_of_Oled_SetPointer 002C  
             __end_of_Battery6x8 0D5A                        _SPI_Write 1CF8              Oled_WriteChar@y_pag 0023  
            Oled_WriteChar@x_seg 0024                        _RXPPSbits 0E24                     ADLX_Init@reg 0077  
       RFID_Ok@badgeSerialNumber 0040                  ACC_WriteReg@cmd 0071                  ACC_WriteReg@reg 0075  
                      _Icon16x16 0BBA                  ?_Oled_ConstText 0029                   __end_of_GsmOff 1E8B  
                   ?_ReadLastSMS 0037                  ?_UART_Read_Text 0070                  _MFRC522_Set_Bit 1D38  
        MFRC522_Request@backBits 0039              MFRC522_ToCard@irqEn 0031                   __end_of___wmul 1E6F  
         __end_of_Oled_WriteChar 1000                    PIN_Init@state 0070                  _MFRC522_Request 1270  
                     ?_UART_Init 0070                       ?_UART_Read 0070                __size_of_PIN_Init 0048  
              ??_Oled_FillScreen 0078                __size_of_OSC_Init 0008                     ??_Oled_Reset 0070  
 __size_of_Left_HorizontalScroll 0023                     ??_RaiseAlarm 004F    __end_of_Left_HorizontalScroll 1F6A  
                    _ACC_ReadReg 1F6A                __size_of_SPI_Init 0007                   __end_of_strcat 1FD9  
        __end_of_ReadPhoneNumber 0095            __size_of_Oled_SetFont 0028         __size_of_UART_Write_Text 001A  
                 __end_of_strchr 1E20                   __end_of_strcmp 104B                   __end_of_strcpy 1E54  
                 __end_of_strlen 1EE4                   __end_of_strtok 13CC                   __end_of_strspn 11A4  
                      _GsmWakeUp 1CE2                     ??_SetAlarmOn 004F              start_initialization 07D7  
              ?_MFRC522_AntiColl 0070                MFRC522_AntiColl@i 003A                      __end_of_Bip 12E4  
              __size_of_CheckSW1 007B                __size_of_CheckSW2 0075             __end_of_ShowBattIcon 1208  
           __end_of_ShowBattLoad 11D5                       ?_SPI_Write 0070                   _FlightMode8x12 0D5A  
        __size_of_MFRC522_ToCard 0136               ??_MFRC522_AntiColl 007A                        _Oled_Init 16DE  
        __size_of_MFRC522_isCard 0011              _Oled_WriteChar$1368 0021                        _ScreenOff 1CD1  
                   ?_SetAlarmOff 0070               __end_of_Oled_Reset 1EA8                         ??_GsmOff 007E  
             __end_of_RaiseAlarm 15E8         ??_MFRC522_ReadCardSerial 007D                      ??_ADLX_Init 0076  
                _Activate_Scroll 1CC5            __size_of_SimCard_Init 0012               __end_of_SetAlarmOn 16DE  
           __end_of_Numeric12x16 0BBA                __size_of_ScreenOn 0004                         ??___wmul 0074  
                   _Oled_SetFont 104B                     ??_ShowNumber 0034                  CheckNetwork@res 0037  
              __size_of_ShowIcon 0028                      __pdataBANK1 00EE                  ?_Oled_WriteChar 0078  
                   ?_SendUartCmd 0076                         ??_strcat 0074                         ??_strchr 0074  
                       ??_strcmp 0072                         ??_strcpy 0072                         ??_strlen 0072  
                       ??_strtok 007D                         ??_strspn 007B    Left_HorizontalScroll@end_page 0072  
                _SavePhoneNumber 123C                       ?_GsmWakeUp 0070           __end_of_FlightMode8x12 0D7A  
                      ___latbits 0002                    __pcstackBANK0 0020                         ?_RFID_Ok 0070  
                  __pcstackBANK1 00A0                    __pcstackBANK2 0145                     _isdigit$1025 0070  
                     ?_Oled_Init 0070                ??_Oled_SetPointer 0073                    ShowNumber@seg 0032  
               ??_ShowFlightIcon 0030                      sprintf@flag 002F               __end_of_ShowNumber 10C3  
                   _Reception8x8 0D7A                      sprintf@prec 002C                     _SimCard_Init 1DB2  
  Left_HorizontalScroll@set_time 0073                         RFID_Ok@i 004B                       ?_ScreenOff 0070  
        __end_of_MFRC522_Set_Bit 1D45                         ?_SendSms 0070          __end_of_MFRC522_Request 12A6  
               ___lwdiv@dividend 0072              MFRC522_Set_Bit@addr 0078              MFRC522_Set_Bit@mask 0076  
               Oled_SetFont@_max 0025                 Oled_SetFont@_min 0024                         ?___awdiv 0070  
                  ?_CheckBattery 0070                         ?___lwdiv 0070                         ?___lwmod 0078  
                      _imgCancel 0069                      ??_UART_Init 0070                      ??_UART_Read 0070  
                   ?_ShowMessage 0030                    ?_ACC_WriteReg 0071               Oled_SetFont@_width 0022  
                  ?_CheckNetwork 0070                         _BAUD1CON 019F                ?_ResetScreenTimer 0070  
                  _Terminal12x16 0812                         ?_isdigit 0070                 ?_ReadPhoneNumber 0037  
             ??_ResetScreenTimer 0070                   __size_of_GsmOn 0011                     ?_SettingMenu 0070  
                 __size_of_OnOff 0029                   __size_of_Reset 001F                        _hexpowers 080A  
               __CFG_WDTE$SWDTEN 0000                      ??_SPI_Write 0070                 ___lwdiv@quotient 0076  
                       ?_sprintf 0020                         ?_strcspn 0077                ??_UART_Write_Text 0073  
              _ShowReceptionIcon 1F25                   ___wmul@product 0074          __end_of_Activate_Scroll 1CC9  
                UART_Read_Text@i 0077               ?_ShowReceptionIcon 0030                        clear_ram0 0F0E  
                       _PIR1bits 0011                        _sleepMode 006E  __size_of_MFRC522_ReadCardSerial 0017  
                 ??_CheckBattery 0037                         _PIN_Init 0F14                         _SSP1CON1 0215  
            ??_ShowReceptionIcon 0032                ShowBattIcon@level 0030                         _OSC_Init 0004  
                       _SSP1STAT 0214             __size_of_ReadLastSMS 00AA          __end_of_SavePhoneNumber 1270  
                 ??_ACC_WriteReg 0072                      _imgValidate 006B                         _SPI_Init 1CE9  
                 ??_CheckNetwork 0036                ___wmul@multiplier 0070            __size_of_ShowBattIcon 0033  
          __size_of_ShowBattLoad 0031                     ?___delay_sec 0070                         _CheckSW1 15E8  
                       _CheckSW2 14FB           ReadPhoneNumber@result0 00A0           ReadPhoneNumber@result1 00B4  
                    ??_GsmWakeUp 0078                     ShowIcon@page 0033                   _MFRC522_ToCard 04B2  
               __size_of_RFID_Ok 009A            __end_of_Oled_WriteCmd 1D0B            __end_of_Oled_WriteRam 1D15  
      __end_of_ShowReceptionIcon 1F47                      ??_Oled_Init 0020                ShowBattLoad@level 0030  
                 _MFRC522_isCard 1D90                 ??_Oled_ConstText 002D                 ??_UART_Read_Text 0074  
                    ??_ScreenOff 0072                  _Oled_FillScreen 1000                 ?_MFRC522_Set_Bit 0076  
                       _ScreenOn 1CCD            MFRC522_Clear_Bit@addr 0079                 ?_MFRC522_Request 0036  
          MFRC522_Clear_Bit@mask 0076                         _ShowIcon 1073             __size_of_SetAlarmOff 0011  
               __size_of_SendSms 000C                     _ShowBattIcon 11D5                     _ShowBattLoad 11A4  
               __size_of___awdiv 0051                 __size_of___lwdiv 0034                 __size_of___lwmod 002C  
                   ?_ACC_ReadReg 0070                       sprintf@idx 002A             __size_of_SendUartCmd 0007  
                     sprintf@val 002D           __end_of_MFRC522_ToCard 05E8                       strcat@from 0072  
         _MFRC522_ReadCardSerial 1DF0                 __size_of_isdigit 000E                  ___lwdiv@divisor 0070  
                main@phoneNumber 0145                  ___lwdiv@counter 0075                         __ptext10 1F25  
                       __ptext11 0F14                         __ptext20 013F                         __ptext12 10C3  
                       __ptext21 123C                         __ptext13 1CD1                         __ptext30 1024  
                       __ptext22 1E3A                         __ptext14 1E6F                         __ptext31 05E8  
                       __ptext23 1EE4                         __ptext15 16DE                         __ptext40 1D61  
                       __ptext32 1118                         __ptext24 1F03                         __ptext16 1E8B  
                       __ptext41 1D53                         __ptext33 1208                         __ptext25 1000  
                       __ptext17 0004                         __ptext50 1F47                         __ptext42 1DC4  
                       __ptext34 1D90                         __ptext26 0095                         __ptext18 1D70  
                       __ptext51 1CC9                         __ptext43 12A6                         __ptext35 1270  
                       __ptext27 1EC6                         __ptext19 14FB                         __ptext60 1D45  
                       __ptext52 1CC5                         __ptext44 15E8                         __ptext36 1DF0  
                       __ptext28 109B                         __ptext61 12E4                         __ptext53 1CE2  
                       __ptext45 1DD9                         __ptext37 142B                         __ptext29 1766  
                       __ptext70 0F5C                         __ptext62 1D20                         __ptext54 02D7  
                       __ptext46 1073                         __ptext38 04B2                         __ptext71 1E54  
                       __ptext63 1F8E                         __ptext55 137A                         __ptext47 1D7F  
                       __ptext39 1D38                         __ptext80 1F6A                         __ptext72 1D0B  
                       __ptext64 11A4                         __ptext56 1174                         __ptext48 1CD5  
                       __ptext81 1CF8                         __ptext73 10EC                         __ptext65 1FB3  
                       __ptext57 1144                         __ptext49 1CCD                         __ptext74 1D01  
                       __ptext66 11D5                         __ptext58 1E07                         __ptext75 1CDB  
                       __ptext67 104B                         __ptext59 148F                         __ptext76 1E20  
                       __ptext68 1329                         __ptext77 1CF0                         __ptext69 1FD9  
                       __ptext78 13CC                         __ptext79 1EA8                     _SSP1CON1bits 0215  
                   _Numeric12x16 0AB2           __end_of_MFRC522_isCard 1DA1                         _imgSetup 006A  
    MFRC522_AntiColl@serNumCheck 0036                 __size_of_sprintf 01EF                 __size_of_strcspn 0030  
           Oled_ConstText@buffer 0029                       strcpy@from 0070              UART_Write_Text@text 0071  
                  __size_of_atoi 006C                    __size_of_main 0101                    _SSPDATPPSbits 0E21  
               ?_Activate_Scroll 0070                Oled_ConstText@pag 002C                Oled_ConstText@seg 002B  
                     _MFRC522_Rd 1DC4                       _MFRC522_Wr 1D53        __size_of_MFRC522_AntiColl 0064  
               ??_Oled_WriteChar 007A                       _RC1STAbits 019D                       _RC3PPSbits 0EA3  
                     _RB5PPSbits 0E9D                    _SSPCLKPPSbits 0E20               Oled_SetPointer@pag 0072  
             Oled_SetPointer@seg 0076                         atoi@sign 007A                       _RC6PPSbits 0EA6  
                   _SSP1STATbits 0214                 ?_SavePhoneNumber 0078                  _Oled_SetPointer 10EC  
           __size_of_ShowMessage 0025                  ?_MFRC522_ToCard 0020            _Left_HorizontalScroll 1F47  
                     _INTER_Init 1D70                         isdigit@c 0071             __end_of_CheckBattery 03B1  
     __size_of_ShowReceptionIcon 0022          CheckBattery@battLoadInt 0059                  ?_MFRC522_isCard 0070  
           __size_of_SettingMenu 00BF          __end_of_Oled_FillScreen 1024                      _screenTimer 0060  
                      sprintf@ap 002B                        sprintf@sp 0020             __end_of_ACC_WriteReg 1EC6  
                      strchr@chr 0072                 ___lwmod@dividend 007A                        strchr@ptr 0070  
              __CFG_CLKOUTEN$OFF 0000             __end_of_CheckNetwork 02D7                        strcspn@s1 0077  
                      strcspn@s2 0079                      _PPSLOCKbits 0E0F                  _UART_Write_Text 1E20  
                       sprintf@c 0032                         sprintf@f 0022                         strcat@cp 0074  
                       strcat@to 0070                    ___delay_sec@n 0070                         strcmp@s1 0074  
                       strcmp@s2 0070                  ___lwmod@divisor 0078                         strcpy@cp 0073  
                       strlen@cp 0074                         strcpy@to 0074                  ___lwmod@counter 007D  
                       strcspn@i 0020             __size_of___delay_sec 0017                       _UART_Write 1CF0  
                       strtok@s1 0022                         strtok@s2 0024                         strspn@s1 0077  
                       strspn@s2 0079                         strtok@sp 0064                 UART_Write_Text@i 0074  
      __size_of_ResetScreenTimer 0006              __end_of_Battery8x21 0D18                      ?_MFRC522_Rd 0070  
                    ?_MFRC522_Wr 0074  
